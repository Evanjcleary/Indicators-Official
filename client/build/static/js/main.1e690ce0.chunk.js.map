{"version":3,"sources":["components/Nav/index.js","config/Fire.js","utils/API.js","components/BasicLogin/index.js","pages/Home.js","components/SourceSelector/index.js","components/TargetMarketSelector/index.js","components/AppointmentCreator/index.js","components/ProtegeCallBtnContainer2/index.js","components/AppointmentItem/index.js","components/DialDataSide/index.js","components/SourceCreator/index.js","components/TargetMarketCreator/index.js","components/MainDataViewer/index.js","components/NoteCreator/index.js","components/NoteViewer/index.js","components/SalesCreator/index.js","components/SalesItem/index.js","components/MainCalendar/index.js","pages/ProtegeDash.js","components/MentorDataViewer/index.js","components/NoteViewerMentor/index.js","components/NoteCreatorMentor/index.js","components/SalesCreatorMentor/index.js","components/SalesItemMentor/index.js","components/AppointmentCreatorMentor/index.js","pages/MentorDash.js","components/CreateProtegeForm/index.js","components/CreateMentorForm/index.js","components/DataViewerDialChart/index.js","components/DataViewerContactChart/index.js","components/DataViewerAppointmentChart/index.js","components/DataViewerCFDialChart/index.js","components/DataViewerCFContactChart/index.js","components/DataViewerCFAppointmentChart/index.js","components/DataViewerBODialChart/index.js","components/DataViewerBOContactChart/index.js","components/DataViewerBOAppointmentChart/index.js","components/DataViewerProspectPerformance/index.js","components/DataViewerClientPerformance/index.js","components/DataViewerNaturalPerformance/index.js","components/DataViewerSuspectPerformance/index.js","components/DataViewerReferralPerformance/index.js","components/DataViewerTargetPerformance/index.js","components/ManagerDataViewer/index.js","components/ProtegeViewContainer/index.js","pages/ManagerDash.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","state","image","componentDidMount","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","BASEURL","APIKEY","API","getDials","axios","get","getWeeklyDials","getWeeklyAppts","getMonthlyDials","getMonthlyAppts","logCall","data","post","saveAppointment","saveAppointmentMentor","saveSale","saveSaleMentor","getAppointments","getSales","getMentorSales","getMentorAppts","updateAppointment","put","updateSale","deleteAppointment","delete","deleteSale","createUser","updateProtege","createMentor","saveNote","saveNoteMentor","getMentorNotes","getProtegeNotes","completeNote","uncompleteNote","deleteNote","getUserData","getUserDataById","getProtege","saveSourceToProtege","saveTargetMktToProtege","getMentor","getMentorById","addProtegeToMentor","addMentorToProtege","removeProtegeFromMentor","removeMentorFromProtege","getMentors","getProteges","getContacts","randomBooks","searchBooks","query","getSavedBooks","saveBook","bookData","deleteBook","BasicLogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","e","preventDefault","auth","signInWithEmailAndPassword","email","password","then","res","cogoToast","success","console","log","user","uid","checkCredentials","catch","error","protege","mentor","length","document","location","err","handleInputChange","event","_event$target","target","name","value","setState","defineProperty","userData","onChange","aria-describedby","placeholder","onClick","Home","username","components_Nav","style","backgroundSize","margin","backgroundImage","marginTop","class","components_BasicLogin","SourceSelector","source","leadSource","setTimeout","setParentState","float","textAlign","marginRight","width","border","fontSize","sources","map","key","TargetMarketSelector","targetMarket","targetMarkets","AppointmentCreator","apptname","apptsource","apptnotes","apptdate","appttargetmkt","apptTagged","apptTime","showAppt","openEditModal","editModalIsOpen","afterOpenEditModal","closeEditModal","handleApptSubmit","userID","ApptData","notes","date","dialer","time","info","rerender","showApptForm","padding","color","height","overflow","borderRadius","mentors","_id","firstName","lastName","ProtegeCallBtnContainer","modalIsOpen","appttype","userdials","otherAttributes","mentorTagged","typeOfCall","callResult","customStyles","content","top","left","right","bottom","transform","backgroundColor","setCount","openModal","afterOpenModal","closeModal","handleContactCallSubmit","typeOfDial","levelOfDial","dialData","level","contact","handleScheduledApptSubmit","scheduled","handleMissedCallSubmit","dialDate","moment","Date","format","findDials","handleCallSubmit","dialType","recordDial","subtract","marginLeft","levelofDial","allMentors","components_SourceSelector","components_TargetMarketSelector","setParentStateTargetMkt","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","components_AppointmentCreator","AppointmentItem","setMentorName","mentorName","i","setMentorTag","handleApptUpdate","prepEditModal","deleteAppt","_this2","Fragment","headerFont","clear","textFont","ariaHideApp","DialDataSide","setInterval","parseWeeklyDials","parseWeeklyContacts","parseWeeklyAppts","wCPD","wBPD","wCCD","wBCD","wCND","wBND","wCSD","wBSD","wCRD","wBRD","wCTD","wBTD","CPDials","BPDials","CCDials","BCDials","CNDials","BNDials","CSDials","BSDials","CRDials","BRDials","CTDials","BTDials","wCPC","wBPC","wCCC","wBCC","wCNC","wBNC","wCSC","wBSC","wCRC","wBRC","wCTC","wBTC","CPContacts","BPContacts","CCContacts","BCContacts","CNContacts","BNContacts","CSContacts","BSContacts","CRContacts","BRContacts","CTContacts","BTContacts","wCPA","wBPA","wCCA","wBCA","wCNA","wBNA","wCSA","wBSA","wCRA","wBRA","wCTA","wBTA","CPAppts","BPAppts","CCAppts","BCAppts","CNAppts","BNAppts","CSAppts","BSAppts","CRAppts","BRAppts","CTAppts","BTAppts","showDialChart","showContactChart","showApptChart","es","labels","datasets","options","legend","display","SourceCreator","showCreateSource","handleSuccess","handleFormSubmit","showCreate","TargetMarketCreator","showTarget","showTargetCreate","MainDataViewer","getNumContacts","localNumContacts","updateContacts","num","numContacts","viewDialChart","showCashflowDials","showCashflowContacts","showCashflowAppts","showBusinessDials","showBusinessContacts","showBusinessAppts","showProspectPerformance","showClientPerformance","showNaturalPerformance","showSuspectPerformance","showReferralPerformance","showTargetPerformance","showSourcePerformance","showSelectedTargetPerformance","viewContactChart","viewApptChart","viewCFDialChart","viewCFContactChart","viewCFApptChart","viewBODialChart","viewBOContactChart","viewBOApptChart","viewProspectPerformance","viewClientPerformance","viewNaturalPerformance","viewSuspectPerformance","viewReferralPerformance","viewTargetPerformance","viewSourcePerformance","viewSelectedTargetPerformance","gatherSourceData","parsedSourceData","parsedDials","parsedContacts","parsedAppts","push","j","contactData","k","apptData","sourceDialData","sourceContactData","sourceApptData","parseSourceAppts","parseSourceContacts","parseSourceDials","CPD","BPD","CCD","BCD","CND","BND","CSD","BSD","CRD","BRD","CTD","BTD","SDials","SCPDials","SBPDials","SCCDials","SBCDials","SCNDials","SBNDials","SCSDials","SBSDials","SCRDials","SBRDials","SCTDials","SBTDials","SourceDials","CPC","BPC","CCC","BCC","CNC","BNC","CSC","BSC","CRC","BRC","CTC","BTC","SContacts","SCPContacts","SBPContacts","SCCContacts","SBCContacts","SCNContacts","SBNContacts","SCSContacts","SBSContacts","SCRContacts","SBRContacts","SCTContacts","SBTContacts","SourceContacts","CPA","BPA","CCA","BCA","CNA","BNA","CSA","BSA","CRA","BRA","CTA","BTA","SAppts","SCPAppts","SBPAppts","SCCAppts","SBCAppts","SCNAppts","SBNAppts","SCSAppts","SBSAppts","SCRAppts","SBRAppts","SCTAppts","SBTAppts","SourceAppts","gatherTargetData","parsedTargetData","targetDialData","targetContactData","targetApptData","parseTargetAppts","parseTargetContacts","parseTargetDials","TDials","TCPDials","TBPDials","TCCDials","TBCDials","TCNDials","TBNDials","TCSDials","TBSDials","TCRDials","TBRDials","TCTDials","TBTDials","TargetDials","TContacts","TCPContacts","TBPContacts","TCCContacts","TBCContacts","TCNContacts","TBNContacts","TCSContacts","TBSContacts","TCRContacts","TBRContacts","TCTContacts","TBTContacts","TargetContacts","TAppts","TCPAppts","TBPAppts","TCCAppts","TBCAppts","TCNAppts","TBNAppts","TCSAppts","TBSAppts","TCRAppts","TBRAppts","TCTAppts","TBTAppts","TargetAppts","showDataOption","dataOption","showCategoryOption","categoryOption","numScheduled","label","borderColor","position","boxWidth","Math","round","concat","sourceAppts","targetAppts","NoteCreator","handleNoteSubmit","NoteData","noteText","noteAuthor","noteTagged","completed","noteAuthorName","showNoteForm","oveflow","shards_react_es","NoteViewer","handleNoteChange","updateNote","noteID","noteChosen","noteToDelete","borderWidth","marginBottom","taggedNotes","note","textIndent","dist_default","created_at","durationFromNow","SalesCreator","saleType","saleName","saleSource","saleNotes","saleDate","saleTargetMkt","saleTagged","saleCommission","salePercentage","saleTaggedPercentage","saleProduct","showSale","handleSaleSubmit","SaleData","clientType","product","commission","parseInt","percentageProtege","percentageMentor","showSaleForm","SalesItem","saleWriter","handleSaleUpdate","salesData","loading","DemoApp","events","sortAppts","apptArray","appointments","title","react_main_esm","defaultView","plugins","dayGridPlugin","weekends","React","ProtegeDash","proteges","showDials","showNotes","showAnalytics","showAppts","showSales","showNoteViewer","showSideBars","gatherMentors","gatherProteges","todayDate","weekPrior","weeklyDials","weeklyAppts","parseWeeklyAppointments","dials","getContactData","gatherAppointments","gatherSales","parseDials","getProtegeNoteData","parseContacts","parseAppointments","sales","gatherNotes","showApptViewer","wCPAppts","wBPAppts","wCCAppts","wBCAppts","wCNAppts","wBNAppts","wCSAppts","wBSAppts","wCRAppts","wBRAppts","wCTAppts","wBTAppts","wCPDials","wBPDials","wCCDials","wBCDials","wCNDials","wBNDials","wCSDials","wBSDials","wCRDials","wBRDials","wCTDials","wBTDials","wCPContacts","wBPContacts","wCCContacts","wBCContacts","wCNContacts","wBNContacts","wCSContacts","wBSContacts","wCRContacts","wBRContacts","wCTContacts","wBTContacts","showSalesViewer","showSaleViewer","handleScopeChange","scopeSelected","monthlyDials","parseMonthlyDials","parseMonthlyContacts","monthlyAppts","parseMonthlyAppts","components_MainDataViewer","ProtegeCallBtnContainer2","components_SourceCreator","components_TargetMarketCreator","components_NoteCreator","paddingTop","components_NoteViewer","components_SalesCreator","showAnalyticsMini","zIndex","MainCalendar_DemoApp","appt","components_AppointmentItem","held","sold","sale","components_SalesItem","components_DialDataSide","MentorDataViewer","showAnalyticsData","protegeData","NoteViewerMentor","NoteCreatorMentor","SalesCreatorMentor","SalesItemMentor","AppointmentCreatorMentor","protegeID","MentorDash","protegeSelected","postedNotes","viewMainData","viewAppointments","viewNotes","viewSales","getMentorData","getProtegeData","getMentorNoteData","gatherMentorSales","gatherMentorAppts","mentorViewAppts","newestProtegeIndex","getNextProtegeData","handleProtegeChange","_this3","components_MentorDataViewer","components_AppointmentCreatorMentor","components_NoteCreatorMentor","components_NoteViewerMentor","components_SalesCreatorMentor","components_SalesItemMentor","CreateProtegeForm","signup","createUserWithEmailAndPassword","manager","handleArrayChange","handleArrayAddition","toConsumableArray","designation","CreateMentorForm","DataViewerDialChart","activeProtegeData","DataViewerContactChart","DataViewerAppointmentChart","DataViewerCFDialChart","DataViewerCFContactChart","DataViewerCFAppointmentChart","DataViewerBODialChart","DataViewerBOContactChart","DataViewerBOAppointmentChart","DataViewerProspectPerformance","DataViewerClientPerformance","DataViewerNaturalPerformance","DataViewerSuspectPerformance","DataViewerReferralPerformance","DataViewerTargetPerformance","ManagerDataViewer","updatedProtegeFirstName","updatedProtegeLastName","updatedProtegeAlmaMater","updatedProtegeHomeTown","updatedProtegeProfilePicture","assignProtegeFields","imageURL","almaMater","homeTown","updatedProtegeStartQuarter","startQuarter","submitProtegeUpdate","handleSourceChange","_event$target2","changeSourceData","handleTargetChange","_event$target3","changeTargetData","showProtegeAnalytics","showProtegeAnalyticsViewer","showMentorAnalyticsViewer","showGlobalAnalyticsViewer","activeMentorDataPopulated","activeProtegeDataPopulated","allProtegeData","showMentorAnalytics","allMentorData","activeMentorsProtegeDataPopulated","activeMentorsProtegeData","showGlobalAnalytics","viewProtegeData","updatedProfileHomeTown","updatedProfileAlmaMater","protegeToView","viewMentorsProtegeData","activeMentorProtegeData","mentorsProtegeToView","getMContactData","viewMentorData","mentorToView","activeMentorData","getMentorAppointmentData","mentorAppts","mentorSales","viewProtegeCallData","viewProtegeSchedule","viewProtegeAppointments","viewProtegeSales","viewProtegeNotes","viewProtegeProfile","viewProtegeWeeklyReport","viewProtegeMonthlyReport","viewProtegeBenchmarkReport","viewMentorsProtegeStatistics","viewMentorSchedule","viewMentorAppointments","viewMentorSales","viewMentorWeeklyReport","viewMentorMonthlyReport","viewMentorBenchmarkReport","updateProtegeLastName","components_DataViewerDialChart","components_DataViewerContactChart","components_DataViewerAppointmentChart","components_DataViewerCFDialChart","components_DataViewerCFContactChart","components_DataViewerCFAppointmentChart","components_DataViewerBODialChart","components_DataViewerBOContactChart","components_DataViewerBOAppointmentChart","components_DataViewerProspectPerformance","category","components_DataViewerClientPerformance","components_DataViewerNaturalPerformance","components_DataViewerSuspectPerformance","components_DataViewerReferralPerformance","components_DataViewerTargetPerformance","postNotes","trunc","ProtegeViewContainer","runRefresh","allDials","allAppts","interval","scope","activeScope","componentWillUnmount","clearInterval","weeklyContacts","monthlyContacts","totalContacts","alt","src","activescope","ManagerDash","mentorSelected","mentorSelectedData","editMentorDataFirstName","editMentorDataLastName","editMentorDataProteges","editMentorProtegeToAdd","showCreateMentorForm","showCreateProtegeForm","showCreateTool","showAnalyticsTool","showReportsTool","showSalesTool","showProtegeActivity","mentorToAdd","protegeToAdd","handleMentorSelection","handleProtegeSelection","protegeSelectedData","editProtegeDataFirstName","editProtegeDataLastName","editProtegeDataMentors","ProtegeID","MentorID","showAnalyticsTools","showReports","showActivityTracker","showCreateProtegeFormFN","showCreateMentorFormFN","sessionScopeSelected","components_ProtegeViewContainer","components_CreateProtegeForm","components_CreateMentorForm","components_ManagerDataViewer","App","authListener","onAuthStateChanged","react_router_dom","react_router","exact","path","src_pages_Home","pages_ProtegeDash","pages_MentorDash","pages_ManagerDash","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"snBAoDeA,2NA/CbC,MAAQ,CACNC,MAAO,MAGTC,kBAAoB,qFAOlB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,kBAIAJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpLV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAWlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BQ,GAAG,0BAC3CX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,YAA7B,sBAEFJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,UAAUD,UAAU,eAA5B,uBAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,WAAWD,UAAU,eAA7B,kCAxCIS,wCCcHC,iBAJFC,IAASC,cATP,CACXC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,kCCRnBC,EAAU,iDACVC,EAAS,+CAGEC,EAAA,CACXC,SAAU,WACN,OAAOC,IAAMC,IAAI,uBAErBC,eAAgB,SAASjB,GACrB,OAAOe,IAAMC,IAAI,qBAAuBhB,IAE5CkB,eAAgB,SAASlB,GACrB,OAAOe,IAAMC,IAAI,4BAA8BhB,IAEnDmB,gBAAiB,SAASnB,GACtB,OAAOe,IAAMC,IAAI,sBAAwBhB,IAE7CoB,gBAAiB,SAASpB,GACtB,OAAOe,IAAMC,IAAI,6BAA+BhB,IAEpDqB,QAAS,SAASrB,EAAIsB,GAClB,OAAOP,IAAMQ,KAAK,sBAAwBvB,EAAIsB,IAElDE,gBAAiB,SAASxB,EAAIsB,GAC1B,OAAOP,IAAMQ,KAAK,mBAAqBvB,EAAIsB,IAE/CG,sBAAuB,SAASzB,EAAIsB,GAChC,OAAOP,IAAMQ,KAAK,0BAA4BvB,EAAIsB,IAEtDI,SAAU,SAASJ,GACf,OAAOP,IAAMQ,KAAK,mBAAoBD,IAE1CK,eAAgB,SAASL,GACrB,OAAOP,IAAMQ,KAAK,0BAA2BD,IAEjDM,gBAAiB,SAAS5B,GACtB,OAAOe,IAAMC,IAAI,0BAA4BhB,IAEjD6B,SAAU,SAAS7B,GACf,OAAOe,IAAMC,IAAI,oBAAsBhB,IAE3C8B,eAAgB,SAAS9B,GACrB,OAAOe,IAAMC,IAAI,2BAA6BhB,IAElD+B,eAAgB,SAAS/B,GACrB,OAAOe,IAAMC,IAAI,2BAA6BhB,IAElDgC,kBAAmB,SAAShC,EAAIsB,GAC5B,OAAOP,IAAMkB,IAAI,0BAA4BjC,EAAIsB,IAErDY,WAAY,SAASlC,EAAIsB,GACrB,OAAOP,IAAMkB,IAAI,oBAAsBjC,EAAIsB,IAE/Ca,kBAAmB,SAASnC,GACxB,OAAOe,IAAMqB,OAAO,0BAA4BpC,IAEpDqC,WAAY,SAASrC,GACjB,OAAOe,IAAMqB,OAAO,oBAAsBpC,IAE9CsC,WAAY,SAAShB,GACjB,OAAOP,IAAMQ,KAAK,0BAA2BD,IAEjDiB,cAAe,SAASvC,EAAIsB,GACxB,OAAOP,IAAMkB,IAAI,2BAA6BjC,EAAIsB,IAEtDkB,aAAc,SAASlB,GACnB,OAAOP,IAAMQ,KAAK,yBAA0BD,IAEhDmB,SAAU,SAASzC,EAAIsB,GACnB,OAAOP,IAAMQ,KAAK,qBAAuBvB,EAAIsB,IAEjDoB,eAAgB,SAAS1C,EAAIsB,GACzB,OAAOP,IAAMQ,KAAK,gCAAkCvB,EAAIsB,IAE5DqB,eAtEW,SAsEI3C,GACX,OAAOe,IAAMC,IAAI,gCAAkChB,IAEvD4C,gBAzEW,SAyEK5C,GACZ,OAAOe,IAAMC,IAAI,sBAAwBhB,IAE7C6C,aAAc,SAAS7C,EAAIsB,GACvB,OAAOP,IAAMkB,IAAI,qBAAuBjC,EAAIsB,IAEhDwB,eAAgB,SAAS9C,EAAIsB,GACzB,OAAOP,IAAMC,IAAI,qBAAuBhB,EAAIsB,IAEhDyB,WAAY,SAAS/C,GACjB,OAAOe,IAAMqB,OAAO,qBAAuBpC,IAE/CgD,YAAa,SAAShD,GAClB,OAAOe,IAAMC,IAAI,wBAA0BhB,IAE/CiD,gBAxFW,SAwFKjD,GACZ,OAAOe,IAAMC,IAAI,4BAA8BhB,IAEnDkD,WAAY,SAASlD,GACjB,OAAOe,IAAMC,IAAI,2BAA6BhB,IAElDmD,oBAAqB,SAASnD,EAAIsB,GAC9B,OAAOP,IAAMQ,KAAK,wBAA0BvB,EAAIsB,IAEpD8B,uBAAwB,SAASpD,EAAIsB,GACjC,OAAOP,IAAMQ,KAAK,wBAA0BvB,EAAIsB,IAEpD+B,UAAW,SAASrD,GAChB,OAAOe,IAAMC,IAAI,0BAA4BhB,IAEjDsD,cAAe,SAAStD,GACpB,OAAOe,IAAMC,IAAI,+BAAiChB,IAEtDuD,mBAAoB,SAASvD,EAAIsB,GAC7B,OAAOP,IAAMkB,IAAI,+BAAiCjC,EAAIsB,IAE1DkC,mBAAoB,SAASxD,EAAIsB,GAC7B,OAAOP,IAAMkB,IAAI,gCAAkCjC,EAAIsB,IAE3DmC,wBAAyB,SAASzD,EAAIsB,GAClC,OAAOP,IAAMQ,KAAK,+BAAiCvB,EAAIsB,IAE3DoC,wBAAyB,SAAS1D,EAAIsB,GAClC,OAAOP,IAAMQ,KAAK,gCAAkCvB,EAAIsB,IAE5DqC,WAAY,WACR,OAAO5C,IAAMC,IAAI,4BAErB4C,YAAa,WACT,OAAO7C,IAAMC,IAAI,4BAErB6C,YAAa,SAAS7D,GAClB,OAAOe,IAAMC,IAAI,uBAAyBhB,IAE9C8D,YAAa,WACT,OAAO/C,IAAMC,IAAIL,EAAU,QAAUC,IAEzCmD,YAAa,SAASC,GAClB,OAAOjD,IAAMC,IAAIL,EAAUqD,EAAQpD,IAEvCqD,cAAe,WACX,OAAOlD,IAAMC,IAAI,eAErBkD,SAAU,SAASC,GACf,OAAOpD,IAAMQ,KAAK,aAAc4C,IAEpCC,WAAY,SAASpE,GACjB,OAAOe,IAAMqB,OAAO,cAAgBpC,aClD7BqE,cA1FX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQVQ,MAAQ,SAAAC,GACJA,EAAEC,iBACF9E,EAAK+E,OAAOC,2BAA2BX,EAAKrF,MAAMiG,MAAOZ,EAAKrF,MAAMkG,UAAUC,KAAK,SAACC,GAChFC,IAAUC,QAAQ,yBAA2BF,GAC7CG,QAAQC,IAAIJ,EAAIK,KAAKC,KACrBrB,EAAKsB,iBAAiBP,EAAIK,KAAKC,OAEhCE,MAAM,SAACC,GACNN,QAAQC,IAAIK,MAjBDxB,EAqBnBsB,iBAAmB,SAACD,GAEhB,IAAII,GAAU,EACVC,GAAS,EACbR,QAAQC,IAAIM,EAASC,GAErBpF,EAAIqC,WAAW0C,GACVP,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,GACRA,EAAIhE,KAAK4E,OAAS,GAClBT,QAAQC,IAAI,2BACZM,GAAU,EACVG,SAASC,SAAS3G,KAAO,YAEzBoB,EAAIwC,UAAUuC,GACTP,KAAK,SAAAC,GACEA,EAAIhE,KAAK4E,OAAS,IAClBT,QAAQC,IAAI,0BACZO,GAAS,EACTE,SAASC,SAAS3G,KAAO,aAE9BqG,MAAM,SAAAO,GAAG,OACRZ,QAAQC,IAAI,8BAEzBI,MAAM,SAAAO,GAAG,OACRZ,QAAQC,IAAI,kCA9CLnB,EAmDnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KApDZpC,EAAKrF,MAAQ,CACTiG,MAAO,GACPC,SAAU,GACV0B,SAAU,IALCvC,wEA4Df,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAMiG,MAAO4B,SAAUrC,KAAK4B,kBAAmB5G,KAAK,QAAQgH,KAAK,QAAQlH,UAAU,eAAeQ,GAAG,qBAAqBgH,mBAAiB,YAAYC,YAAY,gBACtL5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAMkG,SAAU2B,SAAUrC,KAAK4B,kBAAmB5G,KAAK,WAAWgH,KAAK,WAAWlH,UAAU,eAAeQ,GAAG,wBAAwBiH,YAAY,aAIrK5H,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKI,MAAOtF,UAAU,wBAAvC,WAIJH,EAAAC,EAAAC,cAAA,mBA7ESU,aC0DVkH,6MAvDXjI,MAAQ,CACJyG,KAAM,GACNyB,SAAU,GACVhC,SAAU,uFAIVK,QAAQC,IAAI,qDAIZ,OACIrG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC8H,EAAD,MACAhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAEC,eAAgB,QAASC,OAAQ,sBAAuBC,gBAAiB,8BAS7GpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAACI,UAAW,KACpCrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKoI,MAAM,eACPtI,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,OAAKoI,MAAM,aACPtI,EAAAC,EAAAC,cAAA,iGACAF,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,kEAKZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKoI,MAAM,eACPtI,EAAAC,EAAAC,cAAA,+BAEJF,EAAAC,EAAAC,cAAA,OAAKoI,MAAM,aACPtI,EAAAC,EAAAC,cAACqI,EAAD,kBA/Cb3H,8BC4CJ4H,4NA3CX3I,MAAQ,CACJ4I,OAAQ,GACRC,WAAY,UAQhBzB,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,IAGZqB,WAAW,WAAQzD,EAAKD,MAAM2D,eAAe1D,EAAKrF,MAAM6I,aAAe,2HASvE,OACI1I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO+H,MAAO,CAACY,MAAO,OAAQC,UAAW,OAAQC,YAAa,OAAQC,MAAO,QAASC,OAAQ,SAA9F,aAAiHjJ,EAAAC,EAAAC,cAAA,QAAM+H,MAAO,CAACiB,SAAU,KAAxB,eAChH7D,KAAKJ,MAAMwC,SAAS0B,QAAUnJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,GAAGR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM6I,WAAYhB,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAE3HrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACCjC,KAAKJ,MAAMwC,SAAS0B,QAAQC,IAAI,SAAAX,GAAM,OACnCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAEjC,cArCH7H,cC2Cd0I,qNA1CXzJ,MAAQ,CACJ4I,OAAQ,GACRc,aAAc,UAQlBtC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,IAGZqB,WAAW,WAAQzD,EAAKD,MAAM2D,eAAe1D,EAAKrF,MAAM0J,eAAiB,2HASzE,OACIvJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO+H,MAAO,CAACY,MAAO,OAAQC,UAAW,OAAQC,YAAa,OAAQC,MAAO,QAASC,OAAQ,SAA9F,oBAAyHjJ,EAAAC,EAAAC,cAAA,QAAM+H,MAAO,CAACiB,SAAU,KAAxB,eACxH7D,KAAKJ,MAAMwC,SAAS+B,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM0J,aAAc7B,SAAUrC,KAAK4B,kBAAmBI,KAAK,gBACjJrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,0BACCjC,KAAKJ,MAAMwC,SAAS+B,cAAcJ,IAAI,SAAAhC,GAAM,OACzCpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQjH,UAAU,mBAAmBmH,MAAOF,GAASA,MAE9D,cApCGxG,cCqOpB6I,qNAlOX5J,MAAQ,CACJ6J,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZC,SAAU,GACVC,UAAU,KAqBdhD,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzBG,iBAAmB,SAAApD,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,yCAA2CnB,EAAKD,MAAMsF,QAElE,IAAIC,EAAW,CACXd,SAAUxE,EAAKrF,MAAM6J,SACrBjB,OAAQvD,EAAKrF,MAAM8J,WACnBc,MAAOvF,EAAKrF,MAAM+J,UAClBc,KAAMxF,EAAKrF,MAAMgK,SACjBc,OAAQzF,EAAKD,MAAMsF,OACnBlK,KAAM6E,EAAKrF,MAAMQ,KACjBkJ,aAAcrE,EAAKrF,MAAMiK,cACzBc,KAAM1F,EAAKrF,MAAMmK,UAGrB5D,QAAQC,IAAImE,GAIZhJ,EAAIW,gBAAgB+C,EAAKD,MAAMsF,OAAQ,CACnCb,SAAUxE,EAAKrF,MAAM6J,SACrBjB,OAAQvD,EAAKrF,MAAM8J,WACnBc,MAAOvF,EAAKrF,MAAM+J,UAClBc,KAAMxF,EAAKrF,MAAMgK,SACjBxJ,KAAM6E,EAAKrF,MAAMQ,KACjBsK,OAAQzF,EAAKD,MAAMsF,OACnBhB,aAAcrE,EAAKrF,MAAMiK,cACzBnD,QAASzB,EAAKD,MAAMsF,OACpB3D,OAAQ1B,EAAKrF,MAAMkK,WACnBa,KAAM1F,EAAKrF,MAAMmK,WAClBhE,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,iBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,KAE3B2B,WAAW,WAEPzD,EAAKD,MAAM6F,YACZ,QAKPC,aAAe,YACiB,IAAxB7F,EAAKrF,MAAMoK,SACX/E,EAAKqC,SAAS,CACV0C,UAAU,IAGd/E,EAAKqC,SAAS,CACV0C,UAAU,yFAvFU,IAAxB5E,KAAKJ,MAAMgF,UACX5E,KAAKkC,SAAS,CACV0C,UAAU,qCA6FlB,OACIjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASQ,GAAG,WAAWsH,MAAO,CAAEa,UAAW,OAAQkC,QAAS,MACvEhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MACA+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,KADhF,qBAGAnI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAK0F,cAA9D,WAIT1F,KAAKxF,MAAMoK,SACRjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,OAAQE,OAAQ,QAASC,SAAU,SAE5EnL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,QAASD,QAAS,OAAQI,aAAc,SAGzDpL,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMQ,KAAMqH,SAAUrC,KAAK4B,kBAAmBI,KAAK,OAAOhH,KAAK,QAC5FL,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,6BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,6BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,oBAEJtH,EAAAC,EAAAC,cAAA,WAMAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM6J,SAAUhC,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,kCAI1J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgK,SAAUnC,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCAEtJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMmK,SAAUtC,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,SACnHL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,0BAECmF,KAAKJ,MAAMoG,QACRrL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKJ,MAAM8E,WAAYrC,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACtFrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,iBACCjC,KAAKJ,MAAMoG,QAAQjC,IAAI,SAAAxC,GAAM,OAC1B5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAG7E,KAENxL,EAAAC,EAAAC,cAAA,WAIAF,EAAAC,EAAAC,cAAA,4BAECmF,KAAKJ,MAAMwC,SAAS0B,QAAUnJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM8J,WAAYjC,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACrHrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,iBACCjC,KAAKJ,MAAMwC,SAAS0B,QAAQC,IAAI,SAAAX,GAAM,OACnCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAEjCzI,EAAAC,EAAAC,cAAA,uCAEZF,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,4BAECmF,KAAKJ,MAAMwC,SAAS+B,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMiK,cAAepC,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBAC9HrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,iBACCjC,KAAKJ,MAAMwC,SAAS+B,cAAcJ,IAAI,SAAAhC,GAAM,OACzCpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQE,MAAOF,GAASA,MAEjCpH,EAAAC,EAAAC,cAAA,4CAEZF,EAAAC,EAAAC,cAAA,WAIAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+J,UAAWlC,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,wBAE5J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAKiF,kBAA/E,wBAIN,cA5NO1J,+BC4mBlB6K,6MApmBX5L,MAAQ,CACJkI,SAAU,WACV2D,aAAa,EACbhC,SAAU,GACVG,SAAU,GACVF,WAAY,GACZG,cAAe,GACfF,UAAW,GACX+B,SAAU,GACVC,UAAW,GACXC,gBAAiB,KACjBC,aAAc,OACdC,WAAY,OACZC,WAAY,OACZC,aAAc,CACVC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRvD,YAAa,OACbwD,UAAW,wBACXC,gBAAiB,qBAGzBC,SAAU,KAYdxF,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhBoF,UAAY,WACRxH,EAAKqC,SAAS,CACVmE,aAAa,OAIrBiB,eAAiB,eAIjBC,WAAa,WACT1H,EAAKqC,SAAS,CACVmE,aAAa,OAQrBpB,iBAAmB,SAAApD,GACfA,EAAMvB,iBAEN,IAAI6E,EAAW,CACXd,SAAUxE,EAAKrF,MAAM6J,SACrBiB,OAAQzF,EAAKD,MAAMsF,OACnB9B,OAAQvD,EAAKrF,MAAM8J,WACnBc,MAAOvF,EAAKrF,MAAM+J,UAClBc,KAAMxF,EAAKrF,MAAMgK,SACjBxJ,KAAM6E,EAAKrF,MAAM8L,UAGrBvF,QAAQC,IAAImE,GAEZtF,EAAKqC,SAAS,CACVmE,aAAa,IAGjBlK,EAAIW,gBAAgB+C,EAAKD,MAAMsF,OAAQ,CACnCb,SAAUxE,EAAKrF,MAAM6J,SACrBiB,OAAQzF,EAAKD,MAAMsF,OACnBE,MAAOvF,EAAKrF,MAAM+J,UAClBc,KAAMxF,EAAKrF,MAAMgK,SACjBxJ,KAAM6E,EAAKrF,MAAM8L,SACjBlD,OAAQvD,EAAKrF,MAAM8J,WACnBJ,aAAcrE,EAAKrF,MAAMiK,cACzBgC,aAAc5G,EAAKrF,MAAMiM,eAC1B9F,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,kBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,KAE3B9B,EAAKD,MAAM6F,cAQf+B,wBAA0B,SAACC,GACvB,IAAIC,EAAc,GAMdA,EALe,QAAfD,GACe,QAAfA,GACe,QAAfA,GACe,QAAfA,GACe,QAAfA,EACc,WAEA,WAGlB,IAAIE,EAAW,CACXrC,OAAQzF,EAAKD,MAAMqB,KAAKgF,IACxBjL,KAAMyM,EACNG,MAAOF,EACPG,SAAS,GAiBb,OAdA1L,EAAIQ,QAAQkD,EAAKD,MAAMqB,KAAKgF,IAAK,CAC7BX,OAAQzF,EAAKD,MAAMqB,KAAKgF,IACxBjL,KAAMyM,EACNG,MAAOF,EACPG,SAAS,EACTzE,OAAQvD,EAAKD,MAAMwD,OACnBc,aAAcrE,EAAKD,MAAMsE,aACzBuC,aAAc5G,EAAKrF,MAAMiM,eAC1B9F,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,kBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,QAEvBD,QAAQC,IAAI2G,GAEJA,EAAS3M,MACb,IAAK,MAGL,IAAK,MACD6F,IAAUC,QAAQ,uBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,qBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,0BAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,sBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,uBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,QACIC,QAAQC,IAAI,wBAEpBnB,EAAKD,MAAM6F,cAQfqC,0BAA4B,SAACL,GACzB,IAAIC,EAAc,GAOdA,EANe,QAAfD,GACe,QAAfA,GACe,QAAfA,GACe,QAAfA,GACe,QAAfA,GACe,QAAfA,EACc,WAEA,WAGlB,IAAIE,EAAW,CACXrC,OAAQzF,EAAKD,MAAMqB,KAAKgF,IACxBjL,KAAMyM,EACNG,MAAOF,EACPG,SAAS,EACTE,WAAW,GAkBf,OAfA5L,EAAIQ,QAAQkD,EAAKD,MAAMqB,KAAKgF,IAAK,CAC7BX,OAAQzF,EAAKD,MAAMqB,KAAKgF,IACxBjL,KAAMyM,EACNG,MAAOF,EACPG,SAAS,EACTE,WAAW,EACX3E,OAAQvD,EAAKD,MAAMwD,OACnBc,aAAcrE,EAAKD,MAAMsE,aACzBuC,aAAc5G,EAAKrF,MAAMiM,eAC1B9F,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,kBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,QAEvBD,QAAQC,IAAI2G,GAEJA,EAAS3M,MACb,IAAK,MACD6F,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,8BAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,yBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,2BAClB,MACJ,QACIC,QAAQC,IAAI,wBAGpBnB,EAAKqC,SAAS,CACVoE,SAAUmB,EACVhD,cAAe5E,EAAKD,MAAMsE,aAC1BI,WAAYzE,EAAKD,MAAMwD,OACvBiD,aAAa,IAGjBxG,EAAKD,MAAM6F,cAOfuC,uBAAyB,SAACP,GAEtB,IAAIE,EAAW,CACXrC,OAAQzF,EAAKD,MAAMqB,KAAKgF,IACxBjL,KAAMyM,EACNG,MAAO/H,EAAKrF,MAAMkN,aAiBtB,OAfA3G,QAAQC,IAAI2G,GAEZxL,EAAIQ,QAAQkD,EAAKD,MAAMqB,KAAKgF,IAAK,CAC7BX,OAAQzF,EAAKD,MAAMqB,KAAKgF,IACxBjL,KAAMyM,EACNG,MAAO/H,EAAKrF,MAAMkN,YAClBtE,OAAQvD,EAAKD,MAAMwD,OACnBc,aAAcrE,EAAKD,MAAMsE,aACzBuC,aAAc5G,EAAKrF,MAAMiM,aACzBwB,SAAUC,IAAO,IAAIC,MAAQC,OAAO,gBACrCzH,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,kBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,QAGf2G,EAAS3M,MACb,IAAK,MACD6F,IAAUC,QAAQ,6BAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,6BAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,2BAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,gCAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,gCAClB,MACJ,IAAK,MACDD,IAAUC,QAAQ,gCAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,mBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,oBAClB,MACJ,IAAK,MAGL,IAAK,MACDD,IAAUC,QAAQ,sBAClB,MACJ,QACIC,QAAQC,IAAI,wBAEpBnB,EAAKD,MAAM6F,cAGf4C,UAAY,WACRlM,EAAIC,WACCuE,KAAK,SAAAC,GAAG,OACLG,QAAQC,IAAIJ,EAAIhE,QAEnBwE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAGlC2G,iBAAmB,SAACzG,GAKhB,GAJAA,EAAMvB,iBACNS,QAAQC,IAAI,0CAA4CnB,EAAKrF,MAAMkM,YAGrC,SAA1B7G,EAAKrF,MAAMkM,YAAoD,SAA3B7G,EAAKrF,MAAMkN,aAAoD,SAA1B7H,EAAKrF,MAAMmM,WACpF9F,IAAUQ,MAAM,yCAEhB,GAA+B,aAA3BxB,EAAKrF,MAAMkN,YACX,OAAQ7H,EAAKrF,MAAMkM,YACf,IAAK,WACD7G,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,SACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,UACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,UACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,WACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,SACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,QACIzH,QAAQC,IAAI,6CAGjB,GAA+B,aAA3BnB,EAAKrF,MAAMkN,YAClB,OAAQ7H,EAAKrF,MAAMkM,YACf,IAAK,WACD7G,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,SACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,UACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,UACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,WACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,IAAK,SACD3I,EAAKqC,SAAS,CACVqG,SAAU,QAEd1I,EAAK2I,aACL,MACJ,QACIzH,QAAQC,IAAI,4CAShCwH,WAAa,WAETlF,WAAW,WACuB,SAA1BzD,EAAKrF,MAAMiN,YAAoD,SAA3B5H,EAAKrF,MAAMkN,aAAoD,SAA1B7H,EAAKrF,MAAMmM,WACpF9F,IAAUQ,MAAM,oCAEc,eAA1BxB,EAAKrF,MAAMmM,WACX9G,EAAKmI,uBAAuBnI,EAAKrF,MAAM+N,UACN,cAA1B1I,EAAKrF,MAAMmM,WAClB9G,EAAK2H,wBAAwB3H,EAAKrF,MAAM+N,UACP,cAA1B1I,EAAKrF,MAAMmM,YAClB9G,EAAKiI,0BAA0BjI,EAAKrF,MAAM+N,WAMnD,yFApbHxH,QAAQC,IAAI,iBAAmBkH,IAAO,IAAIC,MAAQC,OAAO,eACzDrH,QAAQC,IAAI,iBAAmBkH,MAASO,SAAS,EAAG,KAAKL,OAAO,gDA0chE,OACIzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASQ,GAAG,WAAWsH,MAAO,CAAEa,UAAW,SACtD9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGS,GAAG,iBAAiBsH,MAAO,CAAEa,UAAW,SAAUkC,QAAS,mBAAoBC,MAAO,GAAIG,aAAc,OAAQlC,SAAU,SAA7H,cAEJlJ,EAAAC,EAAAC,cAAA,YAEIF,EAAAC,EAAAC,cAAA,OACA+H,MAAO,CAACgD,MAAO,GAAID,QAAS,OAAQI,aAAc,MAAOF,OAAQ,GAAIjC,OAAQ,SAEzEjJ,EAAAC,EAAAC,cAAA,SAAO+H,MAAO,CAAEY,MAAO,OAAQC,UAAW,GAAIC,YAAa,OAAQC,MAAO,UAA1E,gBAAkGhJ,EAAAC,EAAAC,cAAA,QAAM+H,MAAO,CAAEiB,SAAU,KAAzB,gBAAlG,MAEAlJ,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,CAAE8F,WAAY,QAAUzG,MAAOjC,KAAKxF,MAAMmO,YAAatG,SAAUrC,KAAK4B,kBAAmBI,KAAK,eACzGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,iBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,YAAd,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,YAAd,oBAEJtH,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,CAAE8F,WAAY,QAAUzG,MAAOjC,KAAKxF,MAAMkM,WAAYrE,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACxGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,iBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,YAAd,sBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,UAAd,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,WAAd,kBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,WAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,YAAd,gBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,UAAd,sBASJtH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAO+H,MAAO,CAAEY,MAAO,OAAQC,UAAW,OAAQC,YAAa,OAAQC,MAAO,QAASC,OAAQ,SAA/F,gBAAsHjJ,EAAAC,EAAAC,cAAA,QAAM+H,MAAO,CAAEiB,SAAU,KAAzB,eACrH7D,KAAKJ,MAAMwC,SAASwG,WAAajO,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKxF,MAAMiM,aAAcpE,SAAUrC,KAAK4B,kBAAmBI,KAAK,gBAC7GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,wBACCjC,KAAKJ,MAAMwC,SAASwG,WAAW7E,IAAI,SAAAxC,GAAM,OACtC5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAGzExL,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,QAAtB,6CAENlJ,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAACgO,EAAD,CAAgBzG,SAAUpC,KAAKJ,MAAMwC,SAAUmB,eAAgBvD,KAAKJ,MAAM2D,iBAE1E5I,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACiO,EAAD,CAAsB1G,SAAUpC,KAAKJ,MAAMwC,SAAUmB,eAAgBvD,KAAKJ,MAAMmJ,0BAEhFpO,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAO+H,MAAO,CAAEY,MAAO,OAAQC,UAAW,OAAQC,YAAa,OAAQC,MAAO,QAASC,OAAQ,SAA/F,eAAqHjJ,EAAAC,EAAAC,cAAA,QAAM+H,MAAO,CAAEiB,SAAU,KAAzB,eACrHlJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,GAAGR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMmM,WAAYtE,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC5FrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,cAAd,aACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,aAAd,0BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,aAAd,0BAKRtH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAACa,UAAW,WACxB9I,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,CAAEe,MAAO,MAAOF,UAAW,IAAM3I,UAAU,kBAAkB0H,QAASxC,KAAKsI,kBAA1F,aAEA3N,EAAAC,EAAAC,cAAA,cAcZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,GAAG,gBAC3BX,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,CAAOqO,OAAQjJ,KAAKxF,MAAM6L,YAAa6C,YAAalJ,KAAKsH,eAAgB6B,eAAgBnJ,KAAKuH,WAC1F3E,MAAO5C,KAAKxF,MAAMoM,aAClBwC,aAAa,uBAQbzO,EAAAC,EAAAC,cAACwO,EAAD,CACInE,OAAQlF,KAAKJ,MAAMqB,KAAKgF,IACxBvD,SAAU1C,KAAKJ,MAAM8C,SACrB+C,SAAUzF,KAAKJ,MAAM6F,SACrBrD,SAAUpC,KAAKJ,MAAMwC,SACrB4D,QAAShG,KAAKJ,MAAMoG,QACpBpB,UAAU,cAjlBArJ,aCwOvB+N,mNAxOX9O,MAAQ,CACJsK,iBAAiB,EACjBT,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfgC,aAAc,MAkBlB8C,cAAgB,WAIZ,IAFA,IAAIC,EAAa,GAERC,EAAI,EAAGA,EAAI5J,EAAKD,MAAMoG,QAAQxE,OAAQiI,IACvC5J,EAAKD,MAAM2B,SAAW1B,EAAKD,MAAMoG,QAAQyD,GAAGxD,MAC5CuD,EAAa3J,EAAKD,MAAMoG,QAAQyD,GAAGvD,UAAY,IAAMrG,EAAKD,MAAMoG,QAAQyD,GAAGtD,SAC3EpF,QAAQC,IAAI,sBAAwBwI,GACpC3J,EAAK6J,aAAaF,OAc9BE,aAAe,SAACnI,GACZR,QAAQC,IAAI,wBAA0BO,GACtC1B,EAAKqC,SAAS,CACVuE,aAAclF,OAItBK,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzB6E,iBAAmB,SAAA9H,GACfA,EAAMvB,iBAENT,EAAKqC,SAAS,CACV4C,iBAAiB,IAGrB3I,EAAImB,kBAAkBuC,EAAKD,MAAMtE,GAAI,CACjC+I,SAAUxE,EAAKrF,MAAM6J,SACrBjB,OAAQvD,EAAKrF,MAAM8J,WACnBc,MAAOvF,EAAKrF,MAAM+J,UAClBc,KAAMxF,EAAKrF,MAAMgK,SACjBN,aAAcrE,EAAKrF,MAAMiK,gBAC1B9D,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,mBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAG/BiI,cAAgB,WACZ/J,EAAKqC,SAAS,CACV4C,iBAAiB,EACjBT,SAAUxE,EAAKrF,MAAM6J,SACrBC,WAAYzE,EAAKrF,MAAM8J,WACvBC,UAAW1E,EAAKrF,MAAM+J,UACtBC,SAAU3E,EAAKrF,MAAMgK,cAI7BqF,WAAa,WACT1N,EAAIsB,kBAAkBoC,EAAKD,MAAMtE,IAC5BqF,KAAK,SAAAC,GAAG,OAAIC,IAAUQ,MAAM,kCAC5BD,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,KAE9B2B,WAAW,WAEPzD,EAAKD,MAAM6F,YACZ,yFA9Ga,IAAAqE,EAAA9J,KAGhBA,KAAKkC,SAAS,CACVmC,SAAUrE,KAAKJ,MAAMyE,SACrBC,WAAYtE,KAAKJ,MAAMwD,OACvBmB,UAAWvE,KAAKJ,MAAMwF,MACtBZ,SAAUxE,KAAKJ,MAAMyF,KACrBZ,cAAezE,KAAKJ,MAAMsE,eAG9BZ,WAAW,WAAQwG,EAAKP,iBAAmB,sCAuG3C,OACI5O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACIpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,WAGIF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,SAAUI,SAAU7D,KAAKJ,MAAMoK,aAAehK,KAAKxF,MAAM6J,UAChF1J,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,SAAUI,SAAU,SAAWqE,IAAOlI,KAAKxF,MAAMgK,UAAU4D,OAAO,cAAzF,IAAyGpI,KAAKJ,MAAM2F,KAAO5K,EAAAC,EAAAC,cAAA,oBAAYqN,IAAOlI,KAAKJ,MAAM2F,KAAM,CAAC,UAAU6C,OAAO,YAAoB,QAI7MzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,GAAIsE,MAAO,SACnDjK,KAAKxF,MAAM+J,UACR5J,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,GAAI/B,SAAU7D,KAAKJ,MAAMsK,WAA5C,SAA+DlK,KAAKxF,MAAM+J,WACxE,KAEN5J,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU7D,KAAKJ,MAAMsK,SAAUvG,MAAO,GAAIH,MAAO,KAA7D,WAA4ExD,KAAKxF,MAAMiM,cACvF9L,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU7D,KAAKJ,MAAMsK,SAAUvG,MAAO,GAAIH,MAAO,KAA7D,QACiB,QAApBxD,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,kCAAkC,KAClC,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,uCAAuC,KAC/C,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,0CAA0C,KAClD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,+CAA+C,KACvD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,wCAAwC,KAChD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,6CAA6C,KACrD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,yCAAyC,KACjD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,8CAA8C,KACtD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,kCAAkC,KAC1C,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,wCAAwC,KAChD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,yCAAyC,KACjD,QAApBmF,KAAKJ,MAAM5E,KAAiBL,EAAAC,EAAAC,cAAA,8CAA8C,OAInFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAEa,UAAW,WAC7C9I,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKJ,MAAMtE,GAAIkH,QAASxC,KAAK4J,cAAe9O,UAAU,sBAAsB8H,MAAO,CAAEe,MAAO,QAA3G,QACAhJ,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKJ,MAAMtE,GAAIkH,QAASxC,KAAK6J,WAAY/O,UAAU,wBAAwB8H,MAAO,CAAEe,MAAO,QAA1G,OAMRhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,GAAG,gBAC3BX,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,CACIqO,OAAQjJ,KAAKxF,MAAMsK,gBACnBoE,YAAalJ,KAAK+E,mBAClBoE,eAAgBnJ,KAAKgF,eACrBpC,MAAO5C,KAAK4G,aACZwC,aAAa,sBACbe,aAAa,GAGbxP,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBACNR,UAAU,eACVmH,MAAOjC,KAAKxF,MAAM6J,SAClBhC,SAAUrC,KAAK4B,kBACfI,KAAK,WACLhH,KAAK,OACLuH,YAAY,kCAEhB5H,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgK,SAAUnC,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCAEtJ5H,EAAAC,EAAAC,cAAA,6BAECmF,KAAKJ,MAAMqB,KAAK6C,QACbnJ,EAAAC,EAAAC,cAAA,UAEAoH,MAAOjC,KAAKxF,MAAM8J,WAClBjC,SAAUrC,KAAK4B,kBACfI,KAAK,aACLlH,UAAU,gBAEVH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,2BACCjC,KAAKJ,MAAMqB,KAAK6C,QAAQC,IAAI,SAAAX,GAAM,OAC/BzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAEjCzI,EAAAC,EAAAC,cAAA,0CAEZF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAECmF,KAAKJ,MAAMqB,KAAKkD,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKxF,MAAMiK,cAAepC,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBAE5GhC,KAAKJ,MAAMqB,KAAKkD,cAAcJ,IAAI,SAAAhC,GAAM,OACrCpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQE,MAAOF,GAASA,MAEjCpH,EAAAC,EAAAC,cAAA,4CACZF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+J,UAAWlC,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,uBACxJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAK2J,kBAA/E,iCA9NEpO,qBCkaf6O,cAvaX,SAAAA,EAAYxK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoK,IACfvK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsK,GAAAjK,KAAAH,KAAMJ,KAQVlF,kBAAoB,WACpB2P,YAAY,WACRxK,EAAKyK,mBACLzK,EAAK0K,sBACL1K,EAAK2K,oBACN,MAdgB3K,EAiBnByK,iBAAmB,WAeX,IAZA,IAAIG,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKD,MAAM+H,SAAS8B,GAAGzO,MAC3B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,KAvFFvL,EA6FnB0K,oBAAsB,WAclB,IAZA,IAAI0B,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IAE5C,IAAuC,IAAnC5J,EAAKD,MAAM+H,SAAS8B,GAAG5B,QACvB,OAAQhI,EAAKD,MAAM+H,SAAS8B,GAAGzO,MAC3B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,KApKD/M,EAwKnB2K,iBAAmB,WAcf,IAZA,IAAIiD,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IAE5C,IAAyC,IAArC5J,EAAKD,MAAM+H,SAAS8B,GAAG1B,UAC3B,OAAQlI,EAAKD,MAAM+H,SAAS8B,GAAGzO,MAC3B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,KA7ObvO,EAAKrF,MAAQ,CACTyU,eAAe,EACfC,kBAAkB,EAClBC,eAAe,GALJtP,wEAqPf,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAACuE,gBAAiB,kBAAmBvB,MAAO,eAC/EjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WACrC9I,EAAAC,EAAAC,cAAA,gCAIPmF,KAAKxF,MAAMyU,cACRtU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAACe,MAAO,OAAQE,SAAU,SAApC,cAEAlJ,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAM6Q,QAAUrL,KAAKxF,MAAM+Q,QAAUvL,KAAKxF,MAAMiR,QAAUzL,KAAKxF,MAAMmR,QAAU3L,KAAKxF,MAAMqR,QAAU7L,KAAKxF,MAAMuR,QACpH/L,KAAKxF,MAAMwR,QAAUhM,KAAKxF,MAAM8Q,QAAUtL,KAAKxF,MAAMgR,QAAUxL,KAAKxF,MAAMkR,QAAU1L,KAAKxF,MAAMoR,QAAU5L,KAAKxF,MAAMsR,SAExH3E,gBAAiB,CACb,UACA,cAIZoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAEJ,KACrB9U,EAAAC,EAAAC,cAAA,WAECmF,KAAKxF,MAAMyU,cACRtU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAACe,MAAO,OAAQE,SAAU,SAApC,iBAA4D7D,KAAKJ,MAAM+H,SAASnG,QAEhF7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uBACA,mBACA,iBACA,oBACA,WACA,iBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAM6Q,QAAUrL,KAAKxF,MAAM8Q,QAChCtL,KAAKxF,MAAM+Q,QAAUvL,KAAKxF,MAAMgR,QAChCxL,KAAKxF,MAAMiR,QAAUzL,KAAKxF,MAAMkR,QAChC1L,KAAKxF,MAAMmR,QAAU3L,KAAKxF,MAAMoR,QAChC5L,KAAKxF,MAAMqR,QAAU7L,KAAKxF,MAAMsR,QAChC9L,KAAKxF,MAAMuR,QAAU/L,KAAKxF,MAAMwR,SAEpC7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIZoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAEJ,KACrB9U,EAAAC,EAAAC,cAAA,WAECmF,KAAKxF,MAAM0U,iBACRvU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAACe,MAAO,OAAQE,SAAU,SAApC,mBACC7D,KAAKxF,MAAMqS,WAAa7M,KAAKxF,MAAMsS,WACxB9M,KAAKxF,MAAMuS,WAAa/M,KAAKxF,MAAMwS,WACnChN,KAAKxF,MAAMyS,WAAajN,KAAKxF,MAAM0S,WACnClN,KAAKxF,MAAM2S,WAAanN,KAAKxF,MAAM4S,WACnCpN,KAAKxF,MAAM6S,WAAarN,KAAKxF,MAAM8S,WACnCtN,KAAKxF,MAAM+S,WAAavN,KAAKxF,MAAMgT,YAE/C7S,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uBACA,mBACA,iBACA,oBACA,WACA,iBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMqS,WAAa7M,KAAKxF,MAAMsS,WACnC9M,KAAKxF,MAAMuS,WAAa/M,KAAKxF,MAAMwS,WACnChN,KAAKxF,MAAMyS,WAAajN,KAAKxF,MAAM0S,WACnClN,KAAKxF,MAAM2S,WAAanN,KAAKxF,MAAM4S,WACnCpN,KAAKxF,MAAM6S,WAAarN,KAAKxF,MAAM8S,WACnCtN,KAAKxF,MAAM+S,WAAavN,KAAKxF,MAAMgT,YAEvCrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIZoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAIZ,KAIb9U,EAAAC,EAAAC,cAAA,WACCmF,KAAKxF,MAAM2U,cACRxU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAACe,MAAO,OAAQE,SAAU,SAApC,uBACC7D,KAAKxF,MAAM6T,QAAUrO,KAAKxF,MAAM8T,QACrBtO,KAAKxF,MAAM+T,QAAUvO,KAAKxF,MAAMgU,QAChCxO,KAAKxF,MAAMiU,QAAUzO,KAAKxF,MAAMkU,QAChC1O,KAAKxF,MAAMmU,QAAU3O,KAAKxF,MAAMoU,QAChC5O,KAAKxF,MAAMqU,QAAU7O,KAAKxF,MAAMsU,QAChC9O,KAAKxF,MAAMuU,QAAU/O,KAAKxF,MAAMwU,SAG5CrU,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uBACA,mBACA,iBACA,oBACA,WACA,iBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAM6T,QAAUrO,KAAKxF,MAAM8T,QAChCtO,KAAKxF,MAAM+T,QAAUvO,KAAKxF,MAAMgU,QAChCxO,KAAKxF,MAAMiU,QAAUzO,KAAKxF,MAAMkU,QAChC1O,KAAKxF,MAAMmU,QAAU3O,KAAKxF,MAAMoU,QAChC5O,KAAKxF,MAAMqU,QAAU7O,KAAKxF,MAAMsU,QAChC9O,KAAKxF,MAAMuU,QAAU/O,KAAKxF,MAAMwU,SAEpC7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIZoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAGZ,KACb9U,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,mBA9ZWU,aCsGZmU,qNAhGXlV,MAAQ,CACJ4I,OAAQ,GACRhB,SAAU,GACVuN,kBAAkB,KAQtB/N,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAIhB2N,cAAgB,WACZ/O,IAAUC,QAAQ,wBAItB+O,iBAAmB,SAAAhO,GACfA,EAAMvB,iBACNS,QAAQC,IAAInB,EAAKrF,OACjB2B,EAAIsC,oBAAoBoB,EAAKD,MAAMwC,SAAS6D,IAAK,CAC7C7C,OAAQvD,EAAKrF,MAAM4I,SAElBzC,KAAK,SAAAC,GAAG,OAAIf,EAAK+P,kBACjBxO,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAYlCmO,WAAa,YAC2B,IAAhCjQ,EAAKrF,MAAMmV,iBACX9P,EAAKqC,SAAS,CACVyN,kBAAkB,IAGtB9P,EAAKqC,SAAS,CACVyN,kBAAkB,0HAM1B,OACIhV,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,IAERjI,EAAAC,EAAAC,cAAA,WAGQF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,IAAIjI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,8BAElBpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,GAAIb,OAAQ,MAC7BnI,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM4I,OAAQf,SAAUrC,KAAK4B,kBAAmB9G,UAAU,cAAckH,KAAK,SAASO,YAAY,KACrH5H,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAItH,GAAG,0BAA0BR,UAAU,8BAA8B0H,QAASxC,KAAK6P,kBAAtG,mBAtEJtU,cCkFbwU,qNAhFXvV,MAAQ,CACJ0J,aAAc,GACd9B,SAAU,GACV4N,YAAY,KAQhBpO,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAIhB2N,cAAgB,WACZ/O,IAAUC,QAAQ,+BAItB+O,iBAAmB,SAAAhO,GACfA,EAAMvB,iBACNS,QAAQC,IAAInB,EAAKrF,OACjB2B,EAAIuC,uBAAuBmB,EAAKD,MAAMwC,SAAS6D,IAAK,CAChD/B,aAAcrE,EAAKrF,MAAM0J,eAExBvD,KAAK,SAAAC,GAAG,OAAIf,EAAK+P,kBACjBxO,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAYlCsO,iBAAmB,YACe,IAA1BpQ,EAAKrF,MAAMwV,WACXnQ,EAAKqC,SAAS,CACV8N,YAAY,IAGhBnQ,EAAKqC,SAAS,CACV8N,YAAY,0HAOpB,OACIrV,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,IAGRjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,IAAV,6BAIJjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAACE,OAAQ,IACjBnI,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM0J,aAAc7B,SAAUrC,KAAK4B,kBAAmB9G,UAAU,cAAckH,KAAK,eAAeO,YAAY,KACjI5H,EAAAC,EAAAC,cAAA,UAAQS,GAAG,0BAA0BR,UAAU,8BAA8B0H,QAASxC,KAAK6P,kBAA3F,kBAxEMtU,cCs3FnB2U,sBAv3FX,SAAAA,EAAYtQ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkQ,IACfrQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoQ,GAAA/P,KAAAH,KAAMJ,KA+BVlF,kBAAoB,aAhCDmF,EAqDnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAxDGpC,EA4DnBsQ,eAAiB,WAEb,IADA,IAAIC,EAAmB,EACd3G,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,KACL,IAAnC5J,EAAKD,MAAM+H,SAAS8B,GAAG5B,SACvBuI,IAIRrP,QAAQC,IAAIoP,GACZvQ,EAAKwQ,eAAeD,IArELvQ,EA0EnBwQ,eAAiB,SAAAC,GACbzQ,EAAKqC,SAAS,CACVqO,YAAaD,KA5EFzQ,EAiFnB2Q,cAAgB,YACqB,IAA7B3Q,EAAKrF,MAAMyU,cACXpP,EAAKqC,SAAS,CACV+M,eAAe,IAGnBpP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxGxBzR,EA6GnB0R,iBAAmB,YACqB,IAAhC1R,EAAKrF,MAAM0U,iBACXrP,EAAKqC,SAAS,CACVgN,kBAAkB,IAGtBrP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApIxBzR,EAyInB2R,cAAgB,YACqB,IAA7B3R,EAAKrF,MAAM2U,cACXtP,EAAKqC,SAAS,CACViN,eAAe,IAGnBtP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhKxBzR,EAqKnB4R,gBAAkB,YACuB,IAAjC5R,EAAKrF,MAAMiW,kBACX5Q,EAAKqC,SAAS,CACVuO,mBAAmB,IAGvB5Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5LxBzR,EAiMnB6R,mBAAqB,YACuB,IAApC7R,EAAKrF,MAAMkW,qBACX7Q,EAAKqC,SAAS,CACVwO,sBAAsB,IAG1B7Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxNxBzR,EA6NnB8R,gBAAkB,YACuB,IAAjC9R,EAAKrF,MAAMmW,kBACX9Q,EAAKqC,SAAS,CACVyO,mBAAmB,IAGvB9Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApPxBzR,EAyPnB+R,gBAAkB,YACuB,IAAjC/R,EAAKrF,MAAMoW,kBACX/Q,EAAKqC,SAAS,CACV0O,mBAAmB,IAGvB/Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhRxBzR,EAqRnBgS,mBAAqB,YACuB,IAApChS,EAAKrF,MAAMqW,qBACXhR,EAAKqC,SAAS,CACV2O,sBAAsB,IAG1BhR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5SxBzR,EAiTnBiS,gBAAkB,YACuB,IAAjCjS,EAAKrF,MAAMsW,kBACXjR,EAAKqC,SAAS,CACV4O,mBAAmB,IAGvBjR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxUxBzR,EA6UnBkS,wBAA0B,YACqB,IAAvClS,EAAKrF,MAAMuW,wBACXlR,EAAKqC,SAAS,CACV6O,yBAAyB,IAG7BlR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApWxBzR,EAyWnBmS,sBAAwB,YACqB,IAArCnS,EAAKrF,MAAMwW,sBACXnR,EAAKqC,SAAS,CACV8O,uBAAuB,IAG3BnR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhYxBzR,EAqYnBoS,uBAAyB,YACqB,IAAtCpS,EAAKrF,MAAMyW,uBACXpR,EAAKqC,SAAS,CACV+O,wBAAwB,IAG5BpR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5ZxBzR,EAianBqS,uBAAyB,YACqB,IAAtCrS,EAAKrF,MAAM0W,uBACXrR,EAAKqC,SAAS,CACVgP,wBAAwB,IAG5BrR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxbxBzR,EA6bnBsS,wBAA0B,YACqB,IAAvCtS,EAAKrF,MAAM2W,wBACXtR,EAAKqC,SAAS,CACViP,yBAAyB,IAG7BtR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApdxBzR,EAydnBuS,sBAAwB,YACqB,IAArCvS,EAAKrF,MAAM4W,sBACXvR,EAAKqC,SAAS,CACVkP,uBAAuB,IAG3BvR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhfxBzR,EAqfnBwS,sBAAwB,YACqB,IAArCxS,EAAKrF,MAAM6W,sBACXxR,EAAKqC,SAAS,CACVmP,uBAAuB,IAG3BxR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5gBxBzR,EAihBnByS,8BAAgC,YACqB,IAA7CzS,EAAKrF,MAAM8W,8BACXzR,EAAKqC,SAAS,CACVoP,+BAA+B,IAGnCzR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxiBxBzR,EA6iBnB0S,iBAAmB,SAAC1Q,GAChBA,EAAMvB,iBACNS,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM6I,YAOtD,IALA,IAAImP,EAAmB,CACnBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IACxC5J,EAAKD,MAAM+H,SAAS8B,GAAGrG,SAAWvD,EAAKrF,MAAM6I,YAC7CmP,EAAiBC,YAAYG,KAAK/S,EAAKD,MAAM+H,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKD,MAAMkT,YAAYtR,OAAQqR,IAC3ChT,EAAKD,MAAMkT,YAAYD,GAAGzP,SAAWvD,EAAKrF,MAAM6I,YAChDmP,EAAiBE,eAAeE,KAAK/S,EAAKD,MAAMkT,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKD,MAAMoT,SAASxR,OAAQuR,IACxClT,EAAKD,MAAMoT,SAASD,GAAG3P,SAAWvD,EAAKrF,MAAM6I,YAC7CmP,EAAiBG,YAAYC,KAAK/S,EAAKD,MAAMoT,SAASD,IAI9DzP,WAAW,WAEPzD,EAAKqC,SAAS,CACV+Q,eAAgBT,EAAiBC,YACjCS,kBAAmBV,EAAiBE,eACpCS,eAAgBX,EAAiBG,cAErCrP,WAAW,WACPzD,EAAKuT,mBACLvT,EAAKwT,sBACLxT,EAAKyT,mBAELhQ,WAAW,WAAQzD,EAAKwS,yBAA2B,MACpD,MAEJ,MAvlBYxS,EA2lBnByT,iBAAmB,WACfvS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMyY,gBAcrC,IAbA,IAAIM,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAS,EACJ1K,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMyY,eAAezR,OAAQiI,IAElD,OAAQ5J,EAAKrF,MAAMyY,eAAexJ,GAAGzO,MACjC,IAAK,MACDuY,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDF,IACAE,IACA,MACJ,IAAK,MACDD,IACAC,IACA,MACJ,QACIA,IAIZtU,EAAKqC,SAAS,CACVkS,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,YAAab,KA/qBFtU,EAmrBnBwT,oBAAsB,WAClBtS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM0Y,mBAcrC,IAbA,IAAI+B,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAY,EACPpM,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0Y,kBAAkB1R,OAAQiI,IACrD,OAAQ5J,EAAKrF,MAAM0Y,kBAAkBzJ,GAAGzO,MACpC,IAAK,MACDia,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDA,IACAF,IACA,MACJ,IAAK,MACDE,IACAD,IACA,MACJ,QACIC,IAIZhW,EAAKqC,SAAS,CACV4T,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,eAAgBb,KAtwBLhW,EA0wBnBuT,iBAAmB,WACfrS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM2Y,gBAcrC,IAbA,IAAIwD,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAS,EACJ9N,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM2Y,eAAe3R,OAAQiI,IAElD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAM2Y,eAAe1J,IAC9B5J,EAAKrF,MAAM2Y,eAAe1J,GAAGzO,MACjC,IAAK,MACD2b,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDF,IACAE,IACA,MACJ,IAAK,MACDD,IACAC,IACA,MACJ,QACIA,IAIZ1X,EAAKqC,SAAS,CACVsV,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,YAAab,KA91BF1X,EAo2BnBwY,iBAAmB,SAACxW,GAChBA,EAAMvB,iBACNS,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM0J,cAOtD,IALA,IAAIoU,EAAmB,CACnB7F,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IACxC5J,EAAKD,MAAM+H,SAAS8B,GAAGvF,eAAiBrE,EAAKrF,MAAM0J,cACnDoU,EAAiB7F,YAAYG,KAAK/S,EAAKD,MAAM+H,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKD,MAAMkT,YAAYtR,OAAQqR,IAC3ChT,EAAKD,MAAMkT,YAAYD,GAAG3O,eAAiBrE,EAAKrF,MAAM0J,cACtDoU,EAAiB5F,eAAeE,KAAK/S,EAAKD,MAAMkT,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKD,MAAMoT,SAASxR,OAAQuR,IACxClT,EAAKD,MAAMoT,SAASD,GAAG7O,eAAiBrE,EAAKrF,MAAM0J,cACnDoU,EAAiB3F,YAAYC,KAAK/S,EAAKD,MAAMoT,SAASD,IAI9DzP,WAAW,WAEPzD,EAAKqC,SAAS,CACVqW,eAAgBD,EAAiB7F,YACjC+F,kBAAmBF,EAAiB5F,eACpC+F,eAAgBH,EAAiB3F,cAErCrP,WAAW,WACPzD,EAAK6Y,mBACL7Y,EAAK8Y,sBACL9Y,EAAK+Y,mBAELtV,WAAW,WAAQzD,EAAKyS,iCAAmC,MAC5D,MAEJ,MA94BYzS,EAk5BnB+Y,iBAAmB,WACf7X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM+d,gBAcrC,IAbA,IAAIhF,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN2E,EAAS,EACJpP,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM+d,eAAe/W,OAAQiI,IAElD,OAAQ5J,EAAKrF,MAAM+d,eAAe9O,GAAGzO,MACjC,IAAK,MACDuY,IACAsF,IACA,MACJ,IAAK,MACDrF,IACAqF,IACA,MACJ,IAAK,MACDpF,IACAoF,IACA,MACJ,IAAK,MACDnF,IACAmF,IACA,MACJ,IAAK,MACDlF,IACAkF,IACA,MACJ,IAAK,MACDjF,IACAiF,IACA,MACJ,IAAK,MACDhF,IACAgF,IACA,MACJ,IAAK,MACD/E,IACA+E,IACA,MACJ,IAAK,MACD9E,IACA8E,IACA,MACJ,IAAK,MACD7E,IACA6E,IACA,MACJ,IAAK,MACD5E,IACA4E,IACA,MACJ,IAAK,MACD3E,IACA2E,IACA,MACJ,QACIA,IAIZhZ,EAAKqC,SAAS,CACV4W,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,YAAab,KAt+BFhZ,EA0+BnB8Y,oBAAsB,WAClB5X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMge,mBAcrC,IAbA,IAAIvD,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN+D,EAAY,EACPlQ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMge,kBAAkBhX,OAAQiI,IACrD,OAAQ5J,EAAKrF,MAAMge,kBAAkB/O,GAAGzO,MACpC,IAAK,MACDia,IACA0E,IACA,MACJ,IAAK,MACDzE,IACAyE,IACA,MACJ,IAAK,MACDxE,IACAwE,IACA,MACJ,IAAK,MACDvE,IACAuE,IACA,MACJ,IAAK,MACDtE,IACAsE,IACA,MACJ,IAAK,MACDrE,IACAqE,IACA,MACJ,IAAK,MACDpE,IACAoE,IACA,MACJ,IAAK,MACDnE,IACAmE,IACA,MACJ,IAAK,MACDlE,IACAkE,IACA,MACJ,IAAK,MACDjE,IACAiE,IACA,MACJ,IAAK,MACDA,IACAhE,IACA,MACJ,IAAK,MACDgE,IACA/D,IACA,MACJ,QACI+D,IAIZ9Z,EAAKqC,SAAS,CACV0X,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,eAAgBb,KA7jCL9Z,EAkkCnB6Y,iBAAmB,WACf3X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMie,gBAcrC,IAbA,IAAI9B,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNmD,EAAS,EACJhR,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMie,eAAejX,OAAQiI,IAElD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAMie,eAAehP,IAC9B5J,EAAKrF,MAAMie,eAAehP,GAAGzO,MACjC,IAAK,MACD2b,IACA8D,IACA,MACJ,IAAK,MACD7D,IACA6D,IACA,MACJ,IAAK,MACD5D,IACA4D,IACA,MACJ,IAAK,MACD3D,IACA2D,IACA,MACJ,IAAK,MACD1D,IACA0D,IACA,MACJ,IAAK,MACDzD,IACAyD,IACA,MACJ,IAAK,MACDxD,IACAwD,IACA,MACJ,IAAK,MACDvD,IACAuD,IACA,MACJ,IAAK,MACDtD,IACAsD,IACA,MACJ,IAAK,MACDrD,IACAqD,IACA,MACJ,IAAK,MACDpD,IACAoD,IACA,MACJ,IAAK,MACDnD,IACAmD,IACA,MACJ,QACIA,IAIZ5a,EAAKqC,SAAS,CACVwY,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,YAAab,KAtpCF5a,EA0pCnB0b,eAAiB,SAAClb,GAEd,OADAA,EAAEC,iBACMT,EAAKrF,MAAMghB,YACf,IAAK,WACD3b,EAAK2Q,gBACL,MACJ,IAAK,cACD3Q,EAAK0R,mBACL,MACJ,IAAK,WACD1R,EAAK2R,gBACL,MACJ,IAAK,UACD3R,EAAK4R,kBACL,MACJ,IAAK,aACD5R,EAAK6R,qBACL,MACJ,IAAK,UACD7R,EAAK8R,kBACL,MACJ,IAAK,UACD9R,EAAK+R,kBACL,MACJ,IAAK,aACD/R,EAAKgS,qBACL,MACJ,IAAK,UACDhS,EAAKiS,kBACL,MACJ,QACI/Q,QAAQC,IAAI,wBAzrCLnB,EA8rCnB4b,mBAAqB,SAACpb,GAGlB,OAFAA,EAAEC,iBAEMT,EAAKrF,MAAMkhB,gBACf,IAAK,QACD7b,EAAKkS,0BACL,MACJ,IAAK,QACDlS,EAAKmS,wBACL,MACJ,IAAK,QACDnS,EAAKqS,yBACL,MACJ,IAAK,QACDrS,EAAKoS,yBACL,MACJ,IAAK,QACDpS,EAAKsS,0BACL,MACJ,IAAK,QACDtS,EAAKuS,wBACL,MACJ,QACIrR,QAAQC,IAAI,8BAntCpBnB,EAAKrF,MAAQ,CACT+V,YAAa,EACboL,aAAc,EACdtW,KAAM,GACNoN,YAAa,GACbxD,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvB/N,WAAY,OACZa,aAAc,OACd+O,eAAgB,GAChBC,kBAAmB,GACnBC,eAAgB,GAChB9B,uBAAuB,EACvBC,+BAA+B,GA5BpBzR,wEA4tCf,OAGIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,QAASG,aAAc,SAClEpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,qBACAjL,EAAAC,EAAAC,cAAA,WAgBAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,4BACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMghB,WAAYnZ,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC1GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,gEACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,YAAf,SACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,YACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,YAAf,gBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,yBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,6BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,4BAEJtH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKub,gBAA9D,eAOZ5gB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,oCACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMkhB,eAAgBrZ,SAAUrC,KAAK4B,kBAAmBI,KAAK,kBAC9GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,gEACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,yBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,kBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,iBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,wBAEJtH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKyb,oBAA9D,gBAOhB9gB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACKmF,KAAKJ,MAAMwC,SAAS0B,QACjBnJ,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,wCACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM6I,WAAYhB,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC1GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,gEACCjC,KAAKJ,MAAMwC,SAAS0B,QAAQC,IAAI,SAAAX,GAAM,OACnCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAG7CzI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKuS,kBAA9D,aAEF,OAId5X,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACKmF,KAAKJ,MAAMwC,SAAS+B,cACjBxJ,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,wCACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM0J,aAAc7B,SAAUrC,KAAK4B,kBAAmBI,KAAK,gBAC5GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,gEACCjC,KAAKJ,MAAMwC,SAAS+B,cAAcJ,IAAI,SAAAhC,GAAM,OACzCpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQE,MAAOF,GAASA,MALjD,IAOcpH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKqY,kBAA9D,aACL,SAM7B1d,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAKXkF,KAAKxF,MAAMyU,cACPtU,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBACJF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,gBACIzD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAEpCrR,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,KAAM7C,OAAQ,IACtGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,eAIhDrR,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,KAAM7C,OAAQ,IACtGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qBACA,mBACA,iBACA,oBACA,eACA,qBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAEpC7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/B1B,MAoCF,KAWN/b,KAAKxF,MAAM0U,iBACPvU,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BACJF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,mBACKzD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAExC7S,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,iBA3BnD,KA8BA7S,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qBACA,mBACA,iBACA,oBACA,eACA,qBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAEvCrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/B1B,MAoCK,KASb/b,KAAKxF,MAAM2U,cACPxU,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BACJF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAACa,UAAW,WAAtB,uBAAsDzD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QACtEtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEhDrU,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChCtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,cA3BhD,KA8BArU,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qBACA,mBACA,iBACA,oBACA,eACA,qBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChCtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,UAIrB,KAOb/b,KAAKxF,MAAMiW,kBACP9V,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kCAEJF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMmM,cA3B3B,KA+BApR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMmM,SAEf5E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC1B,KAnCJ,KAsE8B,KAUlC/b,KAAKxF,MAAMkW,qBACP/V,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BACJF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM2N,kBAK3B5S,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM2N,YAEfpG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC1B,MAqCK,KAQjBphB,EAAAC,EAAAC,cAAA,WAEImF,KAAKxF,MAAMmW,kBACPhW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAEJF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMmP,cA3B3B,KA+BApU,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMmP,SAEf5H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC1B,MAoCK,KASb/b,KAAKxF,MAAMoW,kBACPjW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBACJF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMoM,cA3B3B,KA8BArR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMoM,SAEf7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/B1B,KAjCJ,KAmE8B,KASlC/b,KAAKxF,MAAMqW,qBACPlW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,2BACJF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM4N,iBA3B3B,KA8BA7S,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM4N,YAEfrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/B1B,KAjCJ,KAmE8B,KAUlC/b,KAAKxF,MAAMsW,kBACPnW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtCjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BACJF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,WAEJjf,KAAM,CACFoD,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMoP,cA3B3B,KA8BArU,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACxFhL,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMoP,SAEf7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/B1B,KAjCJ,KAmE8B,KAUlC/b,KAAKxF,MAAMuW,wBACPpW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAC3D3Q,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,aAAe9M,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAAW,KAA7H,KACA3Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,kCACA,qBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAAUtL,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WAC7E9M,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YAEvC3F,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,sCAA8BmF,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YACjEnS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,UAAYtO,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YAAc,KAA7I,KACAnS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,yCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WAAa9M,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChFtO,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,SAEpCnH,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAC3D3Q,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,UAAYtO,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAAW,KAApI,KACA3Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAAUtL,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAC1EtO,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,SAEpCnH,gBAAiB,CACb,UACA,mBAUtB,KAQNnH,KAAKxF,MAAMwW,sBACPrW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SACzD7Q,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SAAW,KAA7H,KACA7Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,gCACA,mBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAAUxL,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WAC7EhN,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAEvC7F,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,oCAA4BmF,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAC/DrS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,UAAYxO,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAAc,KAA7I,KACArS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,uBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WAAahN,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChFxO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,SAEpCrH,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SACzD7Q,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,UAAYxO,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SAAW,KAApI,KACA7Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,mCACA,uBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAAUxL,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAC1ExO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,SAEpCrH,gBAAiB,CACb,UACA,mBAUtB,KASNnH,KAAKxF,MAAMyW,uBACPtW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,yCAAiCmF,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SACjE/Q,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,aAAelN,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SAAW,KAA7H,KACA/Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uCACA,2BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAAU1L,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WAC7ElN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YAEvC/F,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,4CAAoCmF,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YACvEvS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,UAAY1O,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YAAc,KAA7I,KACAvS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,8CACA,+BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WAAalN,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChF1O,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,SAEpCvH,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,yCAAiCmF,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SACjE/Q,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,UAAY1O,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SAAW,KAApI,KACA/Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,2CACA,+BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAAU1L,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAC1E1O,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,SAEpCvH,gBAAiB,CACb,UACA,mBAUtB,KAQNnH,KAAKxF,MAAM0W,uBACPvW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,kCAA0BmF,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAC1DjR,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,aAAepN,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAAW,KAA7H,KACAjR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,gCACA,oBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAAU5L,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WAC7EpN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAEvCjG,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,qCAA6BmF,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAChEzS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,UAAY5O,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAAc,KAA7I,KACAzS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uCACA,wBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WAAapN,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChF5O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,SAEpCzH,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,kCAA0BmF,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAC1DjR,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,UAAY5O,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAAW,KAApI,KACAjR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oCACA,wBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAAU5L,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAC1E5O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,SAEpCzH,gBAAiB,CACb,UACA,mBAUtB,KAQNnH,KAAKxF,MAAM2W,wBACPxW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAC3DnR,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,aAAetN,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAAW,KAA7H,KACAnR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,iCACA,qBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAAU9L,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WAC7EtN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YAEvCnG,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,sCAA8BmF,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YACjE3S,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,UAAY9O,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YAAc,KAA7I,KACA3S,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,wCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WAAatN,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChF9O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,SAEpC3H,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAC3DnR,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,UAAY9O,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAAW,KAApI,KACAnR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAAU9L,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAC1E9O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,SAEpC3H,gBAAiB,CACb,UACA,mBAUtB,KAQNnH,KAAKxF,MAAM4W,sBACPzW,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,wCAAgCmF,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAChErR,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,aAAexN,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAAW,KAA7H,KACArR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,QAAUhM,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,WAC7ExN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAEvCrG,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,2CAAmCmF,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YACtE7S,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,UAAYhP,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAAc,KAA7I,KACA7S,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,6CACA,8BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,WAAaxN,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QAChFhP,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,iBAMhBxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,wCAAgCmF,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAChErR,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,UAAYhP,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAAW,KAApI,KACArR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,yCACA,wCAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,QAAUhM,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QAC1EhP,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,mBAUtB,KASNnH,KAAKxF,MAAM6W,sBACP1W,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,aAAKmF,KAAKxF,MAAM6I,WAAhB,oBAgBJ1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACzGhL,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,gBAAiDzD,KAAKxF,MAAMyY,eAAezR,QAC3E7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,iBACA,gBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAM4Z,SACXpU,KAAKxF,MAAM8Z,SACXtU,KAAKxF,MAAMga,SACXxU,KAAKxF,MAAMka,SACX1U,KAAKxF,MAAMoa,SACX5U,KAAKxF,MAAMsa,SAEX9U,KAAKxF,MAAM6Z,SACXrU,KAAKxF,MAAM+Z,SACXvU,KAAKxF,MAAMia,SACXzU,KAAKxF,MAAMma,SACX3U,KAAKxF,MAAMqa,SACX7U,KAAKxF,MAAMua,UAEf5N,gBAAiB,CAEb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC1B,KAjBJ,KA2DAphB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,kBAAmBxB,QAAS,OACxEhL,EAAAC,EAAAC,cAAA,UAAKmF,KAAKxF,MAAM6I,WAAhB,sBACA1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,0BAAkBmF,KAAKxF,MAAMwa,aAC7Bra,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,MAAOjc,KAAKxF,MAAMkc,eAAiB1W,KAAKxF,MAAMwa,YAAe,KAAtF,KACAra,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM6I,WADV,yBAAA6Y,OAEDlc,KAAKxF,MAAM6I,WAFV,mBAIRiM,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMwa,YAAchV,KAAKxF,MAAMkc,eACpC1W,KAAKxF,MAAMkc,gBAEfvP,gBAAiB,CACb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,SACVzM,OAAQ,CACJ0M,SAAU,SAM1BphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,6BAAqBmF,KAAKxF,MAAMkc,gBAChC/b,EAAAC,EAAAC,cAAA,gCAAwBmhB,KAAKC,MAAOjc,KAAKxF,MAAM4d,YAAcpY,KAAKxF,MAAMkc,eAAkB,KAA1F,KACA/b,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM6I,WADV,wCAAA6Y,OAEDlc,KAAKxF,MAAM6I,WAFV,uBAIRiM,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkc,eAAiB1W,KAAKxF,MAAM4d,YACvCpY,KAAKxF,MAAM4d,aAEfjR,gBAAiB,CACb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,SACVzM,OAAQ,CACJ0M,SAAU,SAM1BphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKxF,MAAM2hB,aACpCxhB,EAAAC,EAAAC,cAAA,gCAAwBmhB,KAAKC,MAAOjc,KAAKxF,MAAM4d,YAAcpY,KAAKxF,MAAMwa,YAAe,KAAvF,KACAra,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM6I,WADV,qCAAA6Y,OAEDlc,KAAKxF,MAAM6I,WAFV,0BAIRiM,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMwa,YAAchV,KAAKxF,MAAM4d,YACpCpY,KAAKxF,MAAM4d,aAEfjR,gBAAiB,CACb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,SACVzM,OAAQ,CACJ0M,SAAU,WAtJtC,KAgKE,KASN/b,KAAKxF,MAAM8W,8BACP3W,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAImF,KAAKxF,MAAM0J,aAAf,oBACJvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,MAAOvB,gBAAiB,kBAAmBxB,QAAS,OACzGhL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,gBAAiDzD,KAAKxF,MAAM+d,eAAe/W,QAgB3E7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,iBACA,gBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMse,SACX9Y,KAAKxF,MAAMwe,SACXhZ,KAAKxF,MAAM0e,SACXlZ,KAAKxF,MAAM4e,SACXpZ,KAAKxF,MAAM8e,SACXtZ,KAAKxF,MAAMgf,SAEXxZ,KAAKxF,MAAMue,SACX/Y,KAAKxF,MAAMye,SACXjZ,KAAKxF,MAAM2e,SACXnZ,KAAKxF,MAAM6e,SACXrZ,KAAKxF,MAAM+e,SACXvZ,KAAKxF,MAAMif,UAEftS,gBAAiB,CAEb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/C1B,MADJ,KAqDAphB,EAAAC,EAAAC,cAAA,WAMAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,kBAAmBxB,QAAS,OACxEhL,EAAAC,EAAAC,cAAA,UAAKmF,KAAKxF,MAAM0J,aAAhB,uBACAvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,0BAAkBmF,KAAKxF,MAAMkf,aAC7B/e,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,MAAOjc,KAAKxF,MAAMggB,eAAiBxa,KAAKxF,MAAMkf,YAAe,KAAtF,KACA/e,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,oBAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,cAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkf,YAAc1Z,KAAKxF,MAAMggB,eACpCxa,KAAKxF,MAAMggB,gBAEfrT,gBAAiB,CACb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,SACVzM,OAAQ,CACJ0M,SAAU,SAM1BphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,6BAAqBmF,KAAKxF,MAAMggB,gBAChC7f,EAAAC,EAAAC,cAAA,gCAAwBmhB,KAAKC,MAAOjc,KAAKxF,MAAM8gB,YAActb,KAAKxF,MAAMggB,eAAkB,KAA1F,KACA7f,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,gCAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,qBAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMggB,eAAiBxa,KAAKxF,MAAM8gB,YACvCtb,KAAKxF,MAAM8gB,aAEfnU,gBAAiB,CACb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,SACVzM,OAAQ,CACJ0M,SAAU,SAM1BphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,gCAAwBmF,KAAKxF,MAAM4hB,aACnCzhB,EAAAC,EAAAC,cAAA,gCAAwBmhB,KAAKC,MAAOjc,KAAKxF,MAAM8gB,YAActb,KAAKxF,MAAMkf,YAAe,KAAvF,KACA/e,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,gCAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,qBAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkf,YAAc1Z,KAAKxF,MAAM8gB,YACpCtb,KAAKxF,MAAM8gB,aAEfnU,gBAAiB,CACb,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,SACVzM,OAAQ,CACJ0M,SAAU,WArJtC,KA+JE,cA52FGxgB,sBCsHd8gB,cApHX,SAAAA,EAAYzc,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqc,IACfxc,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuc,GAAAlc,KAAAH,KAAMJ,KAUVgC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAdGpC,EAmBnByc,iBAAmB,SAAAza,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,yCAA2CnB,EAAKD,MAAMsF,QAElE,IAAIqX,EAAW,CACXC,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMsF,OACvBwX,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,GAGf5b,QAAQC,IAAIub,GAIZpgB,EAAI4B,SAAS8B,EAAKD,MAAMsF,OAAQ,CAC5BsX,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMsF,OACvB0X,eAAgB/c,EAAKD,MAAMwC,SAAS8D,UAAY,IAAMrG,EAAKD,MAAMwC,SAAS+D,SAC1EuW,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,IACZhc,KAAK,SAAAC,GACJC,IAAU2E,KAAK,eACf3F,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MA5CZ9B,EAqDnBgd,aAAe,YACqB,IAA5Bhd,EAAKrF,MAAMqiB,aACXhd,EAAKqC,SAAS,CACV2a,cAAc,IAGlBhd,EAAKqC,SAAS,CACV2a,cAAc,KA1DtBhd,EAAKrF,MAAQ,CACTgiB,SAAU,GACVC,WAAY,GACZC,WAAY,GACZG,cAAc,GANHhd,wEAkEf,OAEIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8H,MAAO,CAAEa,UAAW,OAAQkC,QAAS,MACzDhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,UAC3CjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MACI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,KADpF,cAIInI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAASC,UAAU,8BAA8B0H,QAASxC,KAAK6c,cAA/D,WAIb7c,KAAKxF,MAAMqiB,aACRliB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,OAAQE,OAAQ,GAAIiX,QAAS,SACtEniB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,QAASD,QAAS,SAClC3F,KAAKJ,MAAMoG,QAAUrL,EAAAC,EAAAC,cAAA,UAAQS,GAAG,GAAG2G,MAAOjC,KAAKxF,MAAMkiB,WAAYra,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACrGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,kBACCjC,KAAKJ,MAAMoG,QAAQjC,IAAI,SAAAxC,GAAM,OAC1B5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAEnE,KACZxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkiB,EAAA,EAAD,CACI9a,MAAOjC,KAAKxF,MAAMgiB,SAClBna,SAAUrC,KAAK4B,kBACf5G,KAAK,OACLgH,KAAK,WACLlH,UAAU,eACVQ,GAAG,gBACHgH,mBAAiB,GACjBC,YAAY,oBAGhB5H,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKsc,iBAAkB1Z,MAAO,CAAEY,MAAO,UAAY1I,UAAU,wBAA9E,kBAIV,cA3GAS,uCCoJXyhB,cAlJX,SAAAA,EAAYpd,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgd,IACfnd,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkd,GAAA7c,KAAAH,KAAMJ,KAOVlF,kBAAoB,aARDmF,EAWnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAdGpC,EAmBnBod,iBAAmB,SAAApb,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,yCAA2CnB,EAAKD,MAAMsF,QAElE,IAAIqX,EAAW,CACXC,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMsF,OACvBwX,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,GAGf5b,QAAQC,IAAIub,GAIZpgB,EAAI+gB,WAAWrd,EAAKrF,MAAM2iB,OAAQ,CAC9BX,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMsF,OACvBwX,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,IACZhc,KAAK,SAAAC,GACJC,IAAU2E,KAAK,eACf3F,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MA3CZ9B,EAoDnB1B,aAAe,SAAA7C,GAEXyF,QAAQC,IAAI,wBAA0B1F,GAEtCa,EAAIgC,aAAa7C,EAAI,CACjBqhB,WAAW,IACZhc,KAAK,SAAAC,GACJf,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MA7DZ9B,EAgEnBzB,eAAiB,SAAA9C,GACbyF,QAAQC,IAAI,2BAA6B1F,GACzCa,EAAIiC,eAAe9C,EAAI,CACnBqhB,WAAW,IACZhc,KAAK,SAAAC,GACJC,IAAU2E,KAAK,iBACf3F,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAxEZ9B,EA2EnBxB,WAAa,SAAA/C,GACTyF,QAAQC,IAAI,iBAAmB1F,GAC/Ba,EAAIkC,WAAW/C,GACVqF,KAAK,SAAAC,GACFC,IAAUQ,MAAM,gBAChBxB,EAAKD,MAAM6F,aAEdrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAhF9B9B,EAAKrF,MAAQ,CACT4iB,WAAY,GACZC,aAAc,IAJHxd,wEAuFV,IAAAiK,EAAA9J,KACL,OACIrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAGQ,GAAG,wBAAwBsH,MAAO,CAAEgD,MAAO,QAASC,OAAQ7F,KAAKJ,MAAMiG,OAAQC,SAAU,OAAQwX,YAAa,MAAOzB,YAAa,QAAS1U,gBAAiB,oBAE1KxM,EAAAC,EAAAC,cAAA,OAAKS,GAAG,gBAAgBsH,MAAO,CAAE+C,QAAS,GAAIhC,MAAO,GAAI4Z,aAAc,SAEnE5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAEVkF,KAAKJ,MAAM4d,YAERxd,KAAKJ,MAAM4d,YAAYzZ,IAAI,SAAA0Z,GAAI,OAC3B9iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBkJ,IAAKyZ,EAAKxX,IACrCrD,MAAO,CAAEgD,MAAO,QAASD,QAAS,kBAAmBI,aAAc,MAAOjD,OAAQ,KAOlFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,oBAC3ChL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACIpP,EAAAC,EAAAC,cAAA,OAAKoH,MAAO6H,EAAKlK,MAAMtE,GAAIkH,QAAS,kBAAMsH,EAAKzL,WAAWof,EAAKxX,MAAMrD,MAAO,CAAEY,MAAO,QAASqC,OAAQ,MAAOlC,MAAO,OAAQiC,MAAO,OAAS9K,UAAU,IAAtJ,KACC2iB,EAAKd,UACFhiB,EAAAC,EAAAC,cAAA,OAAKoH,MAAO6H,EAAKlK,MAAMtE,GAAIkH,QAAS,kBAAMsH,EAAK1L,eAAeqf,EAAKxX,MAAMrD,MAAO,CAAEY,MAAO,QAASqC,OAAQ,MAAOlC,MAAO,OAAQgC,QAAS,KAAO7K,UAAU,IAA1J,UACEH,EAAAC,EAAAC,cAAA,OAAKoH,MAAO6H,EAAKlK,MAAMtE,GAAIkH,QAAS,kBAAMsH,EAAK3L,aAAasf,EAAKxX,MAAMrD,MAAO,CAAEY,MAAO,QAASqC,OAAQ,MAAOlC,MAAO,OAAQgC,QAAS,KAAO7K,UAAU,IAAGH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAIlLH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,SAAtB,SAAuC4Z,EAAKb,iBAEhDjiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,oBAAqB7C,OAAQ,oBACtEnI,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAUiG,EAAKlK,MAAMiE,SAAU6Z,WAAY,SAAvD,IAAmED,EAAKjB,SAAxE,MAGJ7hB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,SAAtB,WACWlJ,EAAAC,EAAAC,cAAC8iB,EAAA/iB,EAAD,CAAQwN,OAAO,eAAeqV,EAAKG,YAC3CjjB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC8iB,EAAA/iB,EAAD,CAAQyK,KAAMoY,EAAKG,WAAYC,iBAAe,IAHlD,YAUVljB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,QAASnC,UAAW,WAAvC,2BArILlI,aCoNVuiB,6MAlNXtjB,MAAQ,CACJujB,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZC,eAAgB,EAChBC,eAAgB,EAChBC,qBAAsB,EACtBC,YAAa,GACbC,UAAU,KAed9c,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzB6Z,iBAAmB,SAAA9c,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,kCAAoCnB,EAAKD,MAAMsF,QAE3DnE,QAAQC,IAAInB,EAAKrF,OAEjB,IAAIokB,EAAW,CACXC,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrBE,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrB7c,QAASzB,EAAKD,MAAMwC,SAAS6D,IAC7B1E,OAAQ1B,EAAKrF,MAAM6jB,WACnBS,QAASjf,EAAKrF,MAAMikB,YACpBM,WAAYC,SAASnf,EAAKrF,MAAM8jB,gBAChCW,kBAAmBD,SAASnf,EAAKrF,MAAM+jB,gBAAkB,IACzDW,iBAAkBF,SAASnf,EAAKrF,MAAMgkB,sBAAwB,IAC9Dnb,WAAYxD,EAAKrF,MAAMyjB,WACvB/Z,aAAcrE,EAAKrF,MAAM4jB,eAG7Brd,QAAQC,IAAI4d,GAGZziB,EAAIa,SAAS,CACT6hB,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrBE,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrB7c,QAASzB,EAAKD,MAAMwC,SAAS6D,IAC7B1E,OAAQ1B,EAAKrF,MAAM6jB,WACnBS,QAASjf,EAAKrF,MAAMikB,YACpBM,WAAYC,SAASnf,EAAKrF,MAAM8jB,gBAChCW,kBAAmBD,SAASnf,EAAKrF,MAAM+jB,gBAAkB,IACzDW,iBAAkBF,SAASnf,EAAKrF,MAAMgkB,sBAAwB,IAC9Dnb,WAAYxD,EAAKrF,MAAMyjB,WACvB/Z,aAAcrE,EAAKrF,MAAM4jB,gBAC1Bzd,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,iBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAY/Bwd,aAAe,YACiB,IAAxBtf,EAAKrF,MAAMkkB,SACX7e,EAAKqC,SAAS,CACVwc,UAAU,IAGd7e,EAAKqC,SAAS,CACVwc,UAAU,0HAMlB,OACI/jB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASQ,GAAG,eAAesH,MAAO,CAAEa,UAAW,OAAQkC,QAAS,MAC3EhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOC,MAAO,QAAS9C,OAAQ,KAA1E,cACRnI,EAAAC,EAAAC,cAAA,WADQ,IACDF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKmf,cAA9D,UAKFnf,KAAKxF,MAAMkkB,SACR/jB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,OAAQE,OAAQ,QAASC,SAAU,SAC5EnL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,QAASD,QAAS,OAAQI,aAAc,SAEzDpL,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BmH,MAAOjC,KAAKxF,MAAMujB,SAAU1b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,sBACjJ5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,0BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,yBAEJtH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMwjB,SAAU3b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,2BAE1J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,eAAeR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMikB,YAAapc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAAchH,KAAK,OAAOuH,YAAY,yBAC9J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM2jB,SAAU9b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCACtJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACCmF,KAAKJ,MAAMoG,QAAUrL,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAM6jB,WAAYvjB,UAAU,GAAGuH,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAChIrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,kBACCjC,KAAKJ,MAAMoG,QAAQjC,IAAI,SAAAxC,GAAM,OAC1B5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAEnE,KACZxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM8jB,eAAgBjc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAC7HrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+jB,eAAgBlc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAC7HrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,mBAAmBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgkB,qBAAsBnc,SAAUrC,KAAK4B,kBAAmBI,KAAK,yBAErIrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BAECmF,KAAKJ,MAAMwC,SAAS0B,QAAUnJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAMyjB,WAAYnjB,UAAU,GAAGuH,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACzIrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,2BACCjC,KAAKJ,MAAMwC,SAAS0B,QAAQC,IAAI,SAAAX,GAAM,OACnCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAEjCzI,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,eAAnB,iCAEZjL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAECmF,KAAKJ,MAAMwC,SAAS+B,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAM4jB,cAAetjB,UAAU,GAAGuH,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBAClJrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,6BACCjC,KAAKJ,MAAMwC,SAAS+B,cAAcJ,IAAI,SAAAhC,GAAM,OACzCpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQE,MAAOF,GAASA,MAEjCpH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,UAAnB,mCACZjL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM0jB,UAAW7b,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,yBACxJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAK2e,kBAA/E,kBAIV,cA5MCpjB,aCmRZ6jB,6MAjRX5kB,MAAQ,CACJsK,iBAAiB,EACjBiZ,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZC,eAAgB,EAChBC,eAAgB,EAChBC,qBAAsB,EACtBC,YAAa,GACbhY,aAAc,MA0BlB8C,cAAgB,WACZ,IAAIC,EAAa,GAEjB,GAAI3J,EAAKD,MAAMwC,SAAS6D,MAAQpG,EAAKD,MAAMyf,WACvC,IAAK,IAAI5V,EAAI,EAAGA,EAAI5J,EAAKD,MAAMwC,SAASwG,WAAWa,GAAIA,IACnD1I,QAAQC,IAAI,wCACZwI,EAAa3J,EAAKD,MAAMwC,SAASwG,WAAWa,GAAGvD,UAAY,IAAMrG,EAAKD,MAAMwC,SAASwG,WAAWa,GAAGtD,SACnGtG,EAAK6J,aAAaF,MAK9BE,aAAe,SAACnI,GACZR,QAAQC,IAAI,wBAA0BO,GACtC1B,EAAKqC,SAAS,CACVuE,aAAclF,OAItBK,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzBwa,iBAAmB,SAAAzd,GACfA,EAAMvB,iBAEN,IAAIif,EAAY,CACZV,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrB3a,WAAYxD,EAAKrF,MAAMyjB,WACvBC,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrBja,aAAcrE,EAAKrF,MAAM4jB,cACzBW,WAAYlf,EAAKrF,MAAM8jB,eACvBW,kBAAmBpf,EAAKrF,MAAM+jB,eAC9BW,iBAAkBrf,EAAKrF,MAAMgkB,qBAC7BM,QAASjf,EAAKrF,MAAMikB,YACpBnd,QAASzB,EAAKD,MAAMyf,WACpB9d,OAAQ1B,EAAKrF,MAAM6jB,YAGvBtd,QAAQC,IAAIue,GAEZ1f,EAAKqC,SAAS,CACV4C,iBAAiB,IAGrB3I,EAAIqB,WAAWqC,EAAKD,MAAMtE,GAAI,CAC1BujB,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrB3a,WAAYxD,EAAKrF,MAAMyjB,WACvBC,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrBja,aAAcrE,EAAKrF,MAAM4jB,cACzBW,WAAYlf,EAAKrF,MAAM8jB,eACvBW,kBAAmBpf,EAAKrF,MAAM+jB,eAC9BW,iBAAkBrf,EAAKrF,MAAMgkB,qBAC7BM,QAASjf,EAAKrF,MAAMikB,YACpBnd,QAASzB,EAAKD,MAAMyf,WACpB9d,OAAQ1B,EAAKrF,MAAM6jB,aACpB1d,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,mBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAI/BiI,cAAgB,WACZ/J,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBnH,WAAa,WACTxB,EAAIwB,WAAWkC,EAAKD,MAAMtE,IACrBqF,KAAK,SAAAC,GAAG,OAAIC,IAAUQ,MAAM,2BAC5BD,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,KAE9B2B,WAAW,WACPzC,IAAU2e,QAAQ,0BAEnB,yFAjIa,IAAA1V,EAAA9J,KAGhBA,KAAKkC,SAAS,CACV6b,SAAU/d,KAAKJ,MAAMme,SACrBC,SAAUhe,KAAKJ,MAAMoe,SACrBC,WAAYje,KAAKJ,MAAMqe,WACvBC,UAAWle,KAAKJ,MAAMse,UACtBC,SAAUne,KAAKJ,MAAMue,SACrBC,cAAepe,KAAKJ,MAAMwe,cAC1BE,eAAgBte,KAAKJ,MAAM0e,eAC3BC,eAAgBve,KAAKJ,MAAM2e,eAC3BC,qBAAsBxe,KAAKJ,MAAM4e,qBACjCC,YAAaze,KAAKJ,MAAM6e,YACxBY,WAAYrf,KAAKJ,MAAM0B,QACvB+c,WAAYre,KAAKJ,MAAMye,aAG3B/a,WAAW,WAAQwG,EAAKP,iBAAmB,sCAmH3C,OACI5O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAY9I,EAAAC,EAAAC,cAAA,SAAImF,KAAKJ,MAAMoe,SAAf,OAGxCrjB,EAAAC,EAAAC,cAAA,WAQIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,SACzChL,EAAAC,EAAAC,cAAA,YACCmF,KAAKJ,MAAMse,UAAYvjB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,KAAnB,UAAiC5F,KAAKJ,MAAMse,WAAiB,KACrFvjB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQL,MAAO,UAArC,QAC6B,QAAxBxD,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,kCAAkC,KAC1C,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,uCAAuC,KAC/C,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,0CAA0C,KAClD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,+CAA+C,KACvD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,wCAAwC,KAChD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,6CAA6C,KACrD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,yCAAyC,KACjD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,8CAA8C,KACtD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,kCAAkC,KAC1C,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,wCAAwC,KAChD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,yCAAyC,KACjD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,8CAA8C,MAEnFF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,iBAA0ExD,KAAKJ,MAAM0e,gBACrF3jB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,6BAAkH,IAA5BxD,KAAKJ,MAAM2e,eAAjG,cAAkIve,KAAKJ,MAAM2e,eAAiBve,KAAKJ,MAAM0e,gBACzK3jB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,sBAAiH,IAAlCxD,KAAKJ,MAAM4e,qBAA1F,cAAiIxe,KAAKJ,MAAM4e,qBAAuBxe,KAAKJ,MAAM0e,iBAKlL3jB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEqH,MAAO,OAAQxG,UAAW,WACpC9I,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKJ,MAAMtE,GAAIkH,QAASxC,KAAK4J,cAAe9O,UAAU,sBAAsB8H,MAAO,CAAEe,MAAO,QAA3G,QACAhJ,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKJ,MAAMtE,GAAIkH,QAASxC,KAAKrC,WAAY7C,UAAU,wBAAwB8H,MAAO,CAAEe,MAAO,QAA1G,OAMRhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,GAAG,gBAC3BX,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,CAAOqO,OAAQjJ,KAAKxF,MAAMsK,gBAAiBoE,YAAalJ,KAAK+E,mBAAoBoE,eAAgBnJ,KAAKgF,eAAgBpC,MAAO5C,KAAK4G,aAAcwC,aAAa,uBAEzJzO,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BmH,MAAOjC,KAAKxF,MAAMujB,SAAU1b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,sBACjJ5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,0BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,yBAGJtH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMwjB,SAAU3b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,kCAE1J5H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,eAAeR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMikB,YAAapc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAAchH,KAAK,OAAOuH,YAAY,yBAE9J5H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM2jB,SAAU9b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCAEtJ5H,EAAAC,EAAAC,cAAA,8BACCmF,KAAKJ,MAAMoG,QAAUrL,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKJ,MAAMye,WAAYhc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACnHrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,kBACCjC,KAAKJ,MAAMoG,QAAQjC,IAAI,SAAAxC,GAAM,OAC1B5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAEnE,KAEZxL,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM8jB,eAAgBjc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAE7HrH,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+jB,eAAgBlc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAE7HrH,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,mBAAmBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgkB,qBAAsBnc,SAAUrC,KAAK4B,kBAAmBI,KAAK,yBAGrIrH,EAAAC,EAAAC,cAAA,6BAECmF,KAAKJ,MAAMwC,SAAS0B,QAAUnJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAMyjB,WAAY5b,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC5HrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,2BACCjC,KAAKJ,MAAMwC,SAAS0B,QAAQC,IAAI,SAAAX,GAAM,OACnCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAEjCzI,EAAAC,EAAAC,cAAA,0CAGZF,EAAAC,EAAAC,cAAA,+BAECmF,KAAKJ,MAAMwC,SAAS+B,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAM4jB,cAAe/b,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBACrIrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,6BACCjC,KAAKJ,MAAMwC,SAAS+B,cAAcJ,IAAI,SAAAhC,GAAM,OACzCpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQE,MAAOF,GAASA,MAEjCpH,EAAAC,EAAAC,cAAA,4CAGZF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM0jB,UAAW7b,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,yBACxJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAKsf,kBAA/E,0BAvQJ/jB,+BCDHkkB,qNAEjBjlB,MAAQ,CACJklB,OAAQ,MAGZhlB,kBAAoB,WAChBmF,EAAK8f,eAGTA,UAAY,WAGR,IAFA,IAAIC,EAAY,GACZ/d,EAAQ,GACH4H,EAAI,EAAGA,EAAI5J,EAAKD,MAAMigB,aAAare,OAAQiI,IAEhD5H,EAAQ,CACJie,MAAOjgB,EAAKD,MAAMigB,aAAapW,GAAGlE,KAClCF,KAAMxF,EAAKD,MAAMigB,aAAapW,GAAGpE,MAGrCua,EAAUhN,KAAK/Q,GAIfhC,EAAKqC,SAAS,CACVwd,OAAQE,6EAMhB,OACIjlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAACiD,OAAQ,QAASlC,MAAO,UACtDhJ,EAAAC,EAAAC,cAACklB,EAAA,EAAD,CACIC,YAAY,eACZC,QAAS,CAACC,KAEVC,UAAU,EACVT,OAAQ1f,KAAKxF,MAAMklB,iBAtCEU,IAAM7kB,YC6jE5B8kB,6MA3iEX7lB,MAAQ,CACJyG,KAAM,GACN4e,aAAc,GACd7Z,QAAS,GACTsa,SAAU,GACVle,SAAU,GACVuF,SAAU,GACVmL,YAAa,GACb6I,aAAc,EACdtQ,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTmB,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZmB,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACT/C,QAAS,EACTC,QAAS,EACTuB,WAAY,EACZC,WAAY,EACZuB,QAAS,EACTC,QAAS,EACT/C,QAAS,EACTwB,WAAY,EACZwB,QAAS,EACT/C,QAAS,EACTwB,WAAY,EACZwB,QAAS,EACT/C,QAAS,EACTwB,WAAY,EACZwB,QAAS,EACT/C,QAAS,EACTwB,WAAY,EACZwB,QAAS,EACT3L,WAAY,OACZa,aAAc,OACdqc,WAAW,EACXC,WAAW,EAEXC,eAAe,EACfC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChB9Q,YAAY,EACZ+Q,cAAc,KAGlBnmB,kBAAoB,WAIhB4I,WAAW,WACPzD,EAAKvB,cACLuB,EAAKihB,gBACLjhB,EAAKkhB,kBAEN,SAGPnf,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAKhBsB,eAAiB,SAAC3G,GACdiD,EAAKqC,SAAS,CACVmB,WAAYzG,OAIpBmM,wBAA0B,SAACnM,GACvBiD,EAAKqC,SAAS,CACVgC,aAActH,OAWtBL,eAAiB,WAEbJ,EAAII,eAAesD,EAAKrF,MAAM4H,SAAS6D,IAAK,CACxC+a,UAAW9Y,IAAO,IAAIC,MAAQC,OAAO,cACrC6Y,UAAW/Y,MAASO,SAAS,EAAG,KAAKL,OAAO,gBAE3CzH,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVgf,YAAatgB,EAAIhE,SAGxBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAIpB2B,WAAW,WACPzD,EAAKyK,mBACLzK,EAAK0K,uBAEN,SAGP/N,eAAiB,WACbL,EAAIK,eAAeqD,EAAKrF,MAAM4H,SAAS6D,KAClCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVif,YAAavgB,EAAIhE,SAGxBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAKuhB,2BACN,QAKP9iB,YAAc,WAEV,IAAI4G,EAASrF,EAAKD,MAAMqB,KAAKC,IAC7B/E,EAAImC,YAAY4G,GACXvE,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACVE,SAAUxB,EAAIhE,KAAK,GACnB+K,SAAU/G,EAAIhE,KAAK,GAAGykB,SACtBxhB,EAAKyhB,iBACTzhB,EAAK0hB,qBACL1hB,EAAK2hB,cAELle,WAAW,WACPzD,EAAK4hB,aACL5hB,EAAK6hB,qBACL7hB,EAAKtD,iBACLsD,EAAKrD,kBACN,SAIfklB,mBAAqB,WAGjBvlB,EAAI+B,gBAAgB2B,EAAKrF,MAAM4H,SAAS6D,KACnCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVkD,MAAOxE,EAAIhE,SAGlBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,QAIxBmf,cAAgB,WACZ3kB,EAAI8C,aACC0B,KAAK,SAACC,GACHf,EAAKqC,SAAS,CACV8D,QAASpF,EAAIhE,YAK7BmkB,eAAiB,WACb5kB,EAAI+C,cACCyB,KAAK,SAACC,GACHf,EAAKqC,SAAS,CACVoe,SAAU1f,EAAIhE,YAK9B0kB,eAAiB,WACbhe,WAAW,WAEPnH,EAAIgD,YAAYU,EAAKrF,MAAM4H,SAAS6D,KAC/BtF,KAAK,SAAAC,GAAG,OAGLf,EAAKqC,SAAS,CACV4Q,YAAalS,EAAIhE,QAErB0G,WAAW,WAAQzD,EAAK8hB,iBAAmB,OAEpD,QAKPJ,mBAAqB,WACjBje,WAAW,WAEPnH,EAAIe,gBAAgB2C,EAAKrF,MAAM4H,SAAS6D,KACnCtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACV2d,aAAcjf,EAAIhE,QAEtB0G,WAAW,WAAQzD,EAAK+hB,qBAAuB,OAExD,QAGPJ,YAAc,WACVle,WAAW,WAEPnH,EAAIgB,SAAS0C,EAAKrF,MAAM4H,SAAS6D,KAC5BtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACV2f,MAAOjhB,EAAIhE,UAIxB,QAGPklB,YAAc,WACV3lB,EAAI2lB,YAAYjiB,EAAKrF,MAAM4H,SAAS6D,KAC/BtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,SAM1B6f,eAAiB,YAEqB,IAA9BliB,EAAKrF,MAAMunB,eACXliB,EAAKqC,SAAS,CACV6f,gBAAgB,IAGpBliB,EAAKqC,SAAS,CACV6f,gBAAgB,OAY5BH,kBAAoB,WAchB,IAZA,IAAIjL,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACD7N,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMqlB,aAAare,OAAQiI,IAEhD,OAAQ5J,EAAKrF,MAAMqlB,aAAapW,GAAGzO,MAC/B,IAAK,MACD2b,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZzX,EAAKqC,SAAS,CACVmM,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,OAIjBmK,WAAa,WAcT,IAZA,IAAIlO,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDzK,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDuY,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZrU,EAAKqC,SAAS,CACVmJ,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,OAIjByN,cAAgB,WAcZ,IAZA,IAAI1M,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDnM,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMsY,YAAYtR,OAAQiI,IAC/C,OAAQ5J,EAAKrF,MAAMsY,YAAYrJ,GAAGzO,MAC9B,IAAK,MACDia,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZ/V,EAAKqC,SAAS,CACV2K,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,OAIpBwL,wBAA0B,WActB,IAZA,IAAI3T,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM2mB,YAAY3f,OAAQiI,IAE/C,OAAQ5J,EAAKrF,MAAM2mB,YAAY1X,GAAGzO,MAC9B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACV8f,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,EACVwU,SAAUvU,OAIlB9D,iBAAmB,WAcf,IAZA,IAAIG,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,OAAQ5J,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACV0gB,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,EACVoY,SAAUnY,OAIlBb,oBAAsB,WAclB,IAZA,IAAI0B,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,IAA0C,IAAtC5J,EAAKrF,MAAM0mB,YAAYzX,GAAG5B,QAC1B,OAAQhI,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/M,EAAKqC,SAAS,CACVshB,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,EACbwX,YAAavX,OAWrB2T,UAAY,YAEqB,IAAzB1gB,EAAKrF,MAAM+lB,UACX1gB,EAAKqC,SAAS,CACVqe,WAAW,IAGf1gB,EAAKqC,SAAS,CACVqe,WAAW,EACXC,WAAW,EACX1Q,YAAY,EACZ2Q,eAAe,EACfC,WAAW,EACXC,WAAW,EACXE,cAAc,OAK1BL,UAAY,YACqB,IAAzB3gB,EAAKrF,MAAMgmB,UACX3gB,EAAKqC,SAAS,CACVse,WAAW,IAGf3gB,EAAKqC,SAAS,CACVqe,WAAW,EACXC,WAAW,EACX1Q,YAAY,EACZ2Q,eAAe,EACfC,WAAW,EACXC,WAAW,EACXE,cAAc,OAK1B/Q,WAAa,YACqB,IAA1BjQ,EAAKrF,MAAMsV,WACXjQ,EAAKqC,SAAS,CACV4N,YAAY,IAGhBjQ,EAAKqC,SAAS,CACVqe,WAAW,EACXC,WAAW,EACX1Q,YAAY,EACZ2Q,eAAe,EACfC,WAAW,EACXC,WAAW,EACXE,cAAc,OAK1BJ,cAAgB,YACqB,IAA7B5gB,EAAKrF,MAAMimB,cACX5gB,EAAKqC,SAAS,CACVue,eAAe,EACfI,cAAc,IAGlBhhB,EAAKqC,SAAS,CACVqe,WAAW,EACXC,WAAW,EACX1Q,YAAY,EACZ2Q,eAAe,EACfC,WAAW,EACXC,WAAW,EACXE,cAAc,OAK1BH,UAAY,YACqB,IAAzB7gB,EAAKrF,MAAMkmB,UACX7gB,EAAKqC,SAAS,CACVwe,WAAW,IAGf7gB,EAAKqC,SAAS,CACVqe,WAAW,EACXC,WAAW,EACX1Q,YAAY,EACZ2Q,eAAe,EACfC,WAAW,EACXC,WAAW,EACXE,cAAc,OAK1BF,UAAY,YACqB,IAAzB9gB,EAAKrF,MAAMmmB,UACX9gB,EAAKqC,SAAS,CACVye,WAAW,IAGf9gB,EAAKqC,SAAS,CACVqe,WAAW,EACXC,WAAW,EACX1Q,YAAY,EACZ2Q,eAAe,EACfC,WAAW,EACXC,WAAW,OAKvByD,gBAAkB,YACoB,IAA9BvkB,EAAKrF,MAAM6pB,eACXxkB,EAAKqC,SAAS,CACVmiB,gBAAgB,IAGpBxkB,EAAKqC,SAAS,CACVmiB,gBAAgB,OAK5BzD,eAAiB,YACqB,IAA9B/gB,EAAKrF,MAAMomB,eACX/gB,EAAKqC,SAAS,CACV0e,gBAAgB,IAGpB/gB,EAAKqC,SAAS,CACV0e,gBAAgB,OAM5B0D,kBAAoB,SAACjkB,GACjBA,EAAEC,iBACFS,QAAQC,IAAInB,EAAKrF,MAAM+pB,eACU,YAA7B1kB,EAAKrF,MAAM+pB,eACX1kB,EAAK4hB,aACL5hB,EAAK8hB,gBACL9hB,EAAK+hB,qBAC+B,eAA7B/hB,EAAKrF,MAAM+pB,eAClB1kB,EAAKtD,iBACLsD,EAAKrD,kBAC+B,gBAA7BqD,EAAKrF,MAAM+pB,gBAClB1kB,EAAKpD,kBACLoD,EAAKnD,sBAKbH,eAAiB,WACbJ,EAAII,eAAesD,EAAKrF,MAAM4H,SAAS6D,KAClCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVgf,YAAatgB,EAAIhE,SAGxBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAKyK,mBACLzK,EAAK0K,uBACN,QAGP9N,gBAAkB,WACdN,EAAIM,gBAAgBoD,EAAKrF,MAAM4H,SAAS6D,KACnCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVsiB,aAAc5jB,EAAIhE,SAGzBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAK4kB,oBACL5kB,EAAK6kB,wBACN,QAGPhoB,gBAAkB,WACdP,EAAIO,gBAAgBmD,EAAKrF,MAAM4H,SAAS6D,KACnCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVyiB,aAAc/jB,EAAIhE,SAGzBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAK+kB,qBACN,QAIPpoB,eAAiB,WACbL,EAAIK,eAAeqD,EAAKrF,MAAM4H,SAAS6D,KAClCtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVif,YAAavgB,EAAIhE,SAGxBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAKuhB,2BACN,QAIP9W,iBAAmB,WAcf,IAZA,IAAIG,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,OAAQ5J,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,OAIjBqZ,kBAAoB,WAchB,IAZA,IAAIha,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMgqB,aAAahjB,OAAQiI,IAEhD,OAAQ5J,EAAKrF,MAAMgqB,aAAa/a,GAAGzO,MAC/B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,OAOjBb,oBAAsB,WAclB,IAZA,IAAI0B,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,IAA0C,IAAtC5J,EAAKrF,MAAM0mB,YAAYzX,GAAG5B,QAC1B,OAAQhI,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,OAIpB8X,qBAAuB,WAcnB,IAZA,IAAIzY,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMgqB,aAAahjB,OAAQiI,IAEhD,IAA2C,IAAvC5J,EAAKrF,MAAMgqB,aAAa/a,GAAG5B,QAC3B,OAAQhI,EAAKrF,MAAMgqB,aAAa/a,GAAGzO,MAC/B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,OAIpBwU,wBAA0B,WActB,IAZA,IAAI3T,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM2mB,YAAY3f,OAAQiI,IAE/C,OAAQ5J,EAAKrF,MAAM2mB,YAAY1X,GAAGzO,MAC9B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,OAIjBwW,kBAAoB,WAchB,IAZA,IAAInX,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmqB,aAAanjB,OAAQiI,IAEhD,OAAQ5J,EAAKrF,MAAMmqB,aAAalb,GAAGzO,MAC/B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,6EAOR,IAAAtE,EAAA9J,KACL,OACIrF,EAAAC,EAAAC,cAAA,WASIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAA8C8H,MAAO,CAAE+C,QAAS,SAC3EhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe8H,MAAO,CAACgD,MAAO,eAAgB5F,KAAKxF,MAAM4H,SAAS8D,UAAjF,IAA6FlG,KAAKxF,MAAM4H,SAAS+D,SAAjH,cACAxL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClLV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BQ,GAAG,0BACzCX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKugB,WAAxC,SAEJ5lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKugB,WAAxC,iBAEJ5lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKygB,eAAxC,cAEJ9lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKwgB,WAAxC,UAEJ7lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK0gB,WAAxC,aAEJ/lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK2gB,WAAxC,aAKhBhmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAEuE,gBAAiB,gBACjDxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAWnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAIPkF,KAAKxF,MAAMimB,cACP9lB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,gCAAgCsH,MAAO,CAAEI,UAAW,SACxDrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAEuE,gBAAiB,kBAAmBtB,OAAQ,UAC5ElL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,4BACAjL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAItH,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAM+pB,cAAeliB,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,gBAAgBlH,UAAU,mBAAmByH,YAAY,uBACjL5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,YACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,eACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,iBAEJtH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAIJ,QAASxC,KAAKskB,kBAAmBxpB,UAAU,gCAA9D,SACAH,EAAAC,EAAAC,cAAA,eAKhBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACgqB,EAAD,CACI3f,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5B6M,YAAa9S,KAAKxF,MAAMsY,YACxBnL,SAAU3H,KAAKxF,MAAMmN,SACrBqL,SAAUhT,KAAKxF,MAAMqlB,aACrBxR,QAASrO,KAAKxF,MAAM6T,QACpBC,QAAStO,KAAKxF,MAAM8T,QACpBC,QAASvO,KAAKxF,MAAM+T,QACpBC,QAASxO,KAAKxF,MAAMgU,QACpBC,QAASzO,KAAKxF,MAAMiU,QACpBC,QAAS1O,KAAKxF,MAAMkU,QACpBrD,QAASrL,KAAKxF,MAAM6Q,QACpBC,QAAStL,KAAKxF,MAAM8Q,QACpBC,QAASvL,KAAKxF,MAAM+Q,QACpBC,QAASxL,KAAKxF,MAAMgR,QACpBC,QAASzL,KAAKxF,MAAMiR,QACpBC,QAAS1L,KAAKxF,MAAMkR,QACpBmB,WAAY7M,KAAKxF,MAAMqS,WACvBC,WAAY9M,KAAKxF,MAAMsS,WACvBC,WAAY/M,KAAKxF,MAAMuS,WACvBC,WAAYhN,KAAKxF,MAAMwS,WACvBC,WAAYjN,KAAKxF,MAAMyS,WACvBC,WAAYlN,KAAKxF,MAAM0S,WACvBvB,QAAS3L,KAAKxF,MAAMmR,QACpBC,QAAS5L,KAAKxF,MAAMoR,QACpBuB,WAAYnN,KAAKxF,MAAM2S,WACvBC,WAAYpN,KAAKxF,MAAM4S,WACvBuB,QAAS3O,KAAKxF,MAAMmU,QACpBC,QAAS5O,KAAKxF,MAAMoU,QACpB/C,QAAS7L,KAAKxF,MAAMqR,QACpBC,QAAS9L,KAAKxF,MAAMsR,QACpBuB,WAAYrN,KAAKxF,MAAM6S,WACvBC,WAAYtN,KAAKxF,MAAM8S,WACvBuB,QAAS7O,KAAKxF,MAAMqU,QACpBC,QAAS9O,KAAKxF,MAAMsU,QACpB/C,QAAS/L,KAAKxF,MAAMuR,QACpBC,QAAShM,KAAKxF,MAAMwR,QACpBuB,WAAYvN,KAAKxF,MAAM+S,WACvBC,WAAYxN,KAAKxF,MAAMgT,WACvBuB,QAAS/O,KAAKxF,MAAMuU,QACpBC,QAAShP,KAAKxF,MAAMwU,QACpB5M,SAAUpC,KAAKxF,MAAM4H,YAI7BzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAGrB,KAIVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEI,UAAW,SACrCrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAOVkF,KAAKxF,MAAM+lB,UACR5lB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,wBAAwBsH,MAAO,CAAEa,UAAW,WAChD9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAACiqB,EAAD,CACIrf,SAAUzF,KAAK1B,YACf2C,KAAMjB,KAAKxF,MAAM4H,SACjB8C,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5B7C,OAAQpD,KAAKxF,MAAM6I,WACnBa,aAAclE,KAAKxF,MAAM0J,aACzB9B,SAAUpC,KAAKxF,MAAM4H,SACrBmB,eAAgBvD,KAAKuD,eACrBwF,wBAAyB/I,KAAK+I,wBAC9BrG,SAAU1C,KAAKxF,MAAMyG,KAErB+E,QAAShG,KAAKxF,MAAMwL,YAKhCrL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ8H,MAAO,CAAEiD,OAAQ,GAAIC,SAAU,OAAQrC,UAAW,WACrE9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACkqB,EAAD,CAAe3iB,SAAUpC,KAAKxF,MAAM4H,aAG5CzH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ8H,MAAO,CAAEiD,OAAQ,GAAIC,SAAU,OAAQrC,UAAW,WACrE9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACmqB,EAAD,CAAqB5iB,SAAUpC,KAAKxF,MAAM4H,iBAOhE,KAQLpC,KAAKxF,MAAMgmB,UACR7lB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,kBACJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAACoqB,EAAD,CACI7iB,SAAUpC,KAAKxF,MAAM4H,SACrB8C,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5Bqa,SAAUtgB,KAAKxF,MAAM8lB,SACrBta,QAAShG,KAAKxF,MAAMwL,UAGxBrL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEI,UAAW,SAE/CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUyhB,WAAY,MAAOvhB,MAAO,SAA5D,eAKJhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBAAqB4X,aAAc,SAEpF5iB,EAAAC,EAAAC,cAACsqB,EAAD,CACI/iB,SAAUpC,KAAKxF,MAAM4H,SACrB8C,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5Bqa,SAAUtgB,KAAKxF,MAAM8lB,SACrBta,QAAShG,KAAKxF,MAAMwL,QACpBwX,YAAaxd,KAAKxF,MAAM4K,MACxBK,SAAUzF,KAAK0hB,mBACf7d,SAAU,OACVgC,OAAQ,cAU1B,KAQL7F,KAAKxF,MAAMsV,WACRnV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,eACjGjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,OAAQwB,gBAAiB,yBAA0BvB,MAAO,QAAS9C,OAAQ,OAAQiD,aAAc,SAA5I,eACApL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8H,MAAO,CAAE+C,QAAS,KAAMlC,UAAW,WAEzD9I,EAAAC,EAAAC,cAACkqB,EAAD,CAAe3iB,SAAUpC,KAAKxF,MAAM4H,WAEpCzH,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8H,MAAO,CAAE+C,QAAS,KAAMlC,UAAW,WAEzD9I,EAAAC,EAAAC,cAACmqB,EAAD,CAAqB5iB,SAAUpC,KAAKxF,MAAM4H,YAG9CzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8H,MAAO,CAAE+C,QAAS,OACtChL,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACwO,EAAD,CACInE,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5BvD,SAAU1C,KAAKxF,MAAMyG,KACrBwE,SAAUzF,KAAKuhB,mBACfnf,SAAUpC,KAAKxF,MAAM4H,SACrB4D,QAAShG,KAAKxF,MAAMwL,WAI5BrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8H,MAAO,CAAE+C,QAAS,OACtChL,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACuqB,EAAD,CACIlgB,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5BvD,SAAU1C,KAAKxF,MAAMyG,KAErBmB,SAAUpC,KAAKxF,MAAM4H,SACrB4D,QAAShG,KAAKxF,MAAMwL,aAKlC,KAQLhG,KAAKxF,MAAM6qB,kBACR1qB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,iCAEJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACgqB,EAAD,CACI3f,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5B6M,YAAa9S,KAAKxF,MAAMsY,YACxBnL,SAAU3H,KAAKxF,MAAMmN,SACrBqL,SAAUhT,KAAKxF,MAAMqlB,aACrBxR,QAASrO,KAAKxF,MAAM6T,QACpBC,QAAStO,KAAKxF,MAAM8T,QACpBC,QAASvO,KAAKxF,MAAM+T,QACpBC,QAASxO,KAAKxF,MAAMgU,QACpBC,QAASzO,KAAKxF,MAAMiU,QACpBC,QAAS1O,KAAKxF,MAAMkU,QACpBrD,QAASrL,KAAKxF,MAAM6Q,QACpBC,QAAStL,KAAKxF,MAAM8Q,QACpBC,QAASvL,KAAKxF,MAAM+Q,QACpBC,QAASxL,KAAKxF,MAAMgR,QACpBC,QAASzL,KAAKxF,MAAMiR,QACpBC,QAAS1L,KAAKxF,MAAMkR,QACpBmB,WAAY7M,KAAKxF,MAAMqS,WACvBC,WAAY9M,KAAKxF,MAAMsS,WACvBC,WAAY/M,KAAKxF,MAAMuS,WACvBC,WAAYhN,KAAKxF,MAAMwS,WACvBC,WAAYjN,KAAKxF,MAAMyS,WACvBC,WAAYlN,KAAKxF,MAAM0S,WACvBvB,QAAS3L,KAAKxF,MAAMmR,QACpBC,QAAS5L,KAAKxF,MAAMoR,QACpBuB,WAAYnN,KAAKxF,MAAM2S,WACvBC,WAAYpN,KAAKxF,MAAM4S,WACvBuB,QAAS3O,KAAKxF,MAAMmU,QACpBC,QAAS5O,KAAKxF,MAAMoU,QACpB/C,QAAS7L,KAAKxF,MAAMqR,QACpBC,QAAS9L,KAAKxF,MAAMsR,QACpBuB,WAAYrN,KAAKxF,MAAM6S,WACvBC,WAAYtN,KAAKxF,MAAM8S,WACvBuB,QAAS7O,KAAKxF,MAAMqU,QACpBC,QAAS9O,KAAKxF,MAAMsU,QACpB/C,QAAS/L,KAAKxF,MAAMuR,QACpBC,QAAShM,KAAKxF,MAAMwR,QACpBuB,WAAYvN,KAAKxF,MAAM+S,WACvBC,WAAYxN,KAAKxF,MAAMgT,WACvBuB,QAAS/O,KAAKxF,MAAMuU,QACpBC,QAAShP,KAAKxF,MAAMwU,QACpB5M,SAAUpC,KAAKxF,MAAM4H,cAMnC,KAULpC,KAAKxF,MAAMkmB,UAER/lB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,0BACJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8H,MAAO,CAAE0iB,OAAQ,EAAG3f,QAAS,SACjDhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,sBACA9I,EAAAC,EAAAC,cAAC0qB,EAAD,CACI1F,aAAc7f,KAAKxF,MAAMqlB,kBAKzCllB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACwO,EAAD,CACInE,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5BvD,SAAU1C,KAAKxF,MAAMyG,KACrBwE,SAAUzF,KAAKuhB,mBACfnf,SAAUpC,KAAKxF,MAAM4H,SACrB4D,QAAShG,KAAKxF,MAAMwL,YAIhCrL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,SAGjBhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOC,MAAO,QAAS9C,OAAQ,SAA1E,sBACAnI,EAAAC,EAAAC,cAAA,aAMJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBAAqB4X,aAAc,SAEhFvd,KAAKxF,MAAMqlB,aACPllB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,QAASC,SAAU,SAEjC9F,KAAKxF,MAAMqlB,aAAa9b,IAAI,SAAAyhB,GAAI,OAC5B7qB,EAAAC,EAAAC,cAAC4qB,EAAD,CACIzhB,IAAKwhB,EAAKvf,IACV3K,GAAIkqB,EAAKvf,IACT5B,SAAUmhB,EAAKnhB,SACf9C,OAAQikB,EAAKjkB,OACbvG,KAAMwqB,EAAKxqB,KACX0qB,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXrgB,OAAQkgB,EAAKlgB,OACblC,OAAQoiB,EAAKpiB,OACbiC,KAAMmgB,EAAKngB,KACXD,MAAOogB,EAAKpgB,MACZ1C,SAAUoH,EAAKtP,MAAMyG,KACrBwE,SAAUqE,EAAKyX,mBACftgB,KAAM6I,EAAKtP,MAAM4H,SACjB8B,aAAcshB,EAAKthB,aACnB8B,QAAS8D,EAAKtP,MAAMwL,QACpBgE,WAAY,OACZE,SAAU,OACV3E,KAAMigB,EAAKjgB,UAKzB,WAUhC,KAQLvF,KAAKxF,MAAMmmB,UACRhmB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,mBACJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAACuqB,EAAD,CACIlgB,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5BvD,SAAU1C,KAAKxF,MAAMyG,KAErBmB,SAAUpC,KAAKxF,MAAM4H,SACrB4D,QAAShG,KAAKxF,MAAMwL,WAI5BrL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAGjBhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOwB,gBAAiB,GAAIvB,MAAO,UAA9E,aAAmGjL,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKokB,iBAAvD,WAElHpkB,KAAKxF,MAAM6pB,eACR1pB,EAAAC,EAAAC,cAAA,WACKmF,KAAKxF,MAAMqnB,MACRlnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,QAASC,SAAU,SACpC9F,KAAKxF,MAAMqnB,MAAM9d,IAAI,SAAA6hB,GAAI,OACtBjrB,EAAAC,EAAAC,cAACgrB,EAAD,CACI7hB,IAAK4hB,EAAK3f,IACV3K,GAAIsqB,EAAK3f,IACT8X,SAAU6H,EAAK/G,WACfb,SAAU4H,EAAK5H,SACfC,WAAY2H,EAAKviB,WACjB6a,UAAW0H,EAAK1H,UAChBC,SAAUyH,EAAKzH,SACfC,cAAewH,EAAK1hB,aACpBoa,eAAgBsH,EAAK7G,WACrBR,eAAgBqH,EAAK3G,kBACrBT,qBAAsBoH,EAAK1G,iBAC3BT,YAAamH,EAAK9G,QAClBO,WAAYuG,EAAKtkB,QACjB+c,WAAYuH,EAAKrkB,OACjByE,QAAS8D,EAAKtP,MAAMwL,QACpB5D,SAAU0H,EAAKtP,MAAM4H,aAlBjC,MAuBF,MAER,UAMxB,MAITpC,KAAKxF,MAAMqmB,aAERlmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAQXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVkF,KAAKxF,MAAM0mB,YACRvmB,EAAAC,EAAAC,cAACirB,EAAD,CACI5gB,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5B0B,SAAU3H,KAAKxF,MAAM0mB,cAEvB,MAEVvmB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCmF,KAAKxF,MAAM+lB,UACR5lB,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAE+C,QAAS,SACnChL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8H,MAAO,CAAEiD,OAAQ,GAAIpC,UAAW,WACpD9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACkqB,EAAD,CAAe3iB,SAAUpC,KAAKxF,MAAM4H,aAG5CzH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8H,MAAO,CAAEiD,OAAQ,GAAIpC,UAAW,WACpD9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACmqB,EAAD,CAAqB5iB,SAAUpC,KAAKxF,MAAM4H,iBAmBtEzH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKS,GAAG,IACJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,OAAQ4Z,aAAc,SACvC5iB,EAAAC,EAAAC,cAACwO,EAAD,CACInE,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5BvD,SAAU1C,KAAKxF,MAAMyG,KACrBwE,SAAUzF,KAAKuhB,mBACfnf,SAAUpC,KAAKxF,MAAM4H,SACrB4D,QAAShG,KAAKxF,MAAMwL,WAK5BrL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,OAAQ4Z,aAAc,SAGvC5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,QAApF,oBACAnI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAASC,UAAU,8BAA8B0H,QAASxC,KAAK+hB,gBAA/D,WAMb/hB,KAAKxF,MAAMunB,eACRpnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBAE7C3F,KAAKxF,MAAMqlB,aACPllB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,QAASC,SAAU,OAAQ9C,UAAW,QAEpDhD,KAAKxF,MAAMqlB,aAAa9b,IAAI,SAAAyhB,GAAI,OAC5B7qB,EAAAC,EAAAC,cAAC4qB,EAAD,CACIzhB,IAAKwhB,EAAKvf,IACV3K,GAAIkqB,EAAKvf,IACT5B,SAAUmhB,EAAKnhB,SACfrJ,KAAMwqB,EAAKxqB,KACX0qB,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXrgB,OAAQkgB,EAAKlgB,OACblC,OAAQoiB,EAAKpiB,OACbiC,KAAMmgB,EAAKngB,KACXD,MAAOogB,EAAKpgB,MACZ1C,SAAUoH,EAAKtP,MAAMyG,KACrBwE,SAAUqE,EAAKyX,mBACftgB,KAAM6I,EAAKtP,MAAM4H,SACjB8B,aAAcshB,EAAKthB,aACnB8B,QAAS8D,EAAKtP,MAAMwL,QACpBT,KAAMigB,EAAKjgB,UAKzB,MAEL,QASzB5K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAE2a,aAAc,SAExC5iB,EAAAC,EAAAC,cAACoqB,EAAD,CACI7iB,SAAUpC,KAAKxF,MAAM4H,SACrB8C,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5Bqa,SAAUtgB,KAAKxF,MAAM8lB,SACrBta,QAAShG,KAAKxF,MAAMwL,QACpBP,SAAUzF,KAAK0hB,sBAKvB/mB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAKXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE2a,aAAc,OAAQ5Z,MAAO,SACjEhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,QAApF,aAGInI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAASC,UAAU,8BAA8B0H,QAASxC,KAAK4gB,gBAA/D,WAKb5gB,KAAKxF,MAAMomB,eACRjmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBACjDhL,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiB,SAAU,SACpBlJ,EAAAC,EAAAC,cAACsqB,EAAD,CACI/iB,SAAUpC,KAAKxF,MAAM4H,SACrB8C,OAAQlF,KAAKxF,MAAM4H,SAAS6D,IAC5Bqa,SAAUtgB,KAAKxF,MAAM8lB,SACrBta,QAAShG,KAAKxF,MAAMwL,QACpBwX,YAAaxd,KAAKxF,MAAM4K,MACxBK,SAAUzF,KAAK0hB,mBACf7d,SAAU,OACVgC,OAAQ,YAIlBlL,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,gBAclD,iBAjiEZtK,aCohGXwqB,sBAriGX,SAAAA,EAAYnmB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+lB,IACflmB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAimB,GAAA5lB,KAAAH,KAAMJ,KAgCVlF,kBAAoB,aAjCDmF,EAqCnB2Q,cAAgB,YACqB,IAA7B3Q,EAAKrF,MAAMyU,cACXpP,EAAKqC,SAAS,CACV+M,eAAe,IAGnBpP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5DxBzR,EAiEnB0R,iBAAmB,YACqB,IAAhC1R,EAAKrF,MAAM0U,iBACXrP,EAAKqC,SAAS,CACVgN,kBAAkB,IAGtBrP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxFxBzR,EA6FnB2R,cAAgB,YACqB,IAA7B3R,EAAKrF,MAAM2U,cACXtP,EAAKqC,SAAS,CACViN,eAAe,IAGnBtP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApHxBzR,EAyHnB4R,gBAAkB,YACuB,IAAjC5R,EAAKrF,MAAMiW,kBACX5Q,EAAKqC,SAAS,CACVuO,mBAAmB,IAGvB5Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhJxBzR,EAqJnB6R,mBAAqB,YACuB,IAApC7R,EAAKrF,MAAMkW,qBACX7Q,EAAKqC,SAAS,CACVwO,sBAAsB,IAG1B7Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5KxBzR,EAiLnB8R,gBAAkB,YACuB,IAAjC9R,EAAKrF,MAAMmW,kBACX9Q,EAAKqC,SAAS,CACVyO,mBAAmB,IAGvB9Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxMxBzR,EA6MnB+R,gBAAkB,YACuB,IAAjC/R,EAAKrF,MAAMoW,kBACX/Q,EAAKqC,SAAS,CACV0O,mBAAmB,IAGvB/Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApOxBzR,EAyOnBgS,mBAAqB,YACuB,IAApChS,EAAKrF,MAAMqW,qBACXhR,EAAKqC,SAAS,CACV2O,sBAAsB,IAG1BhR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhQxBzR,EAqQnBiS,gBAAkB,YACuB,IAAjCjS,EAAKrF,MAAMsW,kBACXjR,EAAKqC,SAAS,CACV4O,mBAAmB,IAGvBjR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5RxBzR,EAiSnBkS,wBAA0B,YACqB,IAAvClS,EAAKrF,MAAMuW,wBACXlR,EAAKqC,SAAS,CACV6O,yBAAyB,IAG7BlR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxTxBzR,EA6TnBmS,sBAAwB,YACqB,IAArCnS,EAAKrF,MAAMwW,sBACXnR,EAAKqC,SAAS,CACV8O,uBAAuB,IAG3BnR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApVxBzR,EAyVnBoS,uBAAyB,YACqB,IAAtCpS,EAAKrF,MAAMyW,uBACXpR,EAAKqC,SAAS,CACV+O,wBAAwB,IAG5BpR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhXxBzR,EAqXnBqS,uBAAyB,YACqB,IAAtCrS,EAAKrF,MAAM0W,uBACXrR,EAAKqC,SAAS,CACVgP,wBAAwB,IAG5BrR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5YxBzR,EAiZnBsS,wBAA0B,YACqB,IAAvCtS,EAAKrF,MAAM2W,wBACXtR,EAAKqC,SAAS,CACViP,yBAAyB,IAG7BtR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAxaxBzR,EA6anBuS,sBAAwB,YACqB,IAArCvS,EAAKrF,MAAM4W,sBACXvR,EAAKqC,SAAS,CACVkP,uBAAuB,IAG3BvR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KApcxBzR,EAycnBwS,sBAAwB,YACqB,IAArCxS,EAAKrF,MAAM6W,sBACXxR,EAAKqC,SAAS,CACVmP,uBAAuB,IAG3BxR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAhexBzR,EAqenByS,8BAAgC,YACqB,IAA7CzS,EAAKrF,MAAM8W,8BACXzR,EAAKqC,SAAS,CACVoP,+BAA+B,IAGnCzR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA5fxBzR,EAkgBnB0S,iBAAmB,SAAC1Q,GAChBA,EAAMvB,iBACNS,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM6I,YAOtD,IALA,IAAImP,EAAmB,CACnBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IACxC5J,EAAKD,MAAM+H,SAAS8B,GAAGrG,SAAWvD,EAAKrF,MAAM6I,YAC7CmP,EAAiBC,YAAYG,KAAK/S,EAAKD,MAAM+H,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKD,MAAMkT,YAAYtR,OAAQqR,IAC3ChT,EAAKD,MAAMkT,YAAYD,GAAGzP,SAAWvD,EAAKrF,MAAM6I,YAChDmP,EAAiBE,eAAeE,KAAK/S,EAAKD,MAAMkT,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKD,MAAMoT,SAASxR,OAAQuR,IACxClT,EAAKD,MAAMoT,SAASD,GAAG3P,SAAWvD,EAAKrF,MAAM6I,YAC7CmP,EAAiBG,YAAYC,KAAK/S,EAAKD,MAAMoT,SAASD,IAI9DzP,WAAW,WAEPzD,EAAKqC,SAAS,CACV+Q,eAAgBT,EAAiBC,YACjCS,kBAAmBV,EAAiBE,eACpCS,eAAgBX,EAAiBG,cAErCrP,WAAW,WACPzD,EAAKuT,mBACLvT,EAAKwT,sBACLxT,EAAKyT,mBAELhQ,WAAW,WAAQzD,EAAKwS,yBAA2B,MACpD,MAEJ,MA5iBYxS,EAgjBnByT,iBAAmB,WACfvS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMyY,gBAcrC,IAbA,IAAIM,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAS,EACJ1K,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMyY,eAAezR,OAAQiI,IAElD,OAAQ5J,EAAKrF,MAAMyY,eAAexJ,GAAGzO,MACjC,IAAK,MACDuY,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDF,IACAE,IACA,MACJ,IAAK,MACDD,IACAC,IACA,MACJ,QACIA,IAIZtU,EAAKqC,SAAS,CACVkS,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,YAAab,KApoBFtU,EAyoBnBwT,oBAAsB,WAClBtS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM0Y,mBAcrC,IAbA,IAAI+B,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAY,EACPpM,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0Y,kBAAkB1R,OAAQiI,IACrD,OAAQ5J,EAAKrF,MAAM0Y,kBAAkBzJ,GAAGzO,MACpC,IAAK,MACDia,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDA,IACAF,IACA,MACJ,IAAK,MACDE,IACAD,IACA,MACJ,QACIC,IAIZhW,EAAKqC,SAAS,CACV4T,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,eAAgBb,KA5tBLhW,EAguBnBuT,iBAAmB,WACfrS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM2Y,gBAcrC,IAbA,IAAIwD,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAS,EACJ9N,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM2Y,eAAe3R,OAAQiI,IAElD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAM2Y,eAAe1J,IAC9B5J,EAAKrF,MAAM2Y,eAAe1J,GAAGzO,MACjC,IAAK,MACD2b,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDF,IACAE,IACA,MACJ,IAAK,MACDD,IACAC,IACA,MACJ,QACIA,IAIZ1X,EAAKqC,SAAS,CACVsV,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,YAAab,KApzBF1X,EA0zBnBwY,iBAAmB,SAACxW,GAChBA,EAAMvB,iBACNS,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM0J,cAOtD,IALA,IAAIoU,EAAmB,CACnB7F,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKD,MAAM+H,SAASnG,OAAQiI,IACxC5J,EAAKD,MAAM+H,SAAS8B,GAAGvF,eAAiBrE,EAAKrF,MAAM0J,cACnDoU,EAAiB7F,YAAYG,KAAK/S,EAAKD,MAAM+H,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKD,MAAMkT,YAAYtR,OAAQqR,IAC3ChT,EAAKD,MAAMkT,YAAYD,GAAG3O,eAAiBrE,EAAKrF,MAAM0J,cACtDoU,EAAiB5F,eAAeE,KAAK/S,EAAKD,MAAMkT,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKD,MAAMoT,SAASxR,OAAQuR,IACxClT,EAAKD,MAAMoT,SAASD,GAAG7O,eAAiBrE,EAAKrF,MAAM0J,cACnDoU,EAAiB3F,YAAYC,KAAK/S,EAAKD,MAAMoT,SAASD,IAI9DzP,WAAW,WAEPzD,EAAKqC,SAAS,CACVqW,eAAgBD,EAAiB7F,YACjC+F,kBAAmBF,EAAiB5F,eACpC+F,eAAgBH,EAAiB3F,cAErCrP,WAAW,WACPzD,EAAK6Y,mBACL7Y,EAAK8Y,sBACL9Y,EAAK+Y,mBAELtV,WAAW,WAAQzD,EAAKyS,iCAAmC,MAC5D,MAEJ,MAp2BYzS,EAw2BnB+Y,iBAAmB,WACf7X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM+d,gBAcrC,IAbA,IAAIhF,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN2E,EAAS,EACJpP,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM+d,eAAe/W,OAAQiI,IAElD,OAAQ5J,EAAKrF,MAAM+d,eAAe9O,GAAGzO,MACjC,IAAK,MACDuY,IACAsF,IACA,MACJ,IAAK,MACDrF,IACAqF,IACA,MACJ,IAAK,MACDpF,IACAoF,IACA,MACJ,IAAK,MACDnF,IACAmF,IACA,MACJ,IAAK,MACDlF,IACAkF,IACA,MACJ,IAAK,MACDjF,IACAiF,IACA,MACJ,IAAK,MACDhF,IACAgF,IACA,MACJ,IAAK,MACD/E,IACA+E,IACA,MACJ,IAAK,MACD9E,IACA8E,IACA,MACJ,IAAK,MACD7E,IACA6E,IACA,MACJ,IAAK,MACD5E,IACA4E,IACA,MACJ,IAAK,MACD3E,IACA2E,IACA,MACJ,QACIA,IAIZhZ,EAAKqC,SAAS,CACV4W,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,YAAab,KA57BFhZ,EAg8BnB8Y,oBAAsB,WAClB5X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMge,mBAcrC,IAbA,IAAIvD,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN+D,EAAY,EACPlQ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMge,kBAAkBhX,OAAQiI,IACrD,OAAQ5J,EAAKrF,MAAMge,kBAAkB/O,GAAGzO,MACpC,IAAK,MACDia,IACA0E,IACA,MACJ,IAAK,MACDzE,IACAyE,IACA,MACJ,IAAK,MACDxE,IACAwE,IACA,MACJ,IAAK,MACDvE,IACAuE,IACA,MACJ,IAAK,MACDtE,IACAsE,IACA,MACJ,IAAK,MACDrE,IACAqE,IACA,MACJ,IAAK,MACDpE,IACAoE,IACA,MACJ,IAAK,MACDnE,IACAmE,IACA,MACJ,IAAK,MACDlE,IACAkE,IACA,MACJ,IAAK,MACDjE,IACAiE,IACA,MACJ,IAAK,MACDA,IACAhE,IACA,MACJ,IAAK,MACDgE,IACA/D,IACA,MACJ,QACI+D,IAIZ9Z,EAAKqC,SAAS,CACV0X,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,eAAgBb,KAnhCL9Z,EAwhCnB6Y,iBAAmB,WACf3X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMie,gBAcrC,IAbA,IAAI9B,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNmD,EAAS,EACJhR,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMie,eAAejX,OAAQiI,IAElD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAMie,eAAehP,IAC9B5J,EAAKrF,MAAMie,eAAehP,GAAGzO,MACjC,IAAK,MACD2b,IACA8D,IACA,MACJ,IAAK,MACD7D,IACA6D,IACA,MACJ,IAAK,MACD5D,IACA4D,IACA,MACJ,IAAK,MACD3D,IACA2D,IACA,MACJ,IAAK,MACD1D,IACA0D,IACA,MACJ,IAAK,MACDzD,IACAyD,IACA,MACJ,IAAK,MACDxD,IACAwD,IACA,MACJ,IAAK,MACDvD,IACAuD,IACA,MACJ,IAAK,MACDtD,IACAsD,IACA,MACJ,IAAK,MACDrD,IACAqD,IACA,MACJ,IAAK,MACDpD,IACAoD,IACA,MACJ,IAAK,MACDnD,IACAmD,IACA,MACJ,QACIA,IAIZ5a,EAAKqC,SAAS,CACVwY,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,YAAab,KA5mCF5a,EAgnCnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAnnCGpC,EAunCnB0b,eAAiB,SAAClb,GAEd,OADAA,EAAEC,iBACMT,EAAKrF,MAAMghB,YACf,IAAK,WACD3b,EAAK2Q,gBACL,MACJ,IAAK,cACD3Q,EAAK0R,mBACL,MACJ,IAAK,WACD1R,EAAK2R,gBACL,MACJ,IAAK,UACD3R,EAAK4R,kBACL,MACJ,IAAK,aACD5R,EAAK6R,qBACL,MACJ,IAAK,UACD7R,EAAK8R,kBACL,MACJ,IAAK,UACD9R,EAAK+R,kBACL,MACJ,IAAK,aACD/R,EAAKgS,qBACL,MACJ,IAAK,UACDhS,EAAKiS,kBACL,MACJ,QACI/Q,QAAQC,IAAI,wBAtpCLnB,EA4pCnB4b,mBAAqB,SAACpb,GAGlB,OAFAA,EAAEC,iBAEMT,EAAKrF,MAAMkhB,gBACf,IAAK,QACD7b,EAAKkS,0BACL,MACJ,IAAK,QACDlS,EAAKmS,wBACL,MACJ,IAAK,QACDnS,EAAKqS,yBACL,MACJ,IAAK,QACDrS,EAAKoS,yBACL,MACJ,IAAK,QACDpS,EAAKsS,0BACL,MACJ,IAAK,QACDtS,EAAKuS,wBACL,MACJ,QACIrR,QAAQC,IAAI,8BAnrCLnB,EAyrCnBmmB,kBAAoB,WACXnmB,EAAKrF,MAAMwrB,kBAKZnmB,EAAKqC,SAAS,CACV8jB,mBAAmB,IALvBnmB,EAAKqC,SAAS,CACV8jB,mBAAmB,KA1rC3BnmB,EAAKrF,MAAQ,CACT+V,YAAa,EACboL,aAAc,EACdtW,KAAM,GACNoN,YAAa,GACbxD,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvB/N,WAAY,OACZa,aAAc,OACd+O,eAAgB,GAChBC,kBAAmB,GACnBC,eAAgB,GAChB9B,uBAAuB,EACvBC,+BAA+B,EAC/B0U,mBAAmB,GA7BRnmB,wEAssCf,OAEIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACX8H,MAAO,CAEHgD,MAAO,QACPD,QAAS,MAGbhL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,qBACAjL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,4BACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMghB,WAAYnZ,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC1GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,4BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,YAAf,aACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,gBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,YAAf,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,+BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,kCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,sCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,kCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,qCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,0CAEJtH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKub,gBAA9D,eAKZ5gB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,4BACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMkhB,eAAgBrZ,SAAUrC,KAAK4B,kBAAmBI,KAAK,kBAC9GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,0BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,kBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,iBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,sBAEJtH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKyb,oBAA9D,gBAMhB9gB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACKmF,KAAKJ,MAAMqmB,YAAYniB,QACpBnJ,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,uCACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM6I,WAAYhB,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC1GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,sCACCjC,KAAKJ,MAAMqmB,YAAYniB,QAAQC,IAAI,SAAAX,GAAM,OACtCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAG7CzI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKuS,kBAA9D,aAEF,OAId5X,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,YACKmF,KAAKJ,MAAMqmB,YAAY9hB,cACpBxJ,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,uCACA9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAM0J,aAAcpJ,UAAU,GAAGuH,SAAUrC,KAAK4B,kBAAmBI,KAAK,gBAC5GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,qCACCjC,KAAKJ,MAAMqmB,YAAY9hB,cAAcJ,IAAI,SAAAhC,GAAM,OAC5CpH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKjC,EAAQE,MAAOF,GAASA,MAG7CpH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKqY,kBAA9D,aACK,QAQzB1d,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKgmB,mBAA9D,SAGJrrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAItBkF,KAAKxF,MAAMwrB,kBACRrrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAG8H,MAAO,CAAEa,UAAW,WAClC9I,EAAAC,EAAAC,cAAA,sBAAcmF,KAAKJ,MAAMqmB,YAAY/f,UAArC,IAAiDlG,KAAKJ,MAAMqmB,YAAY9f,UACxExL,EAAAC,EAAAC,cAAA,YAEHmF,KAAKxF,MAAMyU,cACRtU,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,UACjBjL,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,gBAAiDzD,KAAKJ,MAAM+H,SAASnG,QAErE7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,YAGxCuD,QAAS,CACLC,OAAQ,CACJC,SAAS,OAKzB9U,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAC5DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,YACA,mBACA,iBACA,mBACA,YACA,kBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAEpC7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,WAEJ0U,YAAa,CACT,UACA,UACA,UACA,UACA,UACA,cAGTtM,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,SAK1BphB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,oBAKlE,KAGLkF,KAAKxF,MAAM0U,iBACRvU,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WACrC9I,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAxC,mBAAoE5F,KAAKJ,MAAMkT,YAAYtR,UAYnG7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,kBAInD7S,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qBACA,mBACA,iBACA,oBACA,eACA,qBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAEvCrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC9B,KAqCAphB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,mBA/EpE,KAmFoB,KAKpBkF,KAAKxF,MAAM2U,cACPxU,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WACrC9I,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,QAASnC,UAAW,WAAvC,uBAAwEzD,KAAKJ,MAAMoT,SAASxR,OAA5F,OAIR7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChCtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,eAIhDrU,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,kBAE5DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qBACA,mBACA,iBACA,oBACA,eACA,qBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChCtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,SAIxBphB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,iBAAmBrM,UAAU,mBArE1E,KAsEoB,KAG5BH,EAAAC,EAAAC,cAAA,WAMCmF,KAAKxF,MAAMiW,kBACR9V,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtDjL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACKmF,KAAKJ,MAAMyL,QACRrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMmM,WAK3BpR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMmM,eAK3BpR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMmM,SAEf5E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAjC9B,KAqCAphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAhFvB,OAiFsB,KAOzBkF,KAAKxF,MAAMkW,qBACR/V,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACKmF,KAAKJ,MAAMiN,WACR7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAM2N,cAI3B5S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM2N,kBAK3B5S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM2N,YAEfpG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,SAM9BphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEd,KAObH,EAAAC,EAAAC,cAAA,WACCmF,KAAKxF,MAAMmW,kBACRhW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACKmF,KAAKJ,MAAMyO,QACRrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMmP,WAK3BpU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMmP,eAK3BpU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMmP,SAEf5H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC1B,KAoCAphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEd,KAOZkF,KAAKxF,MAAMoW,kBACRjW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACKmF,KAAKJ,MAAM0L,QACRtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMoM,WAI3BrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMoM,eAI3BrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMoM,SAEf7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA/B1B,KAmCAphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cA1EvB,KA2EoB,KAOvBkF,KAAKxF,MAAMqW,qBACRlW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACKmF,KAAKJ,MAAMkN,WACR9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM4N,cAI3B7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM4N,kBAK3B7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM4N,YAEfrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC9B,KAqCAphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cA7EvB,KA8EoB,KAQvBkF,KAAKxF,MAAMsW,kBACRnW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UACtDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,UAApB,2CACAjL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACKmF,KAAKJ,MAAM0O,QACRtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMoP,WAI3BrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMoP,cAb3B,KAgBArU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAAQ7C,OAAQ,IACxGnI,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMoP,SAEf7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhC9B,KAqCAphB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cA3EvB,KA4EoB,KAQvBkF,KAAKxF,MAAMuW,wBACRpW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAEvDjL,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,kCACA,qBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAAUtL,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WAC7E9M,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YAEvC3F,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,cAAMmhB,KAAKC,OAAOjc,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,aAAe9M,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAAW,KAA/G,eAIJ3Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,yCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WAAa9M,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChFtO,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,SAEpCnH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,UAAYtO,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YAAc,KAA9G,kBAIJnS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAAUtL,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAC1EtO,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,SAEpCnH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,cAAMmhB,KAAKC,OAAOjc,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,UAAYtO,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAAW,KAAzG,iBAQV,KAMLtL,KAAKxF,MAAMwW,sBACRrW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAEvDjL,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,gCACA,mBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAAUxL,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WAC7EhN,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAEvC7F,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SAAW,KAA9G,eAIJ7Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,uBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WAAahN,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChFxO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,SAEpCrH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,UAAYxO,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAAc,KAA9G,kBAIJrS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,mCACA,uBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAAUxL,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAC1ExO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,SAEpCrH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,UAAYxO,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SAAW,KAAxG,iBAQV,KAOLxL,KAAKxF,MAAMyW,uBACRtW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAEvDjL,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uCACA,2BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAAU1L,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WAC7ElN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YAEvC/F,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,cAAMmhB,KAAKC,OAAOjc,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,aAAelN,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SAAW,KAA/G,eAIJ/Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,8CACA,+BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WAAalN,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChF1O,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,SAEpCvH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,UAAY1O,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YAAc,KAA9G,kBAIJvS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,2CACA,+BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAAU1L,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAC1E1O,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,SAEpCvH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,UAAY1O,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SAAW,KAAxG,sBAQV,KAML1L,KAAKxF,MAAM0W,uBACRvW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAEvDjL,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,gCACA,oBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAAU5L,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WAC7EpN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAEvCjG,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,aAAepN,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAAW,KAA9G,eAIJjR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uCACA,wBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WAAapN,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChF5O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,SAEpCzH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,UAAY5O,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAAc,KAA9G,kBAIJzS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oCACA,wBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAAU5L,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAC1E5O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,SAEpCzH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,UAAY5O,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAAW,KAAxG,iBAMV,KAML5L,KAAKxF,MAAM2W,wBACRxW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAEvDjL,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,iCACA,qBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAAU9L,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WAC7EtN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YAEvCnG,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,aAAetN,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAAW,KAA9G,eAIJnR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,wCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WAAatN,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChF9O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,SAEpC3H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,UAAY9O,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YAAc,KAA9G,kBAIJ3S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAAU9L,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAC1E9O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,SAEpC3H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,UAAY9O,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAAW,KAAxG,iBAQV,KAML9L,KAAKxF,MAAM4W,sBACRzW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAEvDjL,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,QAAUhM,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,WAC7ExN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAEvCrG,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAGrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,aAAexN,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAAW,KAA9G,eAIJrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,6CACA,8BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,WAAaxN,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QAChFhP,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAGrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,UAAYhP,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAAc,KAA9G,kBAIJ7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,yCACA,wCAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,QAAUhM,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QAC1EhP,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAGrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,OAAOjc,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,UAAYhP,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAAW,KAAxG,iBAOV,KAMLhM,KAAKxF,MAAM6W,sBACR1W,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,UACjBjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAImF,KAAKxF,MAAM6I,WAAf,oBAiBJ1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACX8H,MAAO,CACHuE,gBAAiB,wBACjBxB,QAAS,OACbhL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,UAA4CzD,KAAKxF,MAAMyY,eAAezR,QACtE7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,wBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAM4Z,SACXpU,KAAKxF,MAAM8Z,SACXtU,KAAKxF,MAAMga,SACXxU,KAAKxF,MAAMka,SACX1U,KAAKxF,MAAMoa,SACX5U,KAAKxF,MAAMsa,SACX9U,KAAKxF,MAAMua,SACX/U,KAAKxF,MAAM6Z,SACXrU,KAAKxF,MAAM+Z,SACXvU,KAAKxF,MAAMia,SACXzU,KAAKxF,MAAMma,SACX3U,KAAKxF,MAAMqa,UAEf1N,gBAAiB,CACb,UACA,cAKRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAnC9B,MAyCJphB,EAAAC,EAAAC,cAAA,WAMAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAC9EhL,EAAAC,EAAAC,cAAA,UAAKmF,KAAKxF,MAAM6I,WAAhB,sBACA1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,0BAAkBmF,KAAKxF,MAAMwa,aAC7Bra,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,4BAIRC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMwa,YAAchV,KAAKxF,MAAMkc,eACpC1W,KAAKxF,MAAMkc,gBAEfvP,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,cAAMmhB,KAAKC,MAAOjc,KAAKxF,MAAMkc,eAAiB1W,KAAKxF,MAAMwa,YAAe,KAAxE,eAGJra,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,6BAAqBmF,KAAKxF,MAAMkc,gBAChC/b,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,4CAIRC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkc,eAAiB1W,KAAKxF,MAAM4d,YACvCpY,KAAKxF,MAAM4d,aAEfjR,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAKrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,cAAMmhB,KAAKC,MAAOjc,KAAKxF,MAAM4d,YAAcpY,KAAKxF,MAAMkc,eAAkB,KAAxE,kBAIJ/b,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKxF,MAAM4d,aACpCzd,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,+CAIRC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMwa,YAAchV,KAAKxF,MAAM4d,YACpCpY,KAAKxF,MAAM4d,aAEfjR,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAM4d,YAAcpY,KAAKxF,MAAMwa,YAAe,KAApE,kBASd,KAOLhV,KAAKxF,MAAM8W,8BACR3W,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAC9EhL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAImF,KAAKxF,MAAM0J,aAAf,YACJvJ,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,gBAAiDzD,KAAKxF,MAAM+d,eAAe/W,QAgB3E7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,wBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMse,SACX9Y,KAAKxF,MAAMwe,SACXhZ,KAAKxF,MAAM0e,SACXlZ,KAAKxF,MAAM4e,SACXpZ,KAAKxF,MAAM8e,SACXtZ,KAAKxF,MAAMgf,SAEXxZ,KAAKxF,MAAMif,SACXzZ,KAAKxF,MAAMue,SACX/Y,KAAKxF,MAAMye,SACXjZ,KAAKxF,MAAM2e,SACXnZ,KAAKxF,MAAM6e,SACXrZ,KAAKxF,MAAM+e,UAEfpS,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAhD9B,MAsDJphB,EAAAC,EAAAC,cAAA,WAOAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,wBAAyBxB,QAAS,OAC9EhL,EAAAC,EAAAC,cAAA,UAAKmF,KAAKxF,MAAM0J,aAAhB,gCACAvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,oBAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,cAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkf,YAAc1Z,KAAKxF,MAAMggB,eACpCxa,KAAKxF,MAAMggB,gBAEfrT,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAMggB,eAAiBxa,KAAKxF,MAAMkf,YAAe,KAAvE,gBAIJ/e,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,gCAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,qBAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMggB,eAAiBxa,KAAKxF,MAAM8gB,YACvCtb,KAAKxF,MAAM8gB,aAEfnU,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAM8gB,YAActb,KAAKxF,MAAMggB,eAAkB,KAAvE,kBAIJ7f,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,gCAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,qBAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkf,YAAc1Z,KAAKxF,MAAM8gB,YACpCtb,KAAKxF,MAAM8gB,aAEfnU,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAM8gB,YAActb,KAAKxF,MAAMkf,YAAe,KAApE,kBAQd,MAER,aA9hGSne,cCqLhB2qB,cAnLX,SAAAA,EAAYtmB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkmB,IACfrmB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAomB,GAAA/lB,KAAAH,KAAMJ,KAOVlF,kBAAoB,aARDmF,EAWnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAdGpC,EAmBnBod,iBAAmB,SAAApb,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,yCAA2CnB,EAAKD,MAAMsF,QAElE,IAAIqX,EAAW,CACXC,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMsF,OACvBwX,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,GAGf5b,QAAQC,IAAIub,GAIZpgB,EAAI+gB,WAAWrd,EAAKrF,MAAM2iB,OAAQ,CAC9BX,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMsF,OACvBwX,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,IACZhc,KAAK,SAAAC,GACJC,IAAU2E,KAAK,eACf3F,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MA3CZ9B,EAoDnB1B,aAAe,SAAA7C,GAEXyF,QAAQC,IAAI,wBAA0B1F,GAEtCa,EAAIgC,aAAa7C,EAAI,CACjBqhB,WAAW,IACZhc,KAAK,SAAAC,GACJC,IAAU2E,KAAK,eACf3F,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MA9DZ9B,EAiEnBzB,eAAiB,SAAA9C,GACbyF,QAAQC,IAAI,2BAA6B1F,GACzCa,EAAIiC,eAAe9C,EAAI,CACnBqhB,WAAW,IACZhc,KAAK,SAAAC,GACJC,IAAU2E,KAAK,iBACf3F,EAAKD,MAAM6F,aAEbrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAzEZ9B,EA4EnBxB,WAAa,SAAA/C,GACTyF,QAAQC,IAAI,iBAAmB1F,GAC/Ba,EAAIkC,WAAW/C,GACVqF,KAAK,SAAAC,GACFC,IAAUQ,MAAM,gBAChBxB,EAAKD,MAAM6F,aAEdrE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAjF9B9B,EAAKrF,MAAQ,CACT4iB,WAAY,GACZC,aAAc,IAJHxd,wEAwFV,IAAAiK,EAAA9J,KACL,OACIrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAGQ,GAAG,wBAAwBsH,MAAO,CAAEgD,MAAO,QAASC,OAAQ7F,KAAKJ,MAAMiG,OAAQC,SAAU,SAEvGnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAGQ,GAAG,uBAAuBsH,MAAO,CAAE+C,QAAS,GAAIhC,MAAO,GAAI4Z,aAAc,SAOvF5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAEVkF,KAAKJ,MAAMwF,MAERpF,KAAKJ,MAAMwF,MAAMrB,IAAI,SAAA0Z,GAAI,OAErB9iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBkJ,IAAKyZ,EAAKxX,IACrCrD,MAAO,CAAE+C,QAAS,kBAAmBC,MAAO,QAASG,aAAc,MAAOjD,OAAQ,KAElFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,oBAC3ChL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACIpP,EAAAC,EAAAC,cAAA,OAAKoH,MAAO6H,EAAKlK,MAAMtE,GAAIkH,QAAS,kBAAMsH,EAAKzL,WAAWof,EAAKxX,MAAMrD,MAAO,CAAEY,MAAO,QAASqC,OAAQ,MAAOlC,MAAO,OAAQiC,MAAO,OAAS9K,UAAU,IAAtJ,KACC2iB,EAAKd,UACFhiB,EAAAC,EAAAC,cAAA,OAAKoH,MAAO6H,EAAKlK,MAAMtE,GAAIkH,QAAS,kBAAMsH,EAAK1L,eAAeqf,EAAKxX,MAAMrD,MAAO,CAAEY,MAAO,QAASqC,OAAQ,MAAOlC,MAAO,OAAQgC,QAAS,KAAO7K,UAAU,IAA1J,UACEH,EAAAC,EAAAC,cAAA,OAAKoH,MAAO6H,EAAKlK,MAAMtE,GAAIkH,QAAS,kBAAMsH,EAAK3L,aAAasf,EAAKxX,MAAMrD,MAAO,CAAEY,MAAO,QAASqC,OAAQ,MAAOlC,MAAO,OAAQgC,QAAS,KAAO7K,UAAU,IAAGH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAIlLH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,SAAtB,OAAqC4Z,EAAKb,iBAG9CjiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,oBAAqB7C,OAAQ,oBACtEnI,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAUiG,EAAKlK,MAAMiE,SAAU6Z,WAAY,SAAvD,IAAmED,EAAKjB,SAAxE,MAGJ7hB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,SAAtB,WACYlJ,EAAAC,EAAAC,cAAC8iB,EAAA/iB,EAAD,CAAQwN,OAAO,eAAeqV,EAAKG,YAC3CjjB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8iB,EAAA/iB,EAAD,CAAQyK,KAAMoY,EAAKG,WAAYC,iBAAe,IAHlD,YAUVljB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,aAAcnC,UAAW,WAA5C,2BAxIClI,aC2HhB4qB,uBAxHX,SAAAA,EAAYvmB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmmB,IACftmB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqmB,GAAAhmB,KAAAH,KAAMJ,KAUVgC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAdGpC,EAmBnByc,iBAAmB,SAAAza,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,yCAA2CnB,EAAKD,MAAMsF,QAElE,IAAIqX,EAAW,CACXC,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMwC,SAAS6D,IAChCyW,WAAY7c,EAAKrF,MAAMkiB,WACvBC,WAAW,GAGf5b,QAAQC,IAAIub,GAIZpgB,EAAI6B,eAAe6B,EAAKD,MAAMwC,SAAS6D,IAAK,CACxCuW,SAAU3c,EAAKrF,MAAMgiB,SACrBC,WAAY5c,EAAKD,MAAMwC,SAAS6D,IAChCyW,WAAY7c,EAAKrF,MAAMkiB,WACvBE,eAAgB/c,EAAKD,MAAMwC,SAAS8D,UAAY,IAAMrG,EAAKD,MAAMwC,SAAS+D,SAC1EwW,WAAW,IACZhc,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,iBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MA1CZ9B,EAkDnBgd,aAAe,YACqB,IAA5Bhd,EAAKrF,MAAMqiB,aACXhd,EAAKqC,SAAS,CACV2a,cAAc,IAGlBhd,EAAKqC,SAAS,CACV2a,cAAc,KAvDtBhd,EAAKrF,MAAQ,CACTgiB,SAAU,GACVC,WAAY,GACZC,WAAY,GACZG,cAAc,GANHhd,wEAgEf,OAGQlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,QAASjC,MAAO,SAC3DhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MACI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,KADpF,cAGAnI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAASC,UAAU,8BAA8B0H,QAASxC,KAAK6c,cAA/D,WAKb7c,KAAKxF,MAAMqiB,aAERliB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,OAAQG,SAAU,SAE3DnL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,QAASD,QAAS,SAClC3F,KAAKJ,MAAMwC,SAASke,SAAW3lB,EAAAC,EAAAC,cAAA,UAAQS,GAAG,GAAG2G,MAAOjC,KAAKxF,MAAMkiB,WAAYra,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC/GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACCjC,KAAKJ,MAAMwC,SAASke,SAASvc,IAAI,SAAAzC,GAAO,OACrC3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAEvE,KACZxL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACkiB,EAAA,EAAD,CAEA9a,MAAOjC,KAAKxF,MAAMgiB,SAClBna,SAAUrC,KAAK4B,kBACf5G,KAAK,OACLgH,KAAK,WACLlH,UAAU,eAEVwH,mBAAiB,GACjBC,YAAY,oBAGZ5H,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKsc,iBAAkB1Z,MAAO,CAAEY,MAAO,SAAW1I,UAAU,wBAA7E,kBAMV,aA/GMS,cC2NjB6qB,sNAzNX5rB,MAAQ,CACJujB,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZC,eAAgB,EAChBC,eAAgB,EAChBC,qBAAsB,EACtBC,YAAa,GACbC,UAAU,KAed9c,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzB6Z,iBAAmB,SAAA9c,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,kCAAoCnB,EAAKD,MAAMsF,QAE3DnE,QAAQC,IAAInB,EAAKrF,OAEjB,IAAIokB,EAAW,CACXC,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrBE,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrB7c,QAASzB,EAAKrF,MAAM6jB,WACpB9c,OAAQ1B,EAAKD,MAAMwC,SAAS6D,IAC5B6Y,QAASjf,EAAKrF,MAAMikB,YACpBM,WAAYC,SAASnf,EAAKrF,MAAM8jB,gBAChCY,iBAAkBF,SAASnf,EAAKrF,MAAM+jB,gBAAkB,IACxDU,kBAAmBD,SAASnf,EAAKrF,MAAMgkB,sBAAwB,IAC/Dnb,WAAYxD,EAAKrF,MAAMyjB,WACvB/Z,aAAcrE,EAAKrF,MAAM4jB,eAG7Brd,QAAQC,IAAI4d,GAGZziB,EAAIc,eAAe,CACf4hB,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrBE,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrB7c,QAASzB,EAAKrF,MAAM6jB,WACpB9c,OAAQ1B,EAAKD,MAAMwC,SAAS6D,IAC5B6Y,QAASjf,EAAKrF,MAAMikB,YACpBM,WAAYC,SAASnf,EAAKrF,MAAM8jB,gBAChCY,iBAAkBF,SAASnf,EAAKrF,MAAM+jB,gBAAkB,IACxDU,kBAAmBD,SAASnf,EAAKrF,MAAMgkB,sBAAwB,MAChE7d,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,iBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAS/Bwd,aAAe,YACiB,IAAxBtf,EAAKrF,MAAMkkB,SACX7e,EAAKqC,SAAS,CACVwc,UAAU,IAGd7e,EAAKqC,SAAS,CACVwc,UAAU,0HAUlB,OAGQ/jB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOC,MAAO,QAAS9C,OAAQ,KAA1E,cACAnI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKmf,cAAvD,UAKPnf,KAAKxF,MAAMkkB,SACR/jB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,OAAQE,OAAQ,QAASC,SAAU,SAC5EnL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,yBAA0BvB,MAAO,QAASD,QAAS,OAAQI,aAAc,SACpGpL,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BmH,MAAOjC,KAAKxF,MAAMujB,SAAU1b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,sBACjJ5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,0BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,yBAEJtH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMwjB,SAAU3b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,kCAE1J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,eAAeR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMikB,YAAapc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAAchH,KAAK,OAAOuH,YAAY,yBAE9J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM2jB,SAAU9b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCAEtJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BACCmF,KAAKJ,MAAM0gB,SAAW3lB,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM6jB,WAAYhc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACjIrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,kBACCjC,KAAKJ,MAAM0gB,SAASvc,IAAI,SAAAzC,GAAO,OAC5B3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAEvE,KAEZxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM8jB,eAAgBjc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAE7HrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+jB,eAAgBlc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAE7HrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,mBAAmBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgkB,qBAAsBnc,SAAUrC,KAAK4B,kBAAmBI,KAAK,yBAErIrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BAECmF,KAAKJ,MAAMwC,SAAS0B,QAAUnJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMyjB,WAAY5b,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACzIrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,2BACCjC,KAAKJ,MAAMwC,SAAS0B,QAAQC,IAAI,SAAAX,GAAM,OACnCzI,EAAAC,EAAAC,cAAA,UAAQoH,MAAOmB,GAASA,MAEpBzI,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,KAAnB,iCAEZjL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BACCmF,KAAKJ,MAAMwC,SAAS+B,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,mBAAmBmH,MAAOjC,KAAKxF,MAAM4jB,cAAe/b,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBAClKrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,6BACCjC,KAAKJ,MAAMwC,SAAS+B,cAAcJ,IAAI,SAAAhC,GAAM,OACzCpH,EAAAC,EAAAC,cAAA,UAAQoH,MAAOF,GAASA,MAEpBpH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,KAAnB,mCAEZjL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM0jB,UAAW7b,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,yBACxJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAK2e,kBAA/E,kBAIV,aAjNOpjB,cCqOlB8qB,8MAnOX7rB,MAAQ,CACJsK,iBAAiB,EACjBiZ,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZC,eAAgB,EAChBC,eAAgB,EAChBC,qBAAsB,EACtBC,YAAa,MAuBjB7c,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzBwa,iBAAmB,SAAAzd,GACfA,EAAMvB,iBAEN,IAAIif,EAAY,CACZV,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrB3a,WAAYxD,EAAKrF,MAAMyjB,WACvBC,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrBja,aAAcrE,EAAKrF,MAAM4jB,cACzBW,WAAYlf,EAAKrF,MAAM8jB,eACvBY,iBAAkBrf,EAAKrF,MAAM+jB,eAC7BU,kBAAmBpf,EAAKrF,MAAMgkB,qBAC9BM,QAASjf,EAAKrF,MAAMikB,YACpBnd,QAASzB,EAAKD,MAAMye,WACpB9c,OAAQ1B,EAAKrF,MAAM6kB,YAGvBte,QAAQC,IAAIue,GAEZ1f,EAAKqC,SAAS,CACV4C,iBAAiB,IAGrB3I,EAAIqB,WAAWqC,EAAKD,MAAMtE,GAAI,CAC1BujB,WAAYhf,EAAKrF,MAAMujB,SACvBC,SAAUne,EAAKrF,MAAMwjB,SACrB3a,WAAYxD,EAAKrF,MAAMyjB,WACvBC,UAAWre,EAAKrF,MAAM0jB,UACtBC,SAAUte,EAAKrF,MAAM2jB,SACrBja,aAAcrE,EAAKrF,MAAM4jB,cACzBW,WAAYlf,EAAKrF,MAAM8jB,eACvBY,iBAAkBrf,EAAKrF,MAAM+jB,eAC7BU,kBAAmBpf,EAAKrF,MAAMgkB,qBAC9BM,QAASjf,EAAKrF,MAAMikB,YACpBnd,QAASzB,EAAKD,MAAMye,WACpB9c,OAAQ1B,EAAKrF,MAAM6kB,aACpB1e,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,mBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,QAI/BiI,cAAgB,WACZ/J,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBnH,WAAa,WACTxB,EAAIwB,WAAWkC,EAAKD,MAAMtE,IACrBqF,KAAK,SAAAC,GAAG,OAAIC,IAAUQ,MAAM,2BAC5BD,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,KAE9B2B,WAAW,WACPzC,IAAU2e,QAAQ,0BAEnB,yFAxGHxf,KAAKkC,SAAS,CACV6b,SAAU/d,KAAKJ,MAAMme,SACrBC,SAAUhe,KAAKJ,MAAMoe,SACrBC,WAAYje,KAAKJ,MAAMqe,WACvBC,UAAWle,KAAKJ,MAAMse,UACtBC,SAAUne,KAAKJ,MAAMue,SACrBC,cAAepe,KAAKJ,MAAMwe,cAC1BE,eAAgBte,KAAKJ,MAAM0e,eAC3BC,eAAgBve,KAAKJ,MAAM2e,eAC3BC,qBAAsBxe,KAAKJ,MAAM4e,qBACjCC,YAAaze,KAAKJ,MAAM6e,YACxBY,WAAYrf,KAAKJ,MAAM0B,QACvB+c,WAAYre,KAAKJ,MAAMye,8CAgG3B,OACI1jB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAGXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAY9I,EAAAC,EAAAC,cAAA,SAAImF,KAAKJ,MAAMoe,SAAf,OAKxCrjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,SAEzChL,EAAAC,EAAAC,cAAA,YACCmF,KAAKJ,MAAMse,UAAYvjB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,KAAnB,UAAiC5F,KAAKJ,MAAMse,WAAiB,KACrFvjB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQL,MAAO,UAArC,QACyB,QAAxBxD,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,kCAAkC,KACtC,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,uCAAuC,KAC/C,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,0CAA0C,KAClD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,+CAA+C,KACvD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,wCAAwC,KAChD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,6CAA6C,KACrD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,yCAAyC,KACjD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,8CAA8C,KACtD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,kCAAkC,KAC1C,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,wCAAwC,KAChD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,yCAAyC,KACjD,QAAxBmF,KAAKJ,MAAMme,SAAqBpjB,EAAAC,EAAAC,cAAA,8CAA8C,MAEnFF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,WAAoExD,KAAKJ,MAAMqe,YAC/EtjB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,iBAA0ExD,KAAKJ,MAAM0e,gBACrF3jB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,uBAA4G,IAA5BxD,KAAKJ,MAAM2e,eAA3F,cAA4Hve,KAAKJ,MAAM2e,eAAiBve,KAAKJ,MAAM0e,gBACnK3jB,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEiB,SAAU,OAAQF,MAAO,IAAKH,MAAO,SAAjD,4BAAuH,IAAlCxD,KAAKJ,MAAM4e,qBAAhG,cAAuIxe,KAAKJ,MAAM4e,qBAAuBxe,KAAKJ,MAAM0e,iBAGxL3jB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEqH,MAAO,OAAQxG,UAAW,WACpC9I,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKJ,MAAMtE,GAAIkH,QAASxC,KAAK4J,cAAe9O,UAAU,sBAAsB8H,MAAO,CAAEe,MAAO,QAA3G,QACAhJ,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKJ,MAAMtE,GAAIkH,QAASxC,KAAKrC,WAAY7C,UAAU,wBAAwB8H,MAAO,CAAEe,MAAO,QAA1G,OAKRhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,GAAG,gBAC3BX,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,CAAOqO,OAAQjJ,KAAKxF,MAAMsK,gBAAiBoE,YAAalJ,KAAK+E,mBAAoBoE,eAAgBnJ,KAAKgF,eAAgBpC,MAAO5C,KAAK4G,aAAcwC,aAAa,uBAEzJzO,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BmH,MAAOjC,KAAKxF,MAAMujB,SAAU1b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,sBACjJ5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,0BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,wBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,yBAGJtH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMwjB,SAAU3b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,kCAE1J5H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,eAAeR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMikB,YAAapc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAAchH,KAAK,OAAOuH,YAAY,yBAE9J5H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM2jB,SAAU9b,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCAEtJ5H,EAAAC,EAAAC,cAAA,+BACCmF,KAAKJ,MAAM0gB,SAAW3lB,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKJ,MAAMye,WAAYhc,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACpHrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACCjC,KAAKJ,MAAM0gB,SAASvc,IAAI,SAAAzC,GAAO,OAC5B3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAEvE,KAEZxL,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM8jB,eAAgBjc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAE7HrH,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+jB,eAAgBlc,SAAUrC,KAAK4B,kBAAmBI,KAAK,mBAE7HrH,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,mBAAmBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgkB,qBAAsBnc,SAAUrC,KAAK4B,kBAAmBI,KAAK,yBAIrIrH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM0jB,UAAW7b,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,yBACxJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAKsf,kBAA/E,0BAzNE/jB,aCsMf+qB,sNApMX9rB,MAAQ,CACJ6J,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZE,UAAU,KAiBdhD,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,OAQzBG,iBAAmB,SAAApD,GACfA,EAAMvB,iBACNS,QAAQC,IAAI,yCAA2CnB,EAAKrF,MAAMkK,YAclE,IAAI6hB,EAAY1mB,EAAKrF,MAAMkK,WAG3BvI,EAAIW,gBAAgBypB,EAAW,CAC3BliB,SAAUxE,EAAKrF,MAAM6J,SACrBjB,OAAQvD,EAAKrF,MAAM8J,WACnBc,MAAOvF,EAAKrF,MAAM+J,UAClBc,KAAMxF,EAAKrF,MAAMgK,SACjBxJ,KAAM6E,EAAKrF,MAAMQ,KACjBkJ,aAAcrE,EAAKrF,MAAMiK,cACzBlD,OAAQ1B,EAAKD,MAAMsF,OACnB5D,QAASzB,EAAKrF,MAAMkK,aACrB/D,KAAK,SAAAC,GAAG,OACPC,IAAU2E,KAAK,iBACjBpE,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,KAE3B2B,WAAW,aAGR,QAIPoC,aAAe,YACiB,IAAxB7F,EAAKrF,MAAMoK,SACX/E,EAAKqC,SAAS,CACV0C,UAAU,IAGd/E,EAAKqC,SAAS,CACV0C,UAAU,wFAhFlB7D,QAAQC,IAAIhB,KAAKJ,MAAMsF,yCAyFvB,OACIvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASQ,GAAG,WAAWsH,MAAO,CAAEa,UAAW,OAAQkC,QAAS,IAAK4X,aAAc,SAC1F5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOC,MAAO,QAAS9C,OAAQ,KAA1E,qBACAnI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAASC,UAAU,8BAA8B0H,QAASxC,KAAK0F,cAA/D,WAIb1F,KAAKxF,MAAMoK,SAGRjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAE+C,QAAS,OAAQE,OAAQ,QAASC,SAAU,SAC5EnL,EAAAC,EAAAC,cAAA,QAAM+H,MAAO,IACTjI,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,QAASD,QAAS,OAAQI,aAAc,SAEzDpL,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+CAA+CmH,MAAOjC,KAAKxF,MAAMQ,KAAMqH,SAAUrC,KAAK4B,kBAAmBI,KAAK,OAAOhH,KAAK,OAAOuH,YAAY,gCAC3J5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,8BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,sCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,iCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,6BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,8BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,mCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,iCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,+BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,oCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,gCACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,iCAGAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,OAAd,uCAEJtH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,iBAAiBR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM6J,SAAUhC,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,kCAC1J5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAMgK,SAAUnC,SAAUrC,KAAK4B,kBAAmBI,KAAK,WAAWhH,KAAK,OAAOuH,YAAY,oCACtJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACCmF,KAAKJ,MAAMwC,SAASke,SAAW3lB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKJ,MAAM8E,WAAYrC,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACtHrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,kBACCjC,KAAKJ,MAAMwC,SAASke,SAASvc,IAAI,SAAAzC,GAAO,OACrC3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAEvE,KACZxL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,6BAECmF,KAAKJ,MAAMqmB,YAAYniB,QAAUnJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM8J,WAAYjC,SAAUrC,KAAK4B,kBAAmBI,KAAK,cACxHrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,2BACCjC,KAAKJ,MAAMqmB,YAAYniB,QAAQC,IAAI,SAAAX,GAAM,OACtCzI,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKZ,EAAQnB,MAAOmB,GAASA,MAEjCzI,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,KAAnB,iCACZjL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,2BAECmF,KAAKJ,MAAMqmB,YAAY9hB,cAAgBxJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMiK,cAAepC,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBACjIrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,6BACCjC,KAAKJ,MAAMqmB,YAAY9hB,cAAcJ,IAAI,SAAAhC,GAAM,OAC5CpH,EAAAC,EAAAC,cAAA,UAAQoH,MAAOF,GAASA,MAEpBpH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEgD,MAAO,KAAnB,mCACZjL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOS,GAAG,aAAaR,UAAU,eAAemH,MAAOjC,KAAKxF,MAAM+J,UAAWlC,SAAUrC,KAAK4B,kBAAmBI,KAAK,YAAYhH,KAAK,OAAOuH,YAAY,uBACxJ5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,2BAA2B0H,QAASxC,KAAKiF,kBAA/E,yBAIV,cA9La1J,cCikDxBirB,sNA5iDXhsB,MAAQ,CACJ+G,OAAQ,GACR0kB,YAAa,GACbte,SAAU,GACVkY,aAAc,GACd/M,YAAa,GACb6I,aAAc,EACdtQ,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTmB,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZmB,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACT/C,QAAS,EACTC,QAAS,EACTuB,WAAY,EACZC,WAAY,EACZuB,QAAS,EACTC,QAAS,EACT6X,gBAAiB,GACjBjJ,YAAa,GACbkJ,YAAa,GACbC,cAAc,EACdC,kBAAkB,EAClBC,WAAW,EACXC,WAAW,EACXlG,gBAAgB,EAChBoF,mBAAmB,KAUvBe,cAAgB,WACZhmB,QAAQC,IAAInB,EAAKD,MAAMqB,KAAKC,KAC5B,IAAIgE,EAASrF,EAAKD,MAAMqB,KAAKC,IAC7B/E,EAAIwC,UAAUuG,GACTvE,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACVX,OAAQX,EAAIhE,KAAK,MAErB0G,WAAW,WACPzD,EAAKmnB,iBACLnnB,EAAKonB,oBACLpnB,EAAKqnB,oBACLrnB,EAAKsnB,qBACN,MACN/lB,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,QAKxBslB,kBAAoB,WAChBlmB,QAAQC,IAAInB,EAAKrF,MAAM+G,OAAO0E,KAE9B9J,EAAI8B,eAAe4B,EAAKrF,MAAM+G,OAAO0E,KAChCtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACVkD,MAAOxE,EAAIhE,SAGlBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,QAIxBulB,kBAAoB,WAChBnmB,QAAQC,IAAInB,EAAKrF,MAAM+G,OAAO0E,KAG9B9J,EAAIiB,eAAeyC,EAAKrF,MAAM+G,OAAO0E,KAChCtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACVqd,UAAW3e,EAAIhE,SAGtBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,QAIxBwlB,kBAAoB,WAChBpmB,QAAQC,IAAInB,EAAKrF,MAAM+G,OAAO0E,KAC9B9J,EAAIkB,eAAewC,EAAKrF,MAAM+G,OAAO0E,KAChCtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACVklB,gBAAiBxmB,EAAIhE,SAG5BwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,QAIxBC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAIhB+kB,eAAiB,WACbjmB,QAAQC,IAAInB,EAAKrF,MAAM+G,OAAO+e,SAAS9e,QACvC,IAAI8e,EAAWzgB,EAAKrF,MAAM+G,OAAO+e,SAC7B+G,EAAqB/G,EAAS9e,OAAS,EAE3CT,QAAQC,IAAI,gBAAkBsf,EAAS+G,GAAoBphB,KAC3D9J,EAAIoC,gBAAgB+hB,EAAS+G,GAAoBphB,KAC5CtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,GACZf,EAAKqC,SAAS,CACV+jB,YAAarlB,EAAIhE,KAAK,GACtB+K,SAAU/G,EAAIhE,KAAK,GAAGykB,MACtBoF,gBAAiB7lB,EAAIhE,KAAK,GAAGqJ,IAC7B4Z,aAAcjf,EAAIhE,KAAK,GAAGijB,gBAG5BhgB,EAAKyhB,iBAEPhe,WAAW,WACPzD,EAAK4hB,aACL5hB,EAAK+hB,qBACN,SAIf0F,mBAAqB,WAGjBvmB,QAAQC,IAAI,gBAAkBnB,EAAKrF,MAAMisB,gBAAgBxgB,KACzD9J,EAAIoC,gBAAgBsB,EAAKrF,MAAMisB,gBAAgBxgB,KAC1CtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,GACZf,EAAKqC,SAAS,CACV+jB,YAAarlB,EAAIhE,KAAK,GACtB+K,SAAU/G,EAAIhE,KAAK,GAAGykB,MACtBoF,gBAAiB7lB,EAAIhE,KAAK,GAAGqJ,IAC7B4Z,aAAcjf,EAAIhE,KAAK,GAAGijB,gBAG5BhgB,EAAKyhB,iBAEPhe,WAAW,WACPzD,EAAK4hB,aACL5hB,EAAK+hB,qBACN,SAKfN,eAAiB,WACbhe,WAAW,WACPvC,QAAQC,IAAI,iCAAmCnB,EAAKrF,MAAMyrB,YAAYhgB,KACtE9J,EAAIgD,YAAYU,EAAKrF,MAAMyrB,YAAYhgB,KAClCtF,KAAK,SAAAC,GAAG,OAELf,EAAKqC,SAAS,CACV4Q,YAAalS,EAAIhE,QAErB0G,WAAW,WAAQzD,EAAK8hB,iBAAmB,OAEpD,QAkBPC,kBAAoB,WAChB7gB,QAAQC,IAAI,yBAA2BnB,EAAKrF,MAAMqlB,cAalD,IAZA,IAAIlJ,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACD7N,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMqlB,aAAare,OAAQiI,IAEhD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAMqlB,aAAapW,IAC5B5J,EAAKrF,MAAMqlB,aAAapW,GAAGzO,MAC/B,IAAK,MACD2b,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZzX,EAAKqC,SAAS,CACVmM,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,OAIjBmK,WAAa,WACT1gB,QAAQC,IAAI,kBAAoBnB,EAAKrF,MAAMmN,UAa3C,IAZA,IAAI4L,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDzK,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDuY,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZrU,EAAKqC,SAAS,CACVmJ,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,OAIjByN,cAAgB,WACZ5gB,QAAQC,IAAI,qBAAuBnB,EAAKrF,MAAMsY,aAa9C,IAZA,IAAImC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDnM,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMsY,YAAYtR,OAAQiI,IAC/C,OAAQ5J,EAAKrF,MAAMsY,YAAYrJ,GAAGzO,MAC9B,IAAK,MACDia,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZ/V,EAAKqC,SAAS,CACV2K,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,OAIpB2R,oBAAsB,SAAC1lB,GACnBA,EAAMvB,iBACNS,QAAQC,IAAInB,EAAKrF,MAAMisB,iBACvBtqB,EAAIoC,gBAAgBsB,EAAKrF,MAAMisB,iBAC1B9lB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,GACZf,EAAKqC,SAAS,CACV+jB,YAAarlB,EAAIhE,KAAK,GACtB+K,SAAU/G,EAAIhE,KAAK,GAAGykB,MACtBoF,gBAAiB7lB,EAAIhE,KAAK,GAAGqJ,IAC7B4Z,aAAcjf,EAAIhE,KAAK,GAAGijB,gBAG5BhgB,EAAKyhB,iBAEPhe,WAAW,WAAQzD,EAAK4hB,cAAgB,SAKpDkF,aAAe,YACqB,IAA5B9mB,EAAKrF,MAAMmsB,aACX9mB,EAAKqC,SAAS,CACVykB,cAAc,IAGlB9mB,EAAKqC,SAAS,CACVykB,cAAc,EACdC,kBAAkB,EAClBC,WAAW,EACXC,WAAW,OAMvBF,iBAAmB,YACqB,IAAhC/mB,EAAKrF,MAAMosB,iBACX/mB,EAAKqC,SAAS,CACV0kB,kBAAkB,IAGtB/mB,EAAKqC,SAAS,CACVykB,cAAc,EACdC,kBAAkB,EAClBC,WAAW,EACXC,WAAW,OAMvBD,UAAY,YACqB,IAAzBhnB,EAAKrF,MAAMqsB,UACXhnB,EAAKqC,SAAS,CACV2kB,WAAW,IAGfhnB,EAAKqC,SAAS,CACVykB,cAAc,EACdC,kBAAkB,EAClBC,WAAW,EACXC,WAAW,OAKvBA,UAAY,YACqB,IAAzBjnB,EAAKrF,MAAMssB,UACXjnB,EAAKqC,SAAS,CACV4kB,WAAW,IAGfjnB,EAAKqC,SAAS,CACVykB,cAAc,EACdC,kBAAkB,EAClBC,WAAW,EACXC,WAAW,OAKvB/E,eAAiB,WAERliB,EAAKrF,MAAMunB,eAKZliB,EAAKqC,SAAS,CACV6f,gBAAgB,IALpBliB,EAAKqC,SAAS,CACV6f,gBAAgB,OAS5BnB,eAAiB,WACR/gB,EAAKrF,MAAMomB,eAKZ/gB,EAAKqC,SAAS,CACV0e,gBAAgB,IALpB/gB,EAAKqC,SAAS,CACV0e,gBAAgB,OAS5BoF,kBAAoB,WACXnmB,EAAKrF,MAAMwrB,kBAKZnmB,EAAKqC,SAAS,CACV8jB,mBAAmB,IALvBnmB,EAAKqC,SAAS,CACV8jB,mBAAmB,OAS/B5B,gBAAkB,WACTvkB,EAAKrF,MAAM4pB,gBAKZvkB,EAAKqC,SAAS,CACVkiB,iBAAiB,IALrBvkB,EAAKqC,SAAS,CACVkiB,iBAAiB,OAS7BE,kBAAoB,SAACjkB,GACjBA,EAAEC,iBACFS,QAAQC,IAAInB,EAAKrF,MAAM+pB,eACU,YAA7B1kB,EAAKrF,MAAM+pB,cACX1kB,EAAKynB,qBAC+B,eAA7BznB,EAAKrF,MAAM+pB,eAClB1kB,EAAKtD,iBACLsD,EAAKrD,kBAC+B,gBAA7BqD,EAAKrF,MAAM+pB,gBAClB1kB,EAAKpD,kBACLoD,EAAKnD,sBAIbH,eAAiB,WACbJ,EAAII,eAAesD,EAAKrF,MAAMyrB,YAAYhgB,KACrCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVyF,SAAU/G,EAAIhE,SAGrBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAKyK,mBACLzK,EAAK0K,uBACN,QAGP9N,gBAAkB,WACdN,EAAIM,gBAAgBoD,EAAKrF,MAAMyrB,YAAYhgB,KACtCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVyF,SAAU/G,EAAIhE,SAGrBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAK4kB,oBACL5kB,EAAK6kB,wBACN,QAGPhoB,gBAAkB,WACdP,EAAIO,gBAAgBmD,EAAKrF,MAAMyrB,YAAYhgB,KACtCtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACV8Q,SAAUpS,EAAIhE,SAGrBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAK+kB,qBACN,QAIPpoB,eAAiB,WACbL,EAAIK,eAAeqD,EAAKrF,MAAMyrB,YAAYhgB,KACrCtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACV8Q,SAAUpS,EAAIhE,SAGrBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGpB2B,WAAW,WACPzD,EAAKuhB,2BACN,QAGP9W,iBAAmB,WAcf,IAZA,IAAIG,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,OAIjBqZ,kBAAoB,WAchB,IAZA,IAAIha,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,OAOjBb,oBAAsB,WAclB,IAZA,IAAI0B,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,IAAuC,IAAnC5J,EAAKrF,MAAMmN,SAAS8B,GAAG5B,QACvB,OAAQhI,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,OAIpB8X,qBAAuB,WAcnB,IAZA,IAAIzY,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,IAAuC,IAAnC5J,EAAKrF,MAAMmN,SAAS8B,GAAG5B,QACvB,OAAQhI,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,OAIpBwU,wBAA0B,WActB,IAZA,IAAI3T,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMwY,SAASxR,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMwY,SAASvJ,GAAGzO,MAC3B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,OAIjBwW,kBAAoB,WAchB,IAZA,IAAInX,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMwY,SAASxR,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMwY,SAASvJ,GAAGzO,MAC3B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,wFApgCG,IAAAtE,EAAA9J,KAChBe,QAAQC,IAAI,sBACZsC,WAAW,WACPwG,EAAKid,iBACN,uCAugCE,IAAAS,EAAAxnB,KACL,OACIrF,EAAAC,EAAAC,cAAA,WAOIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,UACjBjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDAAgD8H,MAAO,CAAE+C,QAAS,SAC7EhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe8H,MAAO,CAACgD,MAAO,UAAY5F,KAAKxF,MAAM+G,OAAO2E,UAA3E,IAAuFlG,KAAKxF,MAAM+G,OAAO4E,SAAzG,cACAxL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClLV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BQ,GAAG,0BACzCX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKugB,WAAxC,SAKJ5lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK2mB,cAAxC,cAEJhsB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK6mB,WAAxC,UAEJlsB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK4mB,kBAAxC,iBAEJjsB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK8mB,WAAxC,cAMpBnsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAEiD,OAAQ,QAASsB,gBAAiB,oBAClExM,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,WAA6D5F,KAAKxF,MAAM+G,OAAO2E,UAA/E,KACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,+BAOAjL,EAAAC,EAAAC,cAAA,YACKmF,KAAKxF,MAAM+G,OAER5G,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAItH,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAMisB,gBAAiBpkB,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,kBAAkBlH,UAAU,mBAAmByH,YAAY,uBACpLvC,KAAKxF,MAAM+G,OAAO+e,SAASvc,IAAI,SAAAzC,GAAO,OACnC3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,YAFnF,KAIAxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAIJ,QAASxC,KAAKunB,oBAAqBzsB,UAAU,gCAAhE,WAEJH,EAAAC,EAAAC,cAAA,YAEK,OAGrBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,4BAEAjL,EAAAC,EAAAC,cAAA,YAGIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAItH,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAM+pB,cAAeliB,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,gBAAgBlH,UAAU,mBAAmByH,YAAY,uBACjL5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,YACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,eACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,iBAEJtH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAIJ,QAASxC,KAAKskB,kBAAmBxpB,UAAU,gCAA9D,SAEAH,EAAAC,EAAAC,cAAA,kBAqB5BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEI,UAAW,OAAQua,aAAc,MAI3D5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YASVkF,KAAKxF,MAAMmsB,aACRhsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAA+B8H,MAAO,CAAEiD,OAAQ,SAAUC,SAAU,OAASyX,aAAc,UACtG5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC4sB,EAAD,CACIxB,YAAajmB,KAAKxF,MAAMyrB,YACxBnT,YAAa9S,KAAKxF,MAAMsY,YACxBnL,SAAU3H,KAAKxF,MAAMmN,SACrBqL,SAAUhT,KAAKxF,MAAMqlB,aACrBxR,QAASrO,KAAKxF,MAAM6T,QACpBC,QAAStO,KAAKxF,MAAM8T,QACpBC,QAASvO,KAAKxF,MAAM+T,QACpBC,QAASxO,KAAKxF,MAAMgU,QACpBC,QAASzO,KAAKxF,MAAMiU,QACpBC,QAAS1O,KAAKxF,MAAMkU,QACpBrD,QAASrL,KAAKxF,MAAM6Q,QACpBC,QAAStL,KAAKxF,MAAM8Q,QACpBC,QAASvL,KAAKxF,MAAM+Q,QACpBC,QAASxL,KAAKxF,MAAMgR,QACpBC,QAASzL,KAAKxF,MAAMiR,QACpBC,QAAS1L,KAAKxF,MAAMkR,QACpBmB,WAAY7M,KAAKxF,MAAMqS,WACvBC,WAAY9M,KAAKxF,MAAMsS,WACvBC,WAAY/M,KAAKxF,MAAMuS,WACvBC,WAAYhN,KAAKxF,MAAMwS,WACvBC,WAAYjN,KAAKxF,MAAMyS,WACvBC,WAAYlN,KAAKxF,MAAM0S,WACvBvB,QAAS3L,KAAKxF,MAAMmR,QACpBC,QAAS5L,KAAKxF,MAAMoR,QACpBuB,WAAYnN,KAAKxF,MAAM2S,WACvBC,WAAYpN,KAAKxF,MAAM4S,WACvBuB,QAAS3O,KAAKxF,MAAMmU,QACpBC,QAAS5O,KAAKxF,MAAMoU,QACpB/C,QAAS7L,KAAKxF,MAAMqR,QACpBC,QAAS9L,KAAKxF,MAAMsR,QACpBuB,WAAYrN,KAAKxF,MAAM6S,WACvBC,WAAYtN,KAAKxF,MAAM8S,WACvBuB,QAAS7O,KAAKxF,MAAMqU,QACpBC,QAAS9O,KAAKxF,MAAMsU,QACpB/C,QAAS/L,KAAKxF,MAAMuR,QACpBC,QAAShM,KAAKxF,MAAMwR,QACpBuB,WAAYvN,KAAKxF,MAAM+S,WACvBC,WAAYxN,KAAKxF,MAAMgT,WACvBuB,QAAS/O,KAAKxF,MAAMuU,QACpBC,QAAShP,KAAKxF,MAAMwU,aAKlC,KAQLhP,KAAKxF,MAAMosB,iBACRjsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAE0iB,OAAQ,EAAG3f,QAAS,SAE/ChL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,sBACA9I,EAAAC,EAAAC,cAAC0qB,EAAD,CACI1F,aAAc7f,KAAKxF,MAAMqlB,iBAKrCllB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAC6sB,GAAD,CACIxiB,OAAQlF,KAAKxF,MAAM+G,OAAO0E,IAC1BvD,SAAU1C,KAAKxF,MAAM+G,OAAO2E,UAAYlG,KAAKxF,MAAM+G,OAAO4E,SAC1DV,SAAUzF,KAAKmnB,kBACf/kB,SAAUpC,KAAKxF,MAAM+G,OACrB+e,SAAUtgB,KAAKxF,MAAM+G,OAAO+e,SAC5B2F,YAAajmB,KAAKxF,MAAMyrB,eAGhCtrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE2a,aAAc,OAAQva,UAAW,OAAQS,UAAW,OAAQkC,QAAS,GAAIE,OAAQ,GAAIC,SAAU,OAAQqB,gBAAiB,yBAE5JxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOC,MAAO,QAAS9C,OAAQ,SAA1E,8BAEH9C,KAAKxF,MAAM4sB,gBAGRzsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBAAqBE,OAAQ,KAC9ElL,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,QAASC,SAAU,SACpC9F,KAAKxF,MAAM4sB,gBAAgBrjB,IAAI,SAAAyhB,GAAI,OAChC7qB,EAAAC,EAAAC,cAAC4qB,EAAD,CACIzhB,IAAKwhB,EAAKvf,IACV3K,GAAIkqB,EAAKvf,IACT5B,SAAUmhB,EAAKnhB,SACf9C,OAAQikB,EAAKjkB,OACbvG,KAAMwqB,EAAKxqB,KACX0qB,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXrgB,OAAQkgB,EAAKlkB,QACb+D,KAAMmgB,EAAKngB,KACXjC,OAAQoiB,EAAKpiB,OAEbgC,MAAOogB,EAAKpgB,MACZ1C,SAAU8kB,EAAKhtB,MAAM+G,OAAO2E,UAAYshB,EAAKhtB,MAAM+G,OAAO4E,SAC1DV,SAAU+hB,EAAKL,kBACflmB,KAAMumB,EAAKhtB,MAAM+G,OACjB2C,aAAcshB,EAAKthB,aACnB8B,QAASwhB,EAAKhtB,MAAM+G,OAAO+e,SAC3BA,SAAUkH,EAAKhtB,MAAM+G,OAAO+e,aApBxC,MAyBF,QAIhB,KAQLtgB,KAAKxF,MAAMqsB,UACRlsB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,yBACJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC8sB,GAAD,CACIvlB,SAAUpC,KAAKxF,MAAM+G,UAG7B5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAOJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEI,UAAW,SAG/CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,SAAUyhB,WAAY,QAA7C,eAGJvqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBAAqB4X,aAAc,SACpF5iB,EAAAC,EAAAC,cAAC+sB,EAAD,CACI/jB,SAAU,OACVuB,MAAOpF,KAAKxF,MAAM4K,MAClBK,SAAUzF,KAAKinB,kBACfphB,OAAQ,eAS9B,KAYL7F,KAAKxF,MAAMssB,UACRnsB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACIpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAE2a,aAAc,SACxC5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACgtB,GAAD,CACI3iB,OAAQlF,KAAKxF,MAAM+G,OAAO0E,IAC1B7D,SAAUpC,KAAKxF,MAAM+G,OACrB+e,SAAUtgB,KAAKxF,MAAM+G,OAAO+e,aAMxC3lB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOwB,gBAAiB,GAAIvB,MAAO,UAA9E,aAAmGjL,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKokB,iBAAvD,WAGlHpkB,KAAKxF,MAAM4pB,gBACRzpB,EAAAC,EAAAC,cAAA,WACKmF,KAAKxF,MAAM+kB,UACR5kB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,sBACjDhL,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,QAASC,SAAU,SAEjC9F,KAAKxF,MAAM+kB,UAAUxb,IAAI,SAAA6hB,GAAI,OACzBjrB,EAAAC,EAAAC,cAACitB,GAAD,CACI9jB,IAAK4hB,EAAK3f,IACV3K,GAAIsqB,EAAK3f,IACT8X,SAAU6H,EAAK/G,WACfb,SAAU4H,EAAK5H,SACfC,WAAY2H,EAAKviB,WACjB6a,UAAW0H,EAAK1H,UAChBC,SAAUyH,EAAKzH,SACfC,cAAewH,EAAK1hB,aACpBoa,eAAgBsH,EAAK7G,WACrBR,eAAgBqH,EAAK1G,iBACrBV,qBAAsBoH,EAAK3G,kBAC3BR,YAAamH,EAAK9G,QAClBT,WAAYuH,EAAKtkB,QACjB+d,WAAYuG,EAAKrkB,OACjB+e,SAAUkH,EAAKhtB,MAAM+G,OAAO+e,SAC5Ble,SAAUolB,EAAKhtB,MAAM+G,WAnBrC,KADJ,KAwBE,MAER,SAKpB,MAaV5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKS,GAAG,IACJX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAC6sB,GAAD,CACIxiB,OAAQlF,KAAKxF,MAAM+G,OAAO0E,IAC1BvD,SAAU1C,KAAKxF,MAAM+G,OAAO2E,UAAYlG,KAAKxF,MAAM+G,OAAO4E,SAC1DV,SAAUzF,KAAKmnB,kBACf/kB,SAAUpC,KAAKxF,MAAM+G,OACrB+e,SAAUtgB,KAAKxF,MAAM+G,OAAO+e,SAC5B2F,YAAajmB,KAAKxF,MAAMyrB,cAI5BtrB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,OAAQ4Z,aAAc,SAGvC5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,QAApF,yBACJnI,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAASC,UAAU,8BAA8B0H,QAASxC,KAAK+hB,gBAA/D,WAOL/hB,KAAKxF,MAAMunB,eACRpnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBAE7C3F,KAAKxF,MAAM4sB,gBACPzsB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEiD,OAAQ,QAASC,SAAU,SAEjC9F,KAAKxF,MAAM4sB,gBAAgBrjB,IAAI,SAAAyhB,GAAI,OAC/B7qB,EAAAC,EAAAC,cAAC4qB,EAAD,CACIzhB,IAAKwhB,EAAKvf,IACV3K,GAAIkqB,EAAKvf,IACT5B,SAAUmhB,EAAKnhB,SACf9C,OAAQikB,EAAKjkB,OACbvG,KAAMwqB,EAAKxqB,KACX0qB,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXrgB,OAAQkgB,EAAKlkB,QACb+D,KAAMmgB,EAAKngB,KACXjC,OAAQoiB,EAAKpiB,OAEbgC,MAAOogB,EAAKpgB,MACZ1C,SAAU8kB,EAAKhtB,MAAM+G,OAAO2E,UAAYshB,EAAKhtB,MAAM+G,OAAO4E,SAC1DV,SAAU+hB,EAAKL,kBACflmB,KAAMumB,EAAKhtB,MAAM+G,OACjB2C,aAAcshB,EAAKthB,aACnB8B,QAASwhB,EAAKhtB,MAAM+G,OAAO+e,SAC3BA,SAAUkH,EAAKhtB,MAAM+G,OAAO+e,cAM1C,MAEZ,QAUlB3lB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE2a,aAAc,OAAQ5Z,MAAO,OAAQ2hB,OAAQ,IACjF3qB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,gBAAiBC,MAAO,QAAS9C,OAAQ,QAApF,cAGQnI,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAA8B0H,QAASxC,KAAK4gB,gBAA5D,UAIP5gB,KAAKxF,MAAMomB,eACRjmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,oBACjDhL,EAAAC,EAAAC,cAAC+sB,EAAD,CACI/jB,SAAU,OACVuB,MAAOpF,KAAKxF,MAAM4K,MAClBK,SAAUzF,KAAKinB,kBACfphB,OAAQ,WAId,OASdlL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAG8H,MAAO,CAAE0iB,OAAQ,EAAG/H,aAAc,OAAQ9Z,UAAW,SAAUkC,QAAS,EAAGE,OAAQ,GAAIC,SAAU,OAAQnC,MAAO,SAC9HhJ,EAAAC,EAAAC,cAAC8sB,GAAD,CACIvlB,SAAUpC,KAAKxF,MAAM+G,uBA5hDxChG,uBCiGVwsB,eArHX,SAAAA,EAAYnoB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+nB,IACfloB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAioB,GAAA5nB,KAAAH,KAAMJ,KAaVQ,MAAQ,SAAAC,GACJA,EAAEC,iBACF9E,EAAK+E,OAAOC,2BAA2BX,EAAKrF,MAAMiG,MAAOZ,EAAKrF,MAAMkG,UAAUC,KAAK,WAC/EE,IAAUC,QAAQ,uBAEnBM,MAAM,SAACC,GACNN,QAAQC,IAAIK,MApBDxB,EAwBnBmoB,OAAS,SAAA3nB,GACLA,EAAEC,iBACF9E,EAAK+E,OAAO0nB,+BAA+BpoB,EAAKrF,MAAMiG,MAAOZ,EAAKrF,MAAMkG,UACnEC,KAAK,SAAA/D,GACFmE,QAAQC,IAAIpE,EAAKqE,KAAKR,OACtBM,QAAQC,IAAIpE,EAAKqE,KAAKC,KACtB/E,EAAIyB,WAAW,CACX6C,MAAO7D,EAAKqE,KAAKR,MACjBS,IAAKtE,EAAKqE,KAAKC,IACfgF,UAAWrG,EAAKrF,MAAM0L,UACtBC,SAAUtG,EAAKrF,MAAM2L,SACrB5E,OAAQ1B,EAAKrF,MAAM+G,OACnB2mB,QAASroB,EAAKrF,MAAM0tB,YAEzB9mB,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAtCjB9B,EAyCnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KA5CGpC,EAgDnBsoB,kBAAoB,SAAAtmB,GAChBd,QAAQC,IAAIa,EAAME,OAAOC,MACzBjB,QAAQC,IAAIa,EAAME,OAAOE,OACzBpC,EAAKqC,SAAS,CACVoe,SAAU,CAACze,EAAME,OAAOE,UApDbpC,EAwDnBuoB,oBAAsB,SAAAvmB,GAClBd,QAAQC,IAAIa,EAAME,OAAOC,MACzBjB,QAAQC,IAAIa,EAAME,OAAOE,OACzBpC,EAAKqC,SAAS,CACVoe,SAAQ,GAAApE,OAAApc,OAAAuoB,GAAA,EAAAvoB,CAAMD,EAAKrF,MAAM8lB,UAAjB,CAA2Bze,EAAME,OAAOE,WA1DpDpC,EAAKrF,MAAQ,CACTiG,MAAO,GACPC,SAAU,GACV4nB,YAAa,GACb/mB,OAAQ,GACR+e,SAAU,GACVpa,UAAW,GACXC,SAAU,GACV+hB,QAAS,IAVEroB,wEAmEf,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAIXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,yBAA0BvB,MAAO,QAASD,QAAS,OAAQI,aAAc,QACpGpL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAACa,UAAW,WAAvB,uBACA9I,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,yBAA0BvB,MAAO,QAASD,QAAS,OAAQI,aAAc,SACpGpL,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM0L,UAAW7D,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,YAAYlH,UAAU,eAAeyH,YAAY,eACxI5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM2L,SAAU9D,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,WAAWlH,UAAU,eAAeyH,YAAY,cACtI5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAMiG,MAAO4B,SAAUrC,KAAK4B,kBAAmB5G,KAAK,QAAQgH,KAAK,QAAQlH,UAAU,eAAeQ,GAAG,qBAAqBgH,mBAAiB,YAAYC,YAAY,gBACtL5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAMkG,SAAU2B,SAAUrC,KAAK4B,kBAAmB5G,KAAK,WAAWgH,KAAK,WAAWlH,UAAU,eAAeQ,GAAG,wBAAwBiH,YAAY,aAErK5H,EAAAC,EAAAC,cAAA,WAKAF,EAAAC,EAAAC,cAAA,gCAECmF,KAAKJ,MAAMoG,QAAUrL,EAAAC,EAAAC,cAAA,UAAQS,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAM+G,OAAQc,SAAUrC,KAAK4B,kBAAmBI,KAAK,UAC/GhC,KAAKJ,MAAMoG,QAAQjC,IAAI,SAAAxC,GAAM,OAC1B5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAEnE,KACZxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM0tB,QAAS7lB,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,UAAUlH,UAAU,eAAeyH,YAAY,YAEpI5H,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKgoB,OAAQltB,UAAU,gBAAxC,0BAzGIS,aCiHjBgtB,eAhHX,SAAAA,EAAY3oB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuoB,IACf1oB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyoB,GAAApoB,KAAAH,KAAMJ,KAaVQ,MAAQ,SAAAC,GACJA,EAAEC,iBACF9E,EAAK+E,OAAOC,2BAA2BX,EAAKrF,MAAMiG,MAAOZ,EAAKrF,MAAMkG,UAAUC,KAAK,WAC/EE,IAAUC,QAAQ,uBAEnBM,MAAM,SAACC,GACNN,QAAQC,IAAIK,MApBDxB,EAwBnBmoB,OAAS,SAAA3nB,GACLA,EAAEC,iBACF9E,EAAK+E,OAAO0nB,+BAA+BpoB,EAAKrF,MAAMiG,MAAOZ,EAAKrF,MAAMkG,UACnEC,KAAK,SAAA/D,GACFmE,QAAQC,IAAIpE,EAAKqE,KAAKR,OACtBM,QAAQC,IAAIpE,EAAKqE,KAAKC,KACtB/E,EAAI2B,aAAa,CACb2C,MAAO7D,EAAKqE,KAAKR,MACjBS,IAAKtE,EAAKqE,KAAKC,IACfgF,UAAWrG,EAAKrF,MAAM0L,UACtBC,SAAUtG,EAAKrF,MAAM2L,SACrBma,SAAUzgB,EAAKrF,MAAM8lB,SACrB4H,QAASroB,EAAKrF,MAAM0tB,YAEzB9mB,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAtCjB9B,EAyCnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KA5CGpC,EAgDnBsoB,kBAAoB,SAAAtmB,GAChBd,QAAQC,IAAIa,EAAME,OAAOC,MACzBjB,QAAQC,IAAIa,EAAME,OAAOE,OACzBpC,EAAKqC,SAAS,CACVoe,SAAU,CAACze,EAAME,OAAOE,UApDbpC,EAwDnBuoB,oBAAsB,SAAAvmB,GAClBd,QAAQC,IAAIa,EAAME,OAAOC,MACzBjB,QAAQC,IAAIa,EAAME,OAAOE,OACzBpC,EAAKqC,SAAS,CACVoe,SAAQ,GAAApE,OAAApc,OAAAuoB,GAAA,EAAAvoB,CAAMD,EAAKrF,MAAM8lB,UAAjB,CAA2Bze,EAAME,OAAOE,WA1DpDpC,EAAKrF,MAAQ,CACTiG,MAAO,GACPC,SAAU,GACV4nB,YAAa,GACb/mB,OAAQ,GACR+e,SAAU,GACVpa,UAAW,GACXC,SAAU,GACV+hB,QAAS,IAVEroB,wEAmEf,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,yBAA0BvB,MAAO,QAASD,QAAS,OAAQI,aAAc,QACpGpL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEuE,gBAAiB,yBAA0BvB,MAAO,QAASD,QAAS,OAAQI,aAAc,SACpGpL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,sBACA9I,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM0L,UAAW7D,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,YAAYlH,UAAU,eAAeyH,YAAY,eACxI5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAM2L,SAAU9D,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,WAAWlH,UAAU,eAAeyH,YAAY,cAEtI5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAMiG,MAAO4B,SAAUrC,KAAK4B,kBAAmB5G,KAAK,QAAQgH,KAAK,QAAQlH,UAAU,eAAeQ,GAAG,qBAAqBgH,mBAAiB,YAAYC,YAAY,gBACtL5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOoH,MAAOjC,KAAKxF,MAAMkG,SAAU2B,SAAUrC,KAAK4B,kBAAmB5G,KAAK,WAAWgH,KAAK,WAAWlH,UAAU,eAAeQ,GAAG,wBAAwBiH,YAAY,aAErK5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,iCAECmF,KAAKJ,MAAM0gB,SAAW3lB,EAAAC,EAAAC,cAAA,UAAQS,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAM8G,QAASe,SAAUrC,KAAKmoB,kBAAmBnmB,KAAK,WACjHhC,KAAKJ,MAAM0gB,SAASvc,IAAI,SAAAzC,GAAO,OAC5B3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAEvE,KACZxL,EAAAC,EAAAC,cAAA,WAIAF,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKgoB,OAAQltB,UAAU,gBAAxC,4BApGGS,aC+IhBitB,sNA1IXhuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAG8H,MAAO,CAAEa,UAAW,WAClC9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAamF,KAAKJ,MAAM6oB,kBAAkBviB,UAA1C,IAAsDlG,KAAKJ,MAAM6oB,kBAAkBtiB,SAAnF,MACJxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACImF,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,WAM5CrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC7G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACdyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAChCtL,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAChCxL,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAChC1L,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAChC5L,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAChC9L,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,eAShDrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACjH9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACdyS,OAAQ,CACJ,oBACA,oBACA,kBACA,kBACA,0BACA,0BACA,mBACA,mBACA,oBACA,oBACA,yBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMmM,QACX/L,KAAKJ,MAAMoM,SAEf7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,mBAhIhBxgB,cC2InBmtB,8MAzIXluB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,KACjBjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC3G9I,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,KAApB,mBACI5F,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,cAM/C7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC3G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CAChByS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WACnC9M,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WACnChN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WACnClN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WACnCpN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WACnCtN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,kBASnD7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAChH9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACfyS,OAAQ,CACJ,oBACA,oBACA,kBACA,kBACA,0BACA,0BACA,mBACA,mBACA,oBACA,oBACA,yBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM2N,WACXvN,KAAKJ,MAAM4N,YAEfrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,mBA/HbxgB,aCqItBotB,8MAnIXnuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OAEInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,UACzGjL,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,QAASnC,UAAW,WAAxC,uBACIzD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChCtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QANpC,OAWRrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxG9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACnByS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChCtO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChCxO,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChC1O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChC5O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChC9O,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,eAIhDrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC5G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACnByS,OAAQ,CACJ,oBACA,oBACA,kBACA,kBACA,0BACA,0BACA,mBACA,mBACA,oBACA,oBACA,yBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMmP,QACX/O,KAAKJ,MAAMoP,SAEf7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,kBA1HTxgB,aC8G1BqtB,8MA5GXpuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCAIRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMmM,eAK3BpR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QACXrL,KAAKJ,MAAM2L,QACXvL,KAAKJ,MAAM6L,QACXzL,KAAKJ,MAAM+L,QACX3L,KAAKJ,MAAMiM,QACX7L,KAAKJ,MAAMmM,SAEf5E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAjC9B,cAnEgBxgB,aC2GrBstB,8MAzGXruB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,eAC1DjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACvG9I,EAAAC,EAAAC,cAAA,6BAGrBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACvG9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACpByS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM2N,kBAK3B5S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC5G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACnByS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WACX7M,KAAKJ,MAAMmN,WACX/M,KAAKJ,MAAMqN,WACXjN,KAAKJ,MAAMuN,WACXnN,KAAKJ,MAAMyN,WACXrN,KAAKJ,MAAM2N,YAEfpG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,kBAhGXxgB,aC4GxButB,8MA1GXtuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OAEInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,GAAImC,MAAO,KACpDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACzG9I,EAAAC,EAAAC,cAAA,iCAInBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACzG9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CAClByS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMmP,eAK3BpU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC5G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACnByS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyO,QACXrO,KAAKJ,MAAM2O,QACXvO,KAAKJ,MAAM6O,QACXzO,KAAKJ,MAAM+O,QACX3O,KAAKJ,MAAMiP,QACX7O,KAAKJ,MAAMmP,SAEf5H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,kBAjGHxgB,aCwG5BwtB,8MAtGXvuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACzG9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAC1BH,EAAAC,EAAAC,cAAA,wCAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACvG9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACpByS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,QACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMoM,eAI3BrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC5G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACnByS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM4L,QACXxL,KAAKJ,MAAM8L,QACX1L,KAAKJ,MAAMgM,QACX5L,KAAKJ,MAAMkM,QACX9L,KAAKJ,MAAMoM,SAEf7E,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAGToI,QAAS,CACRC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,kBA7FVxgB,aC2GrBytB,8MAzGXxuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxG9I,EAAAC,EAAAC,cAAA,2CAGpBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACzG9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CAClByS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,WACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM4N,kBAK3B7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SAC5G9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACnByS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMkN,WACX9M,KAAKJ,MAAMoN,WACXhN,KAAKJ,MAAMsN,WACXlN,KAAKJ,MAAMwN,WACXpN,KAAKJ,MAAM0N,WACXtN,KAAKJ,MAAM4N,YAEfrG,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,kBA/FXxgB,aC0GxB0tB,8MAxGXzuB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,aAAcnC,UAAW,WAAY9I,EAAAC,EAAAC,cAAA,+CAIjEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CAAC,YAAa,oBAAqB,iBAAkB,WAAY,YAAa,iBACtFC,SAAU,CAAC,CACPsM,MAAO,eACPzU,gBAAiB,oBACjB0U,YAAa,oBACbjf,KAAM,CACFoD,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMoP,cAb3B,KAgBArU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACxH9I,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,kBACA,0BACA,mBACA,oBACA,0BACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM0O,QACXtO,KAAKJ,MAAM4O,QACXxO,KAAKJ,MAAM8O,QACX1O,KAAKJ,MAAMgP,QACX5O,KAAKJ,MAAMkP,QACX9O,KAAKJ,MAAMoP,SAEf7H,gBAAiB,CACb,UACA,UACA,UACA,UACA,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,kBA9FPxgB,aCuI5B2tB,8MArIX1uB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAEtCjL,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAC3D3Q,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,aAAe9M,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAAW,KAA7H,KACA3Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,kCACA,qBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAAUtL,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WAC7E9M,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YAEvC3F,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,sCAA8BmF,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YACjEnS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,UAAYtO,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,YAAc,KAA7I,KACAnS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,yCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiN,WAAa7M,KAAKJ,MAAMkN,WAAa9M,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAChFtO,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,SAEpCnH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAC3D3Q,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,UAAYtO,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,SAAW,KAApI,KACA3Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyL,QAAUrL,KAAKJ,MAAM0L,QAAUtL,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,QAC1EtO,KAAKJ,MAAMyO,QAAUrO,KAAKJ,MAAM0O,SAEpCnH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,gBAzHDlU,aCuI7B4tB,8MArIX3uB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAEtCjL,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SACzD7Q,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SAAW,KAA7H,KACA7Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,gCACA,mBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAAUxL,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WAC7EhN,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAEvC7F,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,oCAA4BmF,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAC/DrS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,UAAYxO,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,YAAc,KAA7I,KACArS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,uBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmN,WAAa/M,KAAKJ,MAAMoN,WAAahN,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAChFxO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,SAEpCrH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SACzD7Q,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,UAAYxO,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,SAAW,KAApI,KACA7Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,mCACA,uBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2L,QAAUvL,KAAKJ,MAAM4L,QAAUxL,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,QAC1ExO,KAAKJ,MAAM2O,QAAUvO,KAAKJ,MAAM4O,SAEpCrH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,gBAzHHlU,aCuI3B6tB,8MArIX5uB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAEtCjL,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,yCAAiCmF,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SACjE/Q,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,aAAelN,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SAAW,KAA7H,KACA/Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uCACA,2BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAAU1L,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WAC7ElN,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YAEvC/F,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,4CAAoCmF,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YACvEvS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,UAAY1O,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,YAAc,KAA7I,KACAvS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,8CACA,+BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMqN,WAAajN,KAAKJ,MAAMsN,WAAalN,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAChF1O,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,SAEpCvH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,yCAAiCmF,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SACjE/Q,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,UAAY1O,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,SAAW,KAApI,KACA/Q,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,2CACA,+BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM6L,QAAUzL,KAAKJ,MAAM8L,QAAU1L,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,QAC1E1O,KAAKJ,MAAM6O,QAAUzO,KAAKJ,MAAM8O,SAEpCvH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,gBAzHFlU,aCuI5B8tB,8MArIX7uB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAEtCjL,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,kCAA0BmF,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAC1DjR,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,aAAepN,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAAW,KAA7H,KACAjR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,gCACA,oBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAAU5L,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WAC7EpN,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAEvCjG,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,qCAA6BmF,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAChEzS,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,UAAY5O,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,YAAc,KAA7I,KACAzS,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,uCACA,wBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMuN,WAAanN,KAAKJ,MAAMwN,WAAapN,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAChF5O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,SAEpCzH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,kCAA0BmF,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAC1DjR,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,UAAY5O,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,SAAW,KAApI,KACAjR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oCACA,wBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM+L,QAAU3L,KAAKJ,MAAMgM,QAAU5L,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,QAC1E5O,KAAKJ,MAAM+O,QAAU3O,KAAKJ,MAAMgP,SAEpCzH,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,gBAzHFlU,aCuI5B+tB,8MArIX9uB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAEtCjL,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAC3DnR,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,aAAetN,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAAW,KAA7H,KACAnR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,iCACA,qBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAAU9L,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WAC7EtN,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YAEvCnG,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,sCAA8BmF,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YACjE3S,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,UAAY9O,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,YAAc,KAA7I,KACA3S,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,wCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMyN,WAAarN,KAAKJ,MAAM0N,WAAatN,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAChF9O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,SAEpC3H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAMzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mCAA2BmF,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAC3DnR,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,UAAY9O,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,SAAW,KAApI,KACAnR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,qCACA,yBAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMiM,QAAU7L,KAAKJ,MAAMkM,QAAU9L,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,QAC1E9O,KAAKJ,MAAMiP,QAAU7O,KAAKJ,MAAMkP,SAEpC3H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,gBAzHDlU,aCiI7BguB,8MA/HX/uB,MAAQ,KAQRoH,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAOhB4C,cAAgB,WACZhF,EAAKqC,SAAS,CACV4C,iBAAiB,OAIzBC,mBAAqB,eAIrBC,eAAiB,WACbnF,EAAKqC,SAAS,CACV4C,iBAAiB,0HAKrB,OACInK,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAEtCjL,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,wCAAgCmF,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAChErR,EAAAC,EAAAC,cAAA,4BAAoBmhB,KAAKC,OAAOjc,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,aAAexN,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAAW,KAA7H,KACArR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,sCACA,0BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,QAAUhM,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,WAC7ExN,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAEvCrG,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAKzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,2CAAmCmF,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YACtE7S,EAAAC,EAAAC,cAAA,4CAAoCmhB,KAAKC,OAAOjc,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,UAAYhP,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,YAAc,KAA7I,KACA7S,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,6CACA,8BAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAM2N,WAAavN,KAAKJ,MAAM4N,WAAaxN,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QAChFhP,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,OAKzB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,wCAAgCmF,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAChErR,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKC,OAAOjc,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,UAAYhP,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,SAAW,KAApI,KACArR,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,yCACA,wCAEJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKJ,MAAMmM,QAAU/L,KAAKJ,MAAMoM,QAAUhM,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,QAC1EhP,KAAKJ,MAAMmP,QAAU/O,KAAKJ,MAAMoP,SAEpC7H,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,gBAvHHlU,aC42J3BiuB,eAv1JX,SAAAA,EAAY5pB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwpB,IACf3pB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0pB,GAAArpB,KAAAH,KAAMJ,KA6CVlF,kBAAoB,WAChBqG,QAAQC,IAAI,iBAAmBkH,IAAO,IAAIC,MAAQC,UAClDrH,QAAQC,IAAI,iBAAmBkH,MAASO,SAAS,EAAG,KAAKL,OAAO,gBAhDjDvI,EAmDnBhC,cAAgB,WACZkD,QAAQC,IAAInB,EAAKrF,MAAMivB,yBACvB1oB,QAAQC,IAAInB,EAAKrF,MAAMkvB,wBACvB3oB,QAAQC,IAAInB,EAAKrF,MAAMmvB,yBACvB5oB,QAAQC,IAAInB,EAAKrF,MAAMovB,wBACvB7oB,QAAQC,IAAInB,EAAKrF,MAAMqvB,8BACvB9oB,QAAQC,IAAInB,EAAKrF,MAAMiuB,kBAAkBxiB,MAzD1BpG,EA+DnBiqB,oBAAsB,WAElBjqB,EAAKqC,SAAS,CACVunB,wBAAyB5pB,EAAKrF,MAAMiuB,kBAAkBviB,UACtDwjB,uBAAwB7pB,EAAKrF,MAAMiuB,kBAAkBtiB,SACrD0jB,6BAA8BhqB,EAAKrF,MAAMiuB,kBAAkBsB,SAC3DJ,wBAAyB9pB,EAAKrF,MAAMiuB,kBAAkBuB,UACtDJ,uBAAwB/pB,EAAKrF,MAAMiuB,kBAAkBwB,SACrDC,2BACIrqB,EAAKrF,MAAMiuB,kBAAkB0B,gBAxEtBtqB,EA6EnBuqB,oBAAsB,WAElBrpB,QAAQC,IAAI,mBAAqBnB,EAAKrF,MAAMivB,yBAC5C1oB,QAAQC,IAAI,kBAAoBnB,EAAKrF,MAAMkvB,wBAC3C3oB,QAAQC,IAAI,sBAAwBnB,EAAKrF,MAAMqvB,8BAC/C9oB,QAAQC,IAAI,2BAA6BnB,EAAKrF,MAAMmvB,yBACpD5oB,QAAQC,IAAI,0BAA4BnB,EAAKrF,MAAMovB,wBAInDtmB,WAAW,WAEPnH,EAAI0B,cAAcgC,EAAKrF,MAAMiuB,kBAAkBxiB,IAAK,CAChD+jB,UAAWnqB,EAAKrF,MAAMmvB,wBACtBM,SAAUpqB,EAAKrF,MAAMovB,uBACrBG,SAAUlqB,EAAKrF,MAAMqvB,6BACrB3jB,UAAWrG,EAAKrF,MAAMivB,wBACtBtjB,SAAUtG,EAAKrF,MAAMkvB,yBACtB/oB,KAAK,SAAAC,GACJC,IAAU2E,KAAK,oBACfzE,QAAQC,IAAI,oBACbI,MAAM,SAAAO,GAAG,OAAIZ,QAAQC,IAAIW,MAE7B,MApGY9B,EAwGnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KA3GGpC,EAgHnBwqB,mBAAqB,SAAAxoB,GAAS,IAAAyoB,EACFzoB,EAAME,OAAtBC,EADkBsoB,EAClBtoB,KAAMC,EADYqoB,EACZroB,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,IAEZqB,WAAW,WAAQzD,EAAK0qB,oBAAsB,MArH/B1qB,EAwHnB2qB,mBAAqB,SAAA3oB,GAAS,IAAA4oB,EACF5oB,EAAME,OAAtBC,EADkByoB,EAClBzoB,KAAMC,EADYwoB,EACZxoB,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,IAEZqB,WAAW,WAAQzD,EAAK6qB,oBAAsB,MA7H/B7qB,EAgInB8qB,qBAAuB,YAC2B,IAA1C9qB,EAAKrF,MAAMowB,2BACX/qB,EAAKqC,SAAS,CACV0oB,4BAA4B,EAC5BC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,2BAA2B,IAG/BlrB,EAAKqC,SAAS,CACV0oB,4BAA4B,EAC5BI,4BAA4B,EAC5BvC,kBAAmB,GACnB5I,aAAc,GACd/M,YAAa,GACbnL,SAAU,GACV6G,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTuC,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,IAGjBhL,QAAQC,IAAI,iCAAmCnB,EAAKD,MAAMqrB,iBAtL3CprB,EAyLnBqrB,oBAAsB,WAClBnqB,QAAQC,IAAI,gCAAkCnB,EAAKD,MAAMurB,gBACZ,IAAzCtrB,EAAKrF,MAAMqwB,0BACXhrB,EAAKqC,SAAS,CACV0oB,4BAA4B,EAC5BC,2BAA2B,EAC3BC,2BAA2B,EAC3BE,4BAA4B,IAGhCnrB,EAAKqC,SAAS,CACV2oB,2BAA2B,EAC3BO,mCAAmC,EACnCC,yBAA0B,GAC1BxL,aAAc,GACd/M,YAAa,GACbnL,SAAU,GACV6G,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTuC,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,KA7OFlM,EAkPnByrB,oBAAsB,WAClBvqB,QAAQC,IAAI,gCAAkCnB,EAAKD,MAAMqrB,gBACzDlqB,QAAQC,IAAI,gCAAkCnB,EAAKD,MAAMurB,gBACZ,IAAzCtrB,EAAKrF,MAAMqwB,0BACXhrB,EAAKqC,SAAS,CACV0oB,4BAA4B,EAC5BC,2BAA2B,EAC3BC,2BAA2B,IAG/BjrB,EAAKqC,SAAS,CACV4oB,2BAA2B,KA7PpBjrB,EAsQnB0rB,gBAAkB,YAEgC,IAA1C1rB,EAAKrF,MAAMwwB,2BACXnrB,EAAKqC,SAAS,CACV8oB,4BAA4B,EAC5BvC,kBAAmB,GACnBgB,wBAAyB,GACzBC,uBAAwB,GACxBG,6BAA8B,GAC9B2B,uBAAwB,GACxBC,wBAAyB,GACzB5L,aAAc,GACd/M,YAAa,GACbnL,SAAU,GACV6G,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTuC,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,KAGbhL,QAAQC,IAAInB,EAAKrF,MAAMkxB,eACvBvvB,EAAIoC,gBAAgBsB,EAAKrF,MAAMkxB,eAC1B/qB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVumB,kBAAmB7nB,EAAIhE,KAAK,GAC5BouB,4BAA4B,EAC5BrjB,SAAU/G,EAAIhE,KAAK,GAAGykB,MACtBoF,gBAAiB7lB,EAAIhE,KAAK,GAAGqJ,IAC7B4Z,aAAcjf,EAAIhE,KAAK,GAAGijB,gBAG9BhgB,EAAK2hB,cACL3hB,EAAKyhB,iBACLzhB,EAAK6hB,qBACLpe,WAAW,WACPzD,EAAKiqB,uBACN,KAEHxmB,WAAW,WACPzD,EAAK4hB,aACL5hB,EAAK+hB,qBACN,QAhVA/hB,EAsVnBykB,kBAAoB,SAACjkB,GACjBA,EAAEC,iBACFS,QAAQC,IAAInB,EAAKrF,MAAM+pB,eACU,YAA7B1kB,EAAKrF,MAAM+pB,eACX1kB,EAAK4hB,aACL5hB,EAAK8hB,gBACL9hB,EAAK+hB,qBAC+B,eAA7B/hB,EAAKrF,MAAM+pB,eAClB1kB,EAAKtD,iBACLsD,EAAKrD,kBAC+B,gBAA7BqD,EAAKrF,MAAM+pB,gBAClB1kB,EAAKpD,kBACLoD,EAAKnD,oBAlWMmD,EAyWnBtD,eAAiB,WACbJ,EAAII,eAAesD,EAAKrF,MAAMkxB,eACzB/qB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVgf,YAAatgB,EAAIhE,SAGxBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGhB2B,WAAW,WACPzD,EAAKyK,mBACLzK,EAAK0K,uBACN,MAxXQ1K,EA2XnBpD,gBAAkB,WACdN,EAAIM,gBAAgBoD,EAAKrF,MAAMkxB,eAC1B/qB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVsiB,aAAc5jB,EAAIhE,SAGzBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGhB2B,WAAW,WACPzD,EAAK4kB,oBACL5kB,EAAK6kB,wBACN,MA1YQ7kB,EA6YnBnD,gBAAkB,WACdP,EAAIO,gBAAgBmD,EAAKrF,MAAMkxB,eAC1B/qB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVyiB,aAAc/jB,EAAIhE,SAGzBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGhB2B,WAAW,WACPzD,EAAK+kB,qBACN,MA3ZQ/kB,EA+ZnBrD,eAAiB,WACbL,EAAIK,eAAeqD,EAAKrF,MAAMkxB,eACzB/qB,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVif,YAAavgB,EAAIhE,SAGxBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,KAGhB2B,WAAW,WACPzD,EAAKuhB,2BACN,MA5aQvhB,EA+anByK,iBAAmB,WAcf,IAZA,IAAIG,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,OAAQ5J,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,KApfEvL,EAwfnB4kB,kBAAoB,WAchB,IAZA,IAAIha,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3B,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMgqB,aAAahjB,OAAQiI,IAEhD,OAAQ5J,EAAKrF,MAAMgqB,aAAa/a,GAAGzO,MAC/B,IAAK,MACDyP,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvL,EAAKqC,SAAS,CACVmJ,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,KA7jBEvL,EAokBnB0K,oBAAsB,WAclB,IAZA,IAAI0B,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,IAA0C,IAAtC5J,EAAKrF,MAAM0mB,YAAYzX,GAAG5B,QAC9B,OAAQhI,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOZ/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,KA3oBD/M,EA+oBnB6kB,qBAAuB,WAcnB,IAZA,IAAIzY,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACFnD,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMgqB,aAAahjB,OAAQiI,IAEhD,IAA2C,IAAvC5J,EAAKrF,MAAMgqB,aAAa/a,GAAG5B,QAC/B,OAAQhI,EAAKrF,MAAMgqB,aAAa/a,GAAGzO,MAC/B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOZ/M,EAAKqC,SAAS,CACV2K,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,EACZa,WAAYZ,KAttBD/M,EA0tBnBuhB,wBAA0B,WActB,IAZA,IAAI3T,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM2mB,YAAY3f,OAAQiI,IAE/C,OAAQ5J,EAAKrF,MAAM2mB,YAAY1X,GAAGzO,MAC9B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,KA/xBEvO,EAmyBnB+kB,kBAAoB,WAchB,IAZA,IAAInX,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACF3E,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmqB,aAAanjB,OAAQiI,IAEhD,OAAQ5J,EAAKrF,MAAMmqB,aAAalb,GAAGzO,MAC/B,IAAK,MACDyS,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZvO,EAAKqC,SAAS,CACVmM,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,EACTa,QAASZ,KAx2BEvO,EA82BnB2hB,YAAc,WACVle,WAAW,WACPnH,EAAIgB,SAAS0C,EAAKrF,MAAMkxB,eACnB/qB,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACV2f,MAAOjhB,EAAIhE,YAn3BZiD,EAy3BnB0hB,mBAAqB,WACjBplB,EAAIoC,gBAAgBsB,EAAKrF,MAAMkxB,eAC1B/qB,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACV2d,aAAcjf,EAAIhE,KAAK,GAAGijB,kBA73BvBhgB,EAk4BnB6hB,mBAAqB,WAGjBvlB,EAAI+B,gBAAgB2B,EAAKrF,MAAMkxB,eAC1B/qB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVkD,MAAOxE,EAAIhE,SAGlBwE,MAAM,SAAAO,GACHZ,QAAQC,IAAIW,MA74BL9B,EAi5BnB8rB,uBAAyB,YACgC,IAAjD9rB,EAAKrF,MAAM4wB,kCACXvrB,EAAKqC,SAAS,CACVkpB,mCAAmC,EACnCQ,wBAAyB,GACzB/L,aAAc,GACd/M,YAAa,GACbnL,SAAU,GACV6G,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTuC,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,KAGbhL,QAAQC,IAAInB,EAAKrF,MAAMqxB,sBACvB1vB,EAAIoC,gBAAgBsB,EAAKrF,MAAMqxB,sBAC1BlrB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACVmpB,yBAA0BzqB,EAAIhE,KAAK,GACnCwuB,mCAAmC,EACnCzjB,SAAU/G,EAAIhE,KAAK,GAAGykB,MACtBoF,gBAAiB7lB,EAAIhE,KAAK,GAAGqJ,IAC7B4Z,aAAcjf,EAAIhE,KAAK,GAAGijB,gBAI9BhgB,EAAKisB,kBACLxoB,WAAW,WACPzD,EAAK4hB,aACL5hB,EAAK+hB,qBACN,QAh9BA/hB,EA09BnByhB,eAAiB,WACbhe,WAAW,WACPvC,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAMiuB,kBAAkBxiB,KACxE9J,EAAIgD,YAAYU,EAAKrF,MAAMiuB,kBAAkBxiB,KACxCtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACV4Q,YAAalS,EAAIhE,QAErB0G,WAAW,WAAQzD,EAAK8hB,iBAAmB,OAEpD,MAp+BY9hB,EAw+BnBisB,gBAAkB,WACdxoB,WAAW,WACPvC,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM6wB,yBAAyBplB,KAC/E9J,EAAIgD,YAAYU,EAAKrF,MAAM6wB,yBAAyBplB,KAC/CtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACV4Q,YAAalS,EAAIhE,QAErB0G,WAAW,WAAQzD,EAAK8hB,iBAAmB,OAEpD,MAl/BY9hB,EAu/BnB4hB,WAAa,WACT1gB,QAAQC,IAAI,kBAAoBnB,EAAKrF,MAAMmN,UAa3C,IAZA,IAAI4L,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDzK,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDuY,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZrU,EAAKqC,SAAS,CACVmJ,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,KA5jCErU,EAgkCnB8hB,cAAgB,WACZ5gB,QAAQC,IAAI,qBAAuBnB,EAAKrF,MAAMsY,aAa9C,IAZA,IAAImC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDnM,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMsY,YAAYtR,OAAQiI,IAC/C,OAAQ5J,EAAKrF,MAAMsY,YAAYrJ,GAAGzO,MAC9B,IAAK,MACDia,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZ/V,EAAKqC,SAAS,CACV2K,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,KApoCD/V,EAyoCnB+hB,kBAAoB,WAChB7gB,QAAQC,IAAI,yBAA2BnB,EAAKrF,MAAMqlB,cAalD,IAZA,IAAIlJ,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACD7N,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMqlB,aAAare,OAAQiI,IAEhD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAMqlB,aAAapW,IAC5B5J,EAAKrF,MAAMqlB,aAAapW,GAAGzO,MAC/B,IAAK,MACD2b,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZzX,EAAKqC,SAAS,CACVmM,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,EACTrI,QAASsI,KA9sCEzX,EAstCnBksB,eAAiB,WACbhrB,QAAQC,IAAInB,EAAKrF,MAAMwxB,eACsB,IAAzCnsB,EAAKrF,MAAMuwB,0BACX5uB,EAAIyC,cAAciB,EAAKrF,MAAMwxB,cACxBrrB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACV+pB,iBAAkBrrB,EAAIhE,KAAK,GAC3BmuB,2BAA2B,KAGhCznB,WAAW,WAAQzD,EAAKqsB,4BAA8B,KACrD5oB,WAAW,WAAQzD,EAAKqnB,qBAAuB,MAIvDrnB,EAAKqC,SAAS,CACV6oB,2BAA2B,EAC3BkB,iBAAkB,GAClBpM,aAAc,GACd/M,YAAa,GACbnL,SAAU,GACV6G,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTuC,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTkD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT4C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACTwD,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACT8C,QAAS,EACTxB,WAAY,EACZxB,QAAS,EACToD,QAAS,EACTxB,WAAY,EACZxB,QAAS,KA/wCFlM,EAoxCnBqsB,yBAA2B,WACvB/vB,EAAIkB,eAAewC,EAAKrF,MAAMyxB,iBAAiBhmB,KAC1CtF,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,EAAIhE,MAChBiD,EAAKqC,SAAS,CACViqB,YAAavrB,EAAIhE,UAzxCdiD,EA8xCnBqnB,kBAAoB,WAChB/qB,EAAIiB,eAAeyC,EAAKrF,MAAMyxB,iBAAiBhmB,KAC1CtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVkqB,YAAaxrB,EAAIhE,UAlyCdiD,EAwyCnBwsB,oBAAsB,YACqB,IAAnCxsB,EAAKrF,MAAM6xB,oBACXxsB,EAAKqC,SAAS,CACVmqB,qBAAqB,IAGzBxsB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KA9zCpBvtB,EAm0CnBysB,oBAAsB,YACqB,IAAnCzsB,EAAKrF,MAAM8xB,oBACXzsB,EAAKqC,SAAS,CACVoqB,qBAAqB,IAGzBzsB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAz1CpBvtB,EA81CnB0sB,wBAA0B,YACqB,IAAvC1sB,EAAKrF,MAAM+xB,wBACX1sB,EAAKqC,SAAS,CACVqqB,yBAAyB,IAG7B1sB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAp3CpBvtB,EAy3CnB2sB,iBAAmB,YACqB,IAAhC3sB,EAAKrF,MAAMgyB,iBACX3sB,EAAKqC,SAAS,CACVsqB,kBAAkB,IAGtB3sB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KA/4CpBvtB,EAo5CnB4sB,iBAAmB,YACqB,IAAhC5sB,EAAKrF,MAAMiyB,iBACX5sB,EAAKqC,SAAS,CACVuqB,kBAAkB,KAGtB5sB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,IAE/B9pB,WAAW,WAAQzD,EAAK6hB,sBAAwB,OA56CrC7hB,EA87CnB6sB,mBAAqB,YACqB,IAAlC7sB,EAAKrF,MAAMkyB,mBACX7sB,EAAKqC,SAAS,CACVwqB,oBAAoB,IAGxB7sB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAp9CpBvtB,EAy9CnB8sB,wBAA0B,YACqB,IAAvC9sB,EAAKrF,MAAMmyB,wBACX9sB,EAAKqC,SAAS,CACVyqB,yBAAyB,IAG7B9sB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KA/+CpBvtB,EAo/CnB+sB,yBAA2B,YACqB,IAAxC/sB,EAAKrF,MAAMoyB,yBACX/sB,EAAKqC,SAAS,CACV0qB,0BAA0B,IAG9B/sB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KA1gDpBvtB,EA+gDnBgtB,2BAA6B,YACqB,IAA1ChtB,EAAKrF,MAAMqyB,2BACXhtB,EAAKqC,SAAS,CACV2qB,4BAA4B,IAGhChtB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAriDpBvtB,EA0iDnBitB,6BAA+B,YACqB,IAA5CjtB,EAAKrF,MAAMsyB,6BACXjtB,EAAKqC,SAAS,CACV4qB,8BAA8B,IAGlCjtB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAhkDpBvtB,EAqkDnBktB,mBAAqB,YACqB,IAAlCltB,EAAKrF,MAAMuyB,mBACXltB,EAAKqC,SAAS,CACV6qB,oBAAoB,IAGxBltB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KA3lDpBvtB,EAgmDnBmtB,uBAAyB,YACqB,IAAtCntB,EAAKrF,MAAMwyB,uBACXntB,EAAKqC,SAAS,CACV8qB,wBAAwB,IAG5BntB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAtnDpBvtB,EA2nDnBotB,gBAAkB,YACqB,IAA/BptB,EAAKrF,MAAMyyB,gBACXptB,EAAKqC,SAAS,CACV+qB,iBAAiB,IAGrBptB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAjpDpBvtB,EAspDnBqtB,uBAAyB,YACqB,IAAtCrtB,EAAKrF,MAAM0yB,uBACXrtB,EAAKqC,SAAS,CACVgrB,wBAAwB,IAG5BrtB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KA5qDpBvtB,EAirDnBstB,wBAA0B,YACqB,IAAvCttB,EAAKrF,MAAM2yB,wBACXttB,EAAKqC,SAAS,CACVirB,yBAAyB,IAG7BttB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAvsDpBvtB,EA4sDnButB,0BAA4B,YACqB,IAAzCvtB,EAAKrF,MAAM4yB,0BACXvtB,EAAKqC,SAAS,CACVkrB,2BAA2B,IAG/BvtB,EAAKqC,SAAS,CACVmqB,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,KAluDpBvtB,EAwuDnB0b,eAAiB,SAAClb,GAEd,OADAA,EAAEC,iBACMT,EAAKrF,MAAMghB,YACf,IAAK,WACD3b,EAAK2Q,gBACL,MACJ,IAAK,cACD3Q,EAAK0R,mBACL,MACJ,IAAK,WACD1R,EAAK2R,gBACL,MACJ,IAAK,UACD3R,EAAK4R,kBACL,MACJ,IAAK,aACD5R,EAAK6R,qBACL,MACJ,IAAK,UACD7R,EAAK8R,kBACL,MACJ,IAAK,UACD9R,EAAK+R,kBACL,MACJ,IAAK,aACD/R,EAAKgS,qBACL,MACJ,IAAK,UACDhS,EAAKiS,kBACL,MACJ,QACI/Q,QAAQC,IAAI,wBAvwDLnB,EA6wDnB4b,mBAAqB,SAACpb,GAGlB,OAFAA,EAAEC,iBAEMT,EAAKrF,MAAMkhB,gBACf,IAAK,QACD7b,EAAKkS,0BACL,MACJ,IAAK,QACDlS,EAAKmS,wBACL,MACJ,IAAK,QACDnS,EAAKqS,yBACL,MACJ,IAAK,QACDrS,EAAKoS,yBACL,MACJ,IAAK,QACDpS,EAAKsS,0BACL,MACJ,IAAK,QACDtS,EAAKuS,wBACL,MACJ,QACIrR,QAAQC,IAAI,8BApyDLnB,EA0yDnB2Q,cAAgB,YACqB,IAA7B3Q,EAAKrF,MAAMyU,cACXpP,EAAKqC,SAAS,CACV+M,eAAe,IAGnBpP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAj0DxBzR,EAs0DnB0R,iBAAmB,YACqB,IAAhC1R,EAAKrF,MAAM0U,iBACXrP,EAAKqC,SAAS,CACVgN,kBAAkB,IAGtBrP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA71DxBzR,EAk2DnB2R,cAAgB,YACqB,IAA7B3R,EAAKrF,MAAM2U,cACXtP,EAAKqC,SAAS,CACViN,eAAe,IAGnBtP,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAz3DxBzR,EA83DnB4R,gBAAkB,YACuB,IAAjC5R,EAAKrF,MAAMiW,kBACX5Q,EAAKqC,SAAS,CACVuO,mBAAmB,IAGvB5Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAr5DxBzR,EA05DnB6R,mBAAqB,YACuB,IAApC7R,EAAKrF,MAAMkW,qBACX7Q,EAAKqC,SAAS,CACVwO,sBAAsB,IAG1B7Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAj7DxBzR,EAs7DnB8R,gBAAkB,YACuB,IAAjC9R,EAAKrF,MAAMmW,kBACX9Q,EAAKqC,SAAS,CACVyO,mBAAmB,IAGvB9Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA78DxBzR,EAk9DnB+R,gBAAkB,YACuB,IAAjC/R,EAAKrF,MAAMoW,kBACX/Q,EAAKqC,SAAS,CACV0O,mBAAmB,IAGvB/Q,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAz+DxBzR,EA8+DnBgS,mBAAqB,YACuB,IAApChS,EAAKrF,MAAMqW,qBACXhR,EAAKqC,SAAS,CACV2O,sBAAsB,IAG1BhR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KArgExBzR,EA0gEnBiS,gBAAkB,YACuB,IAAjCjS,EAAKrF,MAAMsW,kBACXjR,EAAKqC,SAAS,CACV4O,mBAAmB,IAGvBjR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAjiExBzR,EAsiEnBkS,wBAA0B,YACqB,IAAvClS,EAAKrF,MAAMuW,wBACXlR,EAAKqC,SAAS,CACV6O,yBAAyB,IAG7BlR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA7jExBzR,EAkkEnBmS,sBAAwB,YACqB,IAArCnS,EAAKrF,MAAMwW,sBACXnR,EAAKqC,SAAS,CACV8O,uBAAuB,IAG3BnR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAzlExBzR,EA8lEnBoS,uBAAyB,YACqB,IAAtCpS,EAAKrF,MAAMyW,uBACXpR,EAAKqC,SAAS,CACV+O,wBAAwB,IAG5BpR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KArnExBzR,EA0nEnBqS,uBAAyB,YACqB,IAAtCrS,EAAKrF,MAAM0W,uBACXrR,EAAKqC,SAAS,CACVgP,wBAAwB,IAG5BrR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAjpExBzR,EAspEnBsS,wBAA0B,YACqB,IAAvCtS,EAAKrF,MAAM2W,wBACXtR,EAAKqC,SAAS,CACViP,yBAAyB,IAG7BtR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA7qExBzR,EAkrEnBuS,sBAAwB,YACqB,IAArCvS,EAAKrF,MAAM4W,sBACXvR,EAAKqC,SAAS,CACVkP,uBAAuB,IAG3BvR,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAzsExBzR,EA8sEnBwS,sBAAwB,WA4CpBxS,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KA3wEpBzR,EAgxEnByS,8BAAgC,WAM5BzS,EAAKqC,SAAS,CACV+M,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,+BAA+B,KAvyEpBzR,EA4yEnB0qB,iBAAmB,WAEfxpB,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM6I,YAOtD,IALA,IAAImP,EAAmB,CACnBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IACxC5J,EAAKrF,MAAMmN,SAAS8B,GAAGrG,SAAWvD,EAAKrF,MAAM6I,YAC7CmP,EAAiBC,YAAYG,KAAK/S,EAAKrF,MAAMmN,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKrF,MAAMsY,YAAYtR,OAAQqR,IAC3ChT,EAAKrF,MAAMsY,YAAYD,GAAGzP,SAAWvD,EAAKrF,MAAM6I,YAChDmP,EAAiBE,eAAeE,KAAK/S,EAAKrF,MAAMsY,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKrF,MAAMqlB,aAAare,OAAQuR,IAC5ClT,EAAKrF,MAAMqlB,aAAa9M,GAAG3P,SAAWvD,EAAKrF,MAAM6I,YACjDmP,EAAiBG,YAAYC,KAAK/S,EAAKrF,MAAMqlB,aAAa9M,IAIlEzP,WAAW,WAEPzD,EAAKqC,SAAS,CACV+Q,eAAgBT,EAAiBC,YACjCS,kBAAmBV,EAAiBE,eACpCS,eAAgBX,EAAiBG,cAErCrP,WAAW,WACPzD,EAAKuT,mBACLvT,EAAKwT,sBACLxT,EAAKyT,oBAGN,MAEJ,MAt1EYzT,EAy1EnB0S,iBAAmB,SAAC1Q,GAChBA,EAAMvB,iBACNS,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM6I,YAOtD,IALA,IAAImP,EAAmB,CACnBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IACxC5J,EAAKrF,MAAMmN,SAAS8B,GAAGrG,SAAWvD,EAAKrF,MAAM6I,YAC7CmP,EAAiBC,YAAYG,KAAK/S,EAAKrF,MAAMmN,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKrF,MAAMsY,YAAYtR,OAAQqR,IAC3ChT,EAAKrF,MAAMsY,YAAYD,GAAGzP,SAAWvD,EAAKrF,MAAM6I,YAChDmP,EAAiBE,eAAeE,KAAK/S,EAAKrF,MAAMsY,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKrF,MAAMqlB,aAAare,OAAQuR,IAC5ClT,EAAKrF,MAAMqlB,aAAa9M,GAAG3P,SAAWvD,EAAKrF,MAAM6I,YACjDmP,EAAiBG,YAAYC,KAAK/S,EAAKrF,MAAMqlB,aAAa9M,IAIlEzP,WAAW,WAEPzD,EAAKqC,SAAS,CACV+Q,eAAgBT,EAAiBC,YACjCS,kBAAmBV,EAAiBE,eACpCS,eAAgBX,EAAiBG,cAErCrP,WAAW,WACPzD,EAAKuT,mBACLvT,EAAKwT,sBACLxT,EAAKyT,mBAELhQ,WAAW,WAAQzD,EAAKwS,yBAA2B,MACpD,MAEJ,MAn4EYxS,EAu4EnByT,iBAAmB,WACfvS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMyY,gBAcrC,IAbA,IAAIM,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAS,EACJ1K,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMyY,eAAezR,OAAQiI,IAElD,OAAQ5J,EAAKrF,MAAMyY,eAAexJ,GAAGzO,MACjC,IAAK,MACDuY,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDF,IACAE,IACA,MACJ,IAAK,MACDD,IACAC,IACA,MACJ,QACIA,IAIZtU,EAAKqC,SAAS,CACVkS,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,YAAab,KA39EFtU,EAg+EnBwT,oBAAsB,WAClBtS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM0Y,mBAcrC,IAbA,IAAI+B,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAY,EACPpM,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0Y,kBAAkB1R,OAAQiI,IACrD,OAAQ5J,EAAKrF,MAAM0Y,kBAAkBzJ,GAAGzO,MACpC,IAAK,MACDia,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDA,IACAF,IACA,MACJ,IAAK,MACDE,IACAD,IACA,MACJ,QACIC,IAIZhW,EAAKqC,SAAS,CACV4T,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,YAAab,EACbc,eAAgBb,KAnjFLhW,EAujFnBuT,iBAAmB,WACfrS,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM2Y,gBAcrC,IAbA,IAAIwD,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAS,EACJ9N,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM2Y,eAAe3R,OAAQiI,IAElD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAM2Y,eAAe1J,IAC9B5J,EAAKrF,MAAM2Y,eAAe1J,GAAGzO,MACjC,IAAK,MACD2b,IACAY,IACA,MACJ,IAAK,MACDX,IACAW,IACA,MACJ,IAAK,MACDV,IACAU,IACA,MACJ,IAAK,MACDT,IACAS,IACA,MACJ,IAAK,MACDR,IACAQ,IACA,MACJ,IAAK,MACDP,IACAO,IACA,MACJ,IAAK,MACDN,IACAM,IACA,MACJ,IAAK,MACDL,IACAK,IACA,MACJ,IAAK,MACDJ,IACAI,IACA,MACJ,IAAK,MACDH,IACAG,IACA,MACJ,IAAK,MACDF,IACAE,IACA,MACJ,IAAK,MACDD,IACAC,IACA,MACJ,QACIA,IAIZ1X,EAAKqC,SAAS,CACVsV,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,SAAUb,EACVc,YAAab,KA3oFF1X,EA+oFnB6qB,iBAAmB,WAEf3pB,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM0J,cAOtD,IALA,IAAIoU,EAAmB,CACnB7F,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IACxC5J,EAAKrF,MAAMmN,SAAS8B,GAAGvF,eAAiBrE,EAAKrF,MAAM0J,cACnDoU,EAAiB7F,YAAYG,KAAK/S,EAAKrF,MAAMmN,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKrF,MAAMsY,YAAYtR,OAAQqR,IAC3ChT,EAAKrF,MAAMsY,YAAYD,GAAG3O,eAAiBrE,EAAKrF,MAAM0J,cACtDoU,EAAiB5F,eAAeE,KAAK/S,EAAKrF,MAAMsY,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKrF,MAAMqlB,aAAare,OAAQuR,IAC5ClT,EAAKrF,MAAMqlB,aAAa9M,GAAG7O,eAAiBrE,EAAKrF,MAAM0J,cACvDoU,EAAiB3F,YAAYC,KAAK/S,EAAKrF,MAAMqlB,aAAa9M,IAIlEzP,WAAW,WAEPzD,EAAKqC,SAAS,CACVqW,eAAgBD,EAAiB7F,YACjC+F,kBAAmBF,EAAiB5F,eACpC+F,eAAgBH,EAAiB3F,cAErCrP,WAAW,WACPzD,EAAK6Y,mBACL7Y,EAAK8Y,sBACL9Y,EAAK+Y,oBAGN,MAEJ,MAzrFY/Y,EA6rFnBwY,iBAAmB,SAACxW,GAChBA,EAAMvB,iBACNS,QAAQC,IAAI,6BAA+BnB,EAAKrF,MAAM0J,cAOtD,IALA,IAAIoU,EAAmB,CACnB7F,YAAa,GACbC,eAAgB,GAChBC,YAAa,IAERlJ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IACxC5J,EAAKrF,MAAMmN,SAAS8B,GAAGvF,eAAiBrE,EAAKrF,MAAM0J,cACnDoU,EAAiB7F,YAAYG,KAAK/S,EAAKrF,MAAMmN,SAAS8B,IAI9D,IAAK,IAAIoJ,EAAI,EAAGA,EAAIhT,EAAKrF,MAAMsY,YAAYtR,OAAQqR,IAC3ChT,EAAKrF,MAAMsY,YAAYD,GAAG3O,eAAiBrE,EAAKrF,MAAM0J,cACtDoU,EAAiB5F,eAAeE,KAAK/S,EAAKrF,MAAMsY,YAAYD,IAIpE,IAAK,IAAIE,EAAI,EAAGA,EAAIlT,EAAKrF,MAAMqlB,aAAare,OAAQuR,IAC5ClT,EAAKrF,MAAMqlB,aAAa9M,GAAG7O,eAAiBrE,EAAKrF,MAAM0J,cACvDoU,EAAiB3F,YAAYC,KAAK/S,EAAKrF,MAAMqlB,aAAa9M,IAIlEzP,WAAW,WAEPzD,EAAKqC,SAAS,CACVqW,eAAgBD,EAAiB7F,YACjC+F,kBAAmBF,EAAiB5F,eACpC+F,eAAgBH,EAAiB3F,cAErCrP,WAAW,WACPzD,EAAK6Y,mBACL7Y,EAAK8Y,sBACL9Y,EAAK+Y,mBAELtV,WAAW,WAAQzD,EAAKyS,iCAAmC,MAC5D,MAEJ,MAvuFYzS,EA2uFnB+Y,iBAAmB,WACf7X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAM+d,gBAcrC,IAbA,IAAIhF,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN2E,EAAS,EACJpP,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM+d,eAAe/W,OAAQiI,IAElD,OAAQ5J,EAAKrF,MAAM+d,eAAe9O,GAAGzO,MACjC,IAAK,MACDuY,IACAsF,IACA,MACJ,IAAK,MACDrF,IACAqF,IACA,MACJ,IAAK,MACDpF,IACAoF,IACA,MACJ,IAAK,MACDnF,IACAmF,IACA,MACJ,IAAK,MACDlF,IACAkF,IACA,MACJ,IAAK,MACDjF,IACAiF,IACA,MACJ,IAAK,MACDhF,IACAgF,IACA,MACJ,IAAK,MACD/E,IACA+E,IACA,MACJ,IAAK,MACD9E,IACA8E,IACA,MACJ,IAAK,MACD7E,IACA6E,IACA,MACJ,IAAK,MACD5E,IACA4E,IACA,MACJ,IAAK,MACD3E,IACA2E,IACA,MACJ,QACIA,IAIZhZ,EAAKqC,SAAS,CACV4W,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,SAAUvF,EACVwF,YAAab,KA/zFFhZ,EAm0FnB8Y,oBAAsB,WAClB5X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMge,mBAcrC,IAbA,IAAIvD,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN+D,EAAY,EACPlQ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMge,kBAAkBhX,OAAQiI,IACrD,OAAQ5J,EAAKrF,MAAMge,kBAAkB/O,GAAGzO,MACpC,IAAK,MACDia,IACA0E,IACA,MACJ,IAAK,MACDzE,IACAyE,IACA,MACJ,IAAK,MACDxE,IACAwE,IACA,MACJ,IAAK,MACDvE,IACAuE,IACA,MACJ,IAAK,MACDtE,IACAsE,IACA,MACJ,IAAK,MACDrE,IACAqE,IACA,MACJ,IAAK,MACDpE,IACAoE,IACA,MACJ,IAAK,MACDnE,IACAmE,IACA,MACJ,IAAK,MACDlE,IACAkE,IACA,MACJ,IAAK,MACDjE,IACAiE,IACA,MACJ,IAAK,MACDA,IACAhE,IACA,MACJ,IAAK,MACDgE,IACA/D,IACA,MACJ,QACI+D,IAIZ9Z,EAAKqC,SAAS,CACV0X,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,YAAa3E,EACb4E,eAAgBb,KAt5FL9Z,EA25FnB6Y,iBAAmB,WACf3X,QAAQC,IAAI,YAAcnB,EAAKrF,MAAMie,gBAcrC,IAbA,IAAI9B,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNmD,EAAS,EACJhR,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMie,eAAejX,OAAQiI,IAElD,OADA1I,QAAQC,IAAInB,EAAKrF,MAAMie,eAAehP,IAC9B5J,EAAKrF,MAAMie,eAAehP,GAAGzO,MACjC,IAAK,MACD2b,IACA8D,IACA,MACJ,IAAK,MACD7D,IACA6D,IACA,MACJ,IAAK,MACD5D,IACA4D,IACA,MACJ,IAAK,MACD3D,IACA2D,IACA,MACJ,IAAK,MACD1D,IACA0D,IACA,MACJ,IAAK,MACDzD,IACAyD,IACA,MACJ,IAAK,MACDxD,IACAwD,IACA,MACJ,IAAK,MACDvD,IACAuD,IACA,MACJ,IAAK,MACDtD,IACAsD,IACA,MACJ,IAAK,MACDrD,IACAqD,IACA,MACJ,IAAK,MACDpD,IACAoD,IACA,MACJ,IAAK,MACDnD,IACAmD,IACA,MACJ,QACIA,IAIZ5a,EAAKqC,SAAS,CACVwY,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,SAAU/D,EACVgE,YAAab,KA7+FjB5a,EAAKrF,MAAQ,CACTiuB,kBAAmB,GACnBuC,4BAA4B,EAC5BJ,4BAA4B,EAC5BC,2BAA2B,EAC3BC,2BAA2B,EAC3BzZ,uBAAuB,EACvBgb,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,oBAAoB,EACpBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,wBAAwB,EACxBC,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,EAC3Bne,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfsB,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBC,uBAAuB,EACvBC,wBAAwB,EACxBC,wBAAwB,EACxBC,yBAAyB,EACzBC,uBAAuB,EACvBE,+BAA+B,EAC/BmY,wBAAyB,GACzB4D,sBAAuB,IA1CZxtB,wEA+gGV,IAAAiK,EAAA9J,KACL,OACIrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACX8H,MAAO,CACH+C,QAAS,SAKbhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,QAAS9C,OAAQ,OAAQiD,aAAc,SAAhF,qBAEApL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,GAAIvB,MAAO,QAASnC,UAAW,SACnG9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,qBAKJ9I,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,mBAAoD9I,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK2qB,sBAAvD,cAE1DhwB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,kBAAmD9I,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKkrB,qBAAvD,cAEzDvwB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,iBAAkD9I,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKsrB,qBAAvD,kBAMxE3wB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAOVkF,KAAKxF,MAAMowB,2BACRjwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,GAAIvB,MAAO,QAASnC,UAAW,SACrG9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,qBAEHzD,KAAKJ,MAAMqrB,eACRtwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WACnB9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,sBAAsB2G,MAAOjC,KAAKxF,MAAMkxB,cAAerpB,SAAUrC,KAAK4B,kBAAmBI,KAAK,iBACrGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,wBACCjC,KAAKJ,MAAMqrB,eAAelnB,IAAI,SAAAzC,GAAO,OAAK3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAG1HxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKurB,gBAAiBzwB,UAAU,+BAAjD,iBAKN,MAER,KACNH,EAAAC,EAAAC,cAAA,WAGCmF,KAAKxF,MAAMwwB,2BACRrwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEgD,MAAO,QAASnC,UAAW,SAGtD9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,mCAMJ9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKqsB,qBAAvD,kBACCrsB,KAAKxF,MAAM6xB,oBACR1xB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAE+C,QAAS,OAAQwB,gBAAiB,wBAAyBvB,MAAO,QAASnC,UAAW,SACjH9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,sBAGA9I,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,IAAqDjL,EAAAC,EAAAC,cAAA,yDAErDF,EAAAC,EAAAC,cAAA,YAEIF,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,OAAQhF,YAAa,OAAQD,UAAW,SAAU0D,gBAAiB,KAEvGxM,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAItH,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAM+pB,cAAeliB,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,gBAAgBlH,UAAU,oBAAoByH,YAAY,uBAClL5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,YACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,eACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,iBAEJtH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAIJ,QAASxC,KAAKskB,kBAAmBxpB,UAAU,+BAA9D,SAEAH,EAAAC,EAAAC,cAAA,cAOZF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMghB,WAAYnZ,SAAUrC,KAAK4B,kBAAmBI,KAAK,cAC1GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,6BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,YAAf,aACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,gBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,YAAf,oBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,sBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,yBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,6BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,kBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,4BAEJtH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKub,gBAA9D,cAMR5gB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAMkhB,eAAgBrZ,SAAUrC,KAAK4B,kBAAmBI,KAAK,kBAC9GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,yBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,uBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,4BACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,qBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,sBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,SAAf,4BAEJtH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKyb,oBAA9D,cAIR9gB,EAAAC,EAAAC,cAAA,YACKmF,KAAKxF,MAAMiuB,kBAAkB3kB,QAC1BnJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiBR,UAAU,GAAGmH,MAAOjC,KAAKxF,MAAM6I,WAAYhB,SAAUrC,KAAKqqB,mBAAoBroB,KAAK,cAC3GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,2BACCjC,KAAKxF,MAAMiuB,kBAAkB3kB,QAAQC,IAAI,SAAAX,GAAM,OAC5CzI,EAAAC,EAAAC,cAAA,UAAQoH,MAAOmB,GAASA,MAGhCzI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKuS,kBAA9D,aAGF,MAGV5X,EAAAC,EAAAC,cAAA,YACKmF,KAAKxF,MAAMiuB,kBAAkBtkB,cAC1BxJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,iBAAiB2G,MAAOjC,KAAKxF,MAAM0J,aAAcpJ,UAAU,GAAGuH,SAAUrC,KAAKwqB,mBAAoBxoB,KAAK,gBAC7GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,6BACCjC,KAAKxF,MAAMiuB,kBAAkBtkB,cAAcJ,IAAI,SAAAhC,GAAM,OAClDpH,EAAAC,EAAAC,cAAA,UAAQoH,MAAOF,GAASA,MAJpC,IAMcpH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKqY,kBAA9D,aAEZ,MAKTrY,KAAKxF,MAAMyU,cACRtU,EAAAC,EAAAC,cAACyyB,GAAD,CACI7E,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B9gB,SAAU3H,KAAKxF,MAAMmN,SACrB6G,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAEL/L,KAAKxF,MAAM0U,iBACRvU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0yB,GAAD,CACI9E,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B3V,YAAa9S,KAAKxF,MAAMsY,YACxBtE,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,WAI1B,KAGL/L,KAAKxF,MAAM2U,cAERxU,EAAAC,EAAAC,cAAC2yB,GAAD,CACI/E,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B5I,aAAc7f,KAAKxF,MAAMqlB,aACzBrR,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAENpR,EAAAC,EAAAC,cAAA,WAMCmF,KAAKxF,MAAMiW,kBACR9V,EAAAC,EAAAC,cAAC4yB,GAAD,CACIhF,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B9gB,SAAU3H,KAAKxF,MAAMmN,SACrB6G,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAOL/L,KAAKxF,MAAMkW,qBACR/V,EAAAC,EAAAC,cAAC6yB,GAAD,CACIjF,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B3V,YAAa9S,KAAKxF,MAAMsY,YACxBtE,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAONpR,EAAAC,EAAAC,cAAA,WACCmF,KAAKxF,MAAMmW,kBACRhW,EAAAC,EAAAC,cAAC8yB,GAAD,CACIlF,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B5I,aAAc7f,KAAKxF,MAAMqlB,aACzBrR,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAOL/L,KAAKxF,MAAMoW,kBACRjW,EAAAC,EAAAC,cAAC+yB,GAAD,CACInF,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B9gB,SAAU3H,KAAKxF,MAAMmN,SACrB6G,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAOL/L,KAAKxF,MAAMqW,qBACRlW,EAAAC,EAAAC,cAACgzB,GAAD,CACIpF,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B3V,YAAa9S,KAAKxF,MAAMsY,YACxBtE,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAQL/L,KAAKxF,MAAMsW,kBACRnW,EAAAC,EAAAC,cAACizB,GAAD,CACIrF,kBAAmBzoB,KAAKxF,MAAMiuB,kBAC9B5I,aAAc7f,KAAKxF,MAAMqlB,aACzBrR,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAQL/L,KAAKxF,MAAMuW,wBACRpW,EAAAC,EAAAC,cAACkzB,GAAD,CACIC,SAAU,WACVxf,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAItB,KAML/L,KAAKxF,MAAMwW,sBACRrW,EAAAC,EAAAC,cAACozB,GAAD,CACID,SAAU,SACVxf,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAItB,KAOL/L,KAAKxF,MAAMyW,uBACRtW,EAAAC,EAAAC,cAACqzB,GAAD,CACIF,SAAU,UACVxf,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAML/L,KAAKxF,MAAM0W,uBACRvW,EAAAC,EAAAC,cAACszB,GAAD,CACIH,SAAU,UACVxf,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAML/L,KAAKxF,MAAM2W,wBACRxW,EAAAC,EAAAC,cAACuzB,GAAD,CACIJ,SAAU,WACVxf,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAItB,KAML/L,KAAKxF,MAAM4W,sBACRzW,EAAAC,EAAAC,cAACwzB,GAAD,CACIL,SAAU,SACVxf,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,UAGtB,KAOL/L,KAAKxF,MAAM6W,sBACR1W,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,UACjBjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAImF,KAAKxF,MAAM6I,WAAf,oBAGJ1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACX8H,MAAO,CACHe,MAAO,MACP+E,WAAY,MACZvB,gBAAiB,kBACjBxB,QAAS,OAKbhL,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,mBAAoDzD,KAAKxF,MAAMyY,eAAezR,QAG9E7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,wBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAM4Z,SACXpU,KAAKxF,MAAM8Z,SACXtU,KAAKxF,MAAMga,SACXxU,KAAKxF,MAAMka,SACX1U,KAAKxF,MAAMoa,SACX5U,KAAKxF,MAAMsa,SAGX9U,KAAKxF,MAAMqa,SACX7U,KAAKxF,MAAMma,SACX3U,KAAKxF,MAAMia,SACXzU,KAAKxF,MAAM+Z,SACXvU,KAAKxF,MAAM6Z,SACXrU,KAAKxF,MAAMua,UAEf5N,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QA5C9B,MAmDJphB,EAAAC,EAAAC,cAAA,WAMAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,kBAAmBxB,QAAS,OACxEhL,EAAAC,EAAAC,cAAA,UAAKmF,KAAKxF,MAAM6I,WAAhB,sBACA1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,0BAAkBmF,KAAKxF,MAAMwa,aAE7Bra,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,4BAIRC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMwa,YAAchV,KAAKxF,MAAMkc,eACpC1W,KAAKxF,MAAMkc,gBAEfvP,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAKrB9U,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAMkc,eAAiB1W,KAAKxF,MAAMwa,YAAe,KAAvE,eAGJra,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,6BAAqBmF,KAAKxF,MAAMkc,gBAChC/b,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,+CAIRC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkc,eAAiB1W,KAAKxF,MAAM4d,YACvCpY,KAAKxF,MAAM4d,aAEfjR,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,cAAMmhB,KAAKC,MAAOjc,KAAKxF,MAAM4d,YAAcpY,KAAKxF,MAAMkc,eAAkB,KAAxE,kBAGJ/b,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,iCAAyBmF,KAAKxF,MAAM4d,aAEpCzd,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,yCAIRC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMwa,YAAchV,KAAKxF,MAAM4d,YACpCpY,KAAKxF,MAAM4d,aAEfjR,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAM4d,YAAcpY,KAAKxF,MAAMwa,YAAe,KAApE,kBAQd,KAQLhV,KAAKxF,MAAM8W,8BACR3W,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WAErB9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,kBAAmBxB,QAAS,OACxEhL,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEgD,MAAO,UACjBjL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAImF,KAAKxF,MAAM0J,aAAf,YACJvJ,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,gBAAiDzD,KAAKxF,MAAM+d,eAAe/W,QAE3E7G,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,CACJ,oBACA,wBACJC,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMse,SACX9Y,KAAKxF,MAAMwe,SACXhZ,KAAKxF,MAAM0e,SACXlZ,KAAKxF,MAAM4e,SACXpZ,KAAKxF,MAAM8e,SACXtZ,KAAKxF,MAAMgf,SAGXxZ,KAAKxF,MAAM+e,SACXvZ,KAAKxF,MAAM6e,SACXrZ,KAAKxF,MAAM2e,SACXnZ,KAAKxF,MAAMye,SACXjZ,KAAKxF,MAAMue,SACX/Y,KAAKxF,MAAMif,UAEftS,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJsM,SAAU,OACVzM,OAAQ,CACJ0M,SAAU,QAnC9B,MAyCJphB,EAAAC,EAAAC,cAAA,WAOAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAEuE,gBAAiB,kBAAmBxB,QAAS,OACxEhL,EAAAC,EAAAC,cAAA,UAAKmF,KAAKxF,MAAM0J,aAAhB,uBACAvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM8H,MAAO,CAAEa,UAAW,WAErC9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,0BAAkBmF,KAAKxF,MAAMkf,aAE7B/e,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,oBAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,cAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkf,YAAc1Z,KAAKxF,MAAMggB,eACpCxa,KAAKxF,MAAMggB,gBAEfrT,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAMggB,eAAiBxa,KAAKxF,MAAMkf,YAAe,KAAvE,eAGJ/e,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,6BAAqBmF,KAAKxF,MAAMggB,gBAEhC7f,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,gCAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,qBAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMggB,eAAiBxa,KAAKxF,MAAM8gB,YACvCtb,KAAKxF,MAAM8gB,aAEfnU,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAM8gB,YAActb,KAAKxF,MAAMggB,eAAkB,KAAvE,kBAGJ7f,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,gCAAwBmF,KAAKxF,MAAM8gB,aAEnC3gB,EAAAC,EAAAC,cAACuU,EAAA,EAAD,CAAKxS,KAAM,CACPyS,OAAQ,IAAA6M,OACDlc,KAAKxF,MAAM0J,aADV,gCAAAgY,OAEDlc,KAAKxF,MAAM0J,aAFV,qBAIRoL,SAAU,CAAC,CACP1S,KAAM,CACFoD,KAAKxF,MAAMkf,YAAc1Z,KAAKxF,MAAM8gB,YACpCtb,KAAKxF,MAAM8gB,aAEfnU,gBAAiB,CACb,UACA,cAIRoI,QAAS,CACLC,OAAQ,CACJC,SAAS,MAIrB9U,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKC,MAAOjc,KAAKxF,MAAM8gB,YAActb,KAAKxF,MAAMkf,YAAe,KAApE,kBAOd,MAMR,KAMN/e,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKssB,qBAAvD,iBACCtsB,KAAKxF,MAAM8xB,oBACR3xB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,kBAC3CjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,KAAzC,qBACAjL,EAAAC,EAAAC,cAAC0qB,EAAD,CACI1F,aAAc7f,KAAKxF,MAAMqlB,iBAIrCllB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEjB,KAKNH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKusB,yBAAvD,qBACCvsB,KAAKxF,MAAM+xB,wBACR5xB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,UAG3CjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEa,UAAW,SAAUX,OAAQ,GAAI6C,QAAS,GAAIE,OAAQ,IAAMC,SAAU,OAAQqB,gBAAiB,0BACnIxM,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,UAApB,QAAqC5F,KAAKxF,MAAMiuB,kBAAkBviB,UAAY,IAAMlG,KAAKxF,MAAMiuB,kBAAkBtiB,SAAjH,oBACCnG,KAAKxF,MAAMqlB,aACRllB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAEgD,MAAO,gBAAiBD,QAAS,sBAErE3F,KAAKxF,MAAMqlB,aAAa9b,IAAI,SAAAyhB,GAAI,OAC5B7qB,EAAAC,EAAAC,cAAC4qB,EAAD,CACIzhB,IAAKwhB,EAAKvf,IACV3K,GAAIkqB,EAAKvf,IACT5B,SAAUmhB,EAAKnhB,SACfrJ,KAAMwqB,EAAKxqB,KACX0qB,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXrgB,OAAQkgB,EAAKlgB,OACblC,OAAQoiB,EAAKpiB,OACbiC,KAAMmgB,EAAKngB,KACXD,MAAOogB,EAAKpgB,MAEZK,SAAUqE,EAAKyX,mBACftgB,KAAM6I,EAAKtP,MAAMiuB,kBACjBvkB,aAAcshB,EAAKthB,aACnB8B,QAAS8D,EAAKlK,MAAMoG,aAKlC,OAIZ,KAKNrL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKwsB,kBAAvD,cACCxsB,KAAKxF,MAAMgyB,iBACR7xB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACX8H,MAAO,CACHa,UAAW,SACXX,OAAQ,GACR6C,QAAS,GACTE,OAAQ,IACRC,SAAU,SAEdnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,KAAO5F,KAAKxF,MAAMiuB,kBAAkBviB,UAAY,IAAMlG,KAAKxF,MAAMiuB,kBAAkBtiB,SAAvG,cAEHnG,KAAKxF,MAAMqnB,MAAQlnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB8H,MAAO,CAAE+C,QAAS,sBACpE3F,KAAKxF,MAAMqnB,MAAM9d,IAAI,SAAA6hB,GAAI,OACtBjrB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAE2a,aAAc,SACxB5iB,EAAAC,EAAAC,cAACitB,GAAD,CACI9jB,IAAK4hB,EAAK3f,IACV3K,GAAIsqB,EAAK3f,IACT8X,SAAU6H,EAAK/G,WACfb,SAAU4H,EAAK5H,SACfC,WAAY2H,EAAKviB,WACjB6a,UAAW0H,EAAK1H,UAChBC,SAAUyH,EAAKzH,SACfC,cAAewH,EAAK1hB,aACpBoa,eAAgBsH,EAAK7G,WACrBR,eAAgBqH,EAAK3G,kBACrBT,qBAAsBoH,EAAK1G,iBAC3BT,YAAamH,EAAK9G,QAClBO,WAAYuG,EAAKtkB,QACjB+c,WAAYuH,EAAKrkB,OAEjBa,SAAU0H,EAAKtP,MAAMiuB,uBAnBjB,KAyBd,OAIZ,KAKN9tB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKysB,kBAAvD,cACCzsB,KAAKxF,MAAMiyB,iBACR9xB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,UAC3CjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,mBAKJ9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE+C,QAAS,OAAQC,MAAO,QAAS5C,UAAW,SAIhFrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACoqB,EAAD,CACI7iB,SAAUpC,KAAKxF,MAAMiuB,kBACrBvjB,OAAQlF,KAAKxF,MAAMiuB,kBAAkBxiB,IACrCqa,SAAUtgB,KAAKJ,MAAM0gB,SACrBta,QAAShG,KAAKJ,MAAMoG,YAKhCrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE+C,QAAS,OAAQC,MAAO,QAAS5C,UAAW,SAChFrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAazD,KAAKxF,MAAMiuB,kBAAkBviB,UAAY,IAAMlG,KAAKxF,MAAMiuB,kBAAkBtiB,SAAjH,kBAGJxL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAACsqB,EAAD,CACI/iB,SAAUpC,KAAKxF,MAAMiuB,kBACrBvjB,OAAQlF,KAAKxF,MAAMiuB,kBAAkBxiB,IACrCqa,SAAUtgB,KAAKJ,MAAM0gB,SACrBta,QAAShG,KAAKJ,MAAMoG,QACpBwX,YAAaxd,KAAKxF,MAAM4K,MACxBkpB,UAAWtuB,KAAKxF,MAAMiuB,kBAAkBrjB,MACxCS,OAAQ,aAQtB,KAONlL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK0sB,oBAAvD,gBACC1sB,KAAKxF,MAAMkyB,mBACR/xB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,UAC3CjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAazD,KAAKxF,MAAMiuB,kBAAkBviB,UAAY,IAAMlG,KAAKxF,MAAMiuB,kBAAkBtiB,SAAjH,cAEJxL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOiH,MAAOjC,KAAKxF,MAAMivB,wBAAyBpnB,SAAUrC,KAAK4B,kBAAmBI,KAAK,4BACrGrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOiH,MAAOjC,KAAKxF,MAAMkvB,uBAAwBrnB,SAAUrC,KAAK4B,kBAAmBI,KAAK,2BACpGrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOiH,MAAOjC,KAAKxF,MAAMmvB,wBAAyBtnB,SAAUrC,KAAK4B,kBAAmBI,KAAK,4BACrGrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOiH,MAAOjC,KAAKxF,MAAMovB,uBAAwBvnB,SAAUrC,KAAK4B,kBAAmBI,KAAK,2BACpGrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOiH,MAAOjC,KAAKxF,MAAMqvB,6BAA8BxnB,SAAUrC,KAAK4B,kBAC9EI,KAAK,iCACTrH,EAAAC,EAAAC,cAAA,YAMJF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKoqB,qBAAvD,oBAGN,KAKNzvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK2sB,yBAAvD,sBACC3sB,KAAKxF,MAAMmyB,wBACRhyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB8H,MAAO,CAAEgD,MAAO,eACpDjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,2BAEF,KAKN9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK4sB,0BAAvD,uBACC5sB,KAAKxF,MAAMoyB,yBACRjyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB8H,MAAO,CAAEgD,MAAO,eACpDjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,4BAEF,KAKN9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK6sB,4BAAvD,yBACC7sB,KAAKxF,MAAMqyB,2BACRlyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB8H,MAAO,CAAEgD,MAAO,eACpDjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,8BAEF,MAER,KACN9I,EAAAC,EAAAC,cAAA,WAgBCmF,KAAKxF,MAAMqwB,0BACRlwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,UAC3CjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,oBAEJ9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVkF,KAAKJ,MAAMurB,cACRxwB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,sBAAsB2G,MAAOjC,KAAKxF,MAAMwxB,aAAc3pB,SAAUrC,KAAK4B,kBAAmBI,KAAK,gBACpGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,uBACCjC,KAAKJ,MAAMurB,cAAcpnB,IAAI,SAAAxC,GAAM,OAAK5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAEpHxL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAK+rB,eAAgBjxB,UAAU,+BAAhD,gBAGF,OAGZ,KACNH,EAAAC,EAAAC,cAAA,WAECmF,KAAKxF,MAAMuwB,0BAERpwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8H,MAAO,CAAEgD,MAAO,UAClDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,wBAOJ9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK8sB,8BAAvD,2BAEC9sB,KAAKxF,MAAMsyB,6BACRnyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8H,MAAO,CAAEgD,MAAO,UAClDjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,wBAEHzD,KAAKxF,MAAMuwB,0BACRpwB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,WACrB9I,EAAAC,EAAAC,cAAA,UAAQS,GAAG,sBAAsB2G,MAAOjC,KAAKxF,MAAMqxB,qBAAsBxpB,SAAUrC,KAAK4B,kBAAmBI,KAAK,wBAC5GrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,wBACCjC,KAAKxF,MAAMyxB,iBAAiB3L,SAASvc,IAAI,SAAAzC,GAAO,OAAK3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAErIxL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAK2rB,uBAAwB7wB,UAAU,+BAAxD,cAGF,KAELkF,KAAKxF,MAAM4wB,kCACRzwB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACIpP,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBAAYmF,KAAKxF,MAAM6wB,yBAAyBhK,MAAM7f,OAAtD,KACA7G,EAAAC,EAAAC,cAAA,uBAAemF,KAAKxF,MAAMsY,YAAYtR,QAKtC7G,EAAAC,EAAAC,cAAA,0BAAkBmF,KAAKxF,MAAM6wB,yBAAyBxL,aAAare,QACnE7G,EAAAC,EAAAC,cAAA,qBAIJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oCAA4BmhB,KAAKuS,MAAOvuB,KAAKxF,MAAMsY,YAAYtR,OAASxB,KAAKxF,MAAM6wB,yBAAyBhK,MAAM7f,OAAU,KAA5H,KACA7G,EAAAC,EAAAC,cAAA,2CAAmCmhB,KAAKuS,MAAOvuB,KAAKxF,MAAM6wB,yBAAyBxL,aAAare,OAASxB,KAAKxF,MAAMsY,YAAYtR,OAAU,KAA1I,KACA7G,EAAAC,EAAAC,cAAA,yCAAiCmhB,KAAKuS,MAAOvuB,KAAKxF,MAAM6wB,yBAAyBxL,aAAare,OAASxB,KAAKxF,MAAM6wB,yBAAyBhK,MAAM7f,OAAU,KAA3J,KACA7G,EAAAC,EAAAC,cAAA,2CAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAACyyB,GAAD,CACQ7E,kBAAmBzoB,KAAKxF,MAAM6wB,yBAC9B1jB,SAAU3H,KAAKxF,MAAMmN,SACrB6G,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,WAM5BpR,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAC2yB,GAAD,CACQ/E,kBAAmBzoB,KAAKxF,MAAM6wB,yBAC9BxL,aAAc7f,KAAKxF,MAAMqlB,aACzBrR,QAASxO,KAAKxF,MAAMgU,QACpBxB,WAAYhN,KAAKxF,MAAMwS,WACvBxB,QAASxL,KAAKxF,MAAMgR,QACpBkD,QAAS1O,KAAKxF,MAAMkU,QACpBxB,WAAYlN,KAAKxF,MAAM0S,WACvBxB,QAAS1L,KAAKxF,MAAMkR,QACpB4C,QAAStO,KAAKxF,MAAM8T,QACpBxB,WAAY9M,KAAKxF,MAAMsS,WACvBxB,QAAStL,KAAKxF,MAAM8Q,QACpBwD,QAAS9O,KAAKxF,MAAMsU,QACpBxB,WAAYtN,KAAKxF,MAAM8S,WACvBxB,QAAS9L,KAAKxF,MAAMsR,QACpB8C,QAAS5O,KAAKxF,MAAMoU,QACpBxB,WAAYpN,KAAKxF,MAAM4S,WACvBxB,QAAS5L,KAAKxF,MAAMoR,QACpBoD,QAAShP,KAAKxF,MAAMwU,QACpBxB,WAAYxN,KAAKxF,MAAMgT,WACvBxB,QAAShM,KAAKxF,MAAMwR,QACpBuC,QAASvO,KAAKxF,MAAM+T,QACpBxB,WAAY/M,KAAKxF,MAAMuS,WACvBxB,QAASvL,KAAKxF,MAAM+Q,QACpBkD,QAASzO,KAAKxF,MAAMiU,QACpBxB,WAAYjN,KAAKxF,MAAMyS,WACvBxB,QAASzL,KAAKxF,MAAMiR,QACpB4C,QAASrO,KAAKxF,MAAM6T,QACpBxB,WAAY7M,KAAKxF,MAAMqS,WACvBxB,QAASrL,KAAKxF,MAAM6Q,QACpBwD,QAAS7O,KAAKxF,MAAMqU,QACpBxB,WAAYrN,KAAKxF,MAAM6S,WACvBxB,QAAS7L,KAAKxF,MAAMqR,QACpB8C,QAAS3O,KAAKxF,MAAMmU,QACpBxB,WAAYnN,KAAKxF,MAAM2S,WACvBxB,QAAS3L,KAAKxF,MAAMmR,QACpBoD,QAAS/O,KAAKxF,MAAMuU,QACpBxB,WAAYvN,KAAKxF,MAAM+S,WACvBxB,QAAS/L,KAAKxF,MAAMuR,aAOlCpR,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,mCAER,KASN9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAK+sB,oBAAvD,wBACC/sB,KAAKxF,MAAMuyB,mBAERpyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAEgD,MAAO,UAC3CjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,qBAEJ9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAC0qB,EAAD,CACI1F,aAAc7f,KAAKxF,MAAM2xB,gBAMnC,KAONxxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKgtB,wBAAvD,4BACChtB,KAAKxF,MAAMwyB,uBAERryB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACX8H,MAAO,CACHa,UAAW,SACXX,OAAQ,GACR6C,QAAS,GACTE,OAAQ,IACRC,SAAU,SAIdnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAazD,KAAKxF,MAAMyxB,iBAAiB/lB,UAAY,IAAMlG,KAAKxF,MAAMyxB,iBAAiB9lB,SAA/G,mBAGHnG,KAAKxF,MAAM2xB,YACRxxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACX8H,MAAO,CACHgD,MAAO,QACPD,QAAS,sBAGT3F,KAAKxF,MAAM2xB,YAAYpoB,IAAI,SAAAyhB,GAAI,OAC3B7qB,EAAAC,EAAAC,cAAC4qB,EAAD,CACIzhB,IAAKwhB,EAAKvf,IACV3K,GAAIkqB,EAAKvf,IACT5B,SAAUmhB,EAAKnhB,SACfrJ,KAAMwqB,EAAKxqB,KACX0qB,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXrgB,OAAQkgB,EAAKlgB,OACblC,OAAQoiB,EAAKpiB,OACbiC,KAAMmgB,EAAKngB,KACXD,MAAOogB,EAAKpgB,MAEZK,SAAUqE,EAAKoiB,yBACfjrB,KAAM6I,EAAKtP,MAAMyxB,iBACjB/nB,aAAcshB,EAAKthB,aACnB8B,QAAS8D,EAAKlK,MAAMoG,aAMlC,MAIR,KAONrL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKitB,iBAAvD,qBACCjtB,KAAKxF,MAAMyyB,gBAERtyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACX8H,MAAO,CACHa,UAAW,SACXX,OAAQ,GACR6C,QAAS,GACTE,OAAQ,IACRC,SAAU,SAGdnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAazD,KAAKxF,MAAMyxB,iBAAiB/lB,UAAY,IAAMlG,KAAKxF,MAAMyxB,iBAAiB9lB,SAA/G,YAGHnG,KAAKxF,MAAM4xB,YACRzxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACX8H,MAAO,CACH+C,QAAS,sBAEbhL,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAE2a,aAAc,SAEvBvd,KAAKxF,MAAM4xB,YAAYroB,IAAI,SAAA6hB,GAAI,OAC5BjrB,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAE2a,aAAc,SACxB5iB,EAAAC,EAAAC,cAACitB,GAAD,CACI9jB,IAAK4hB,EAAK3f,IACV3K,GAAIsqB,EAAK3f,IACT8X,SAAU6H,EAAK/G,WACfb,SAAU4H,EAAK5H,SACfC,WAAY2H,EAAKviB,WACjB6a,UAAW0H,EAAK1H,UAChBC,SAAUyH,EAAKzH,SACfC,cAAewH,EAAK1hB,aACpBoa,eAAgBsH,EAAK7G,WACrBR,eAAgBqH,EAAK3G,kBACrBT,qBAAsBoH,EAAK1G,iBAC3BT,YAAamH,EAAK9G,QAClBO,WAAYuG,EAAKtkB,QACjB+c,WAAYuH,EAAKrkB,OAEjBa,SAAU0H,EAAKtP,MAAMyxB,wBASvCtxB,EAAAC,EAAAC,cAAA,4CAMZ,KAONF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKktB,wBAAvD,6BACCltB,KAAKxF,MAAM0yB,uBAERvyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8H,MAAO,CAAEgD,MAAO,UAClDjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,0BAGF,KAON9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKmtB,yBAAvD,8BACCntB,KAAKxF,MAAM2yB,wBAERxyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8H,MAAO,CAAEgD,MAAO,UAClDjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,2BAGF,KAON9I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB0H,QAASxC,KAAKotB,2BAAvD,gCACCptB,KAAKxF,MAAM4yB,0BAERzyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8H,MAAO,CAAEgD,MAAO,UAClDjL,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,WAAxB,6BAGF,MAMR,eA30JElI,aCwhBjBizB,uBA9iBX,SAAAA,EAAY5uB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwuB,IACf3uB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0uB,GAAAruB,KAAAH,KAAMJ,KAMVlF,kBAAoB,WAChBmF,EAAK4uB,aACL5uB,EAAKyhB,iBACLzhB,EAAKqC,SAAS,CACVwsB,SAAU7uB,EAAKD,MAAM0B,QAAQ+f,MAAM7f,OACnCmtB,SAAU9uB,EAAKD,MAAM0B,QAAQue,aAAare,UAZ/B3B,EAsBnB+B,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,KAzBGpC,EA6BnB4uB,WAAa,WACT5uB,EAAK+uB,SAAWvkB,YAAY,WACxBxK,EAAKD,MAAM6F,WACc,eAArB5F,EAAKD,MAAMivB,OAAqD,eAA3BhvB,EAAKrF,MAAMs0B,aAChDjvB,EAAKrD,iBACLqD,EAAKtD,iBACLsD,EAAKqC,SAAS,CACV4sB,YAAa,aACbtK,aAAc,GACdG,aAAc,MAEU,gBAArB9kB,EAAKD,MAAMivB,OAAsD,gBAA3BhvB,EAAKrF,MAAMs0B,aACxDjvB,EAAKpD,kBACLoD,EAAKnD,kBACLmD,EAAKqC,SAAS,CACV4sB,YAAa,cACb5N,YAAa,GACbC,YAAa,MAEW,YAArBthB,EAAKD,MAAMivB,OAAkD,YAA3BhvB,EAAKrF,MAAMs0B,YACpDjvB,EAAKqC,SAAS,CACVwsB,SAAU7uB,EAAKD,MAAM0B,QAAQ+f,MAAM7f,OACnCmtB,SAAU9uB,EAAKD,MAAM0B,QAAQue,aAAare,OAC1CstB,YAAa,UACb3N,YAAa,GACbD,YAAa,GACbyD,aAAc,GACdH,aAAc,KAGlBzjB,QAAQC,IAAI,cAGjB,MA9DYnB,EAmEnBkvB,qBAAuB,WAEnBC,cAAcnvB,EAAK+uB,WArEJ/uB,EA0EnByrB,oBAAsB,WAClBvqB,QAAQC,IAAI,gCAAkCnB,EAAKD,MAAMqrB,gBACzDlqB,QAAQC,IAAI,gCAAkCnB,EAAKD,MAAMurB,gBACZ,IAAzCtrB,EAAKrF,MAAMqwB,0BACXhrB,EAAKqC,SAAS,CACV0oB,4BAA4B,EAC5BC,2BAA2B,EAC3BC,2BAA2B,IAG/BjrB,EAAKqC,SAAS,CACV4oB,2BAA2B,KArFpBjrB,EAiGnBtD,eAAiB,WACbJ,EAAII,eAAesD,EAAKD,MAAM0B,QAAQ2E,KACjCtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVgf,YAAatgB,EAAIhE,SAI7B0G,WAAW,WAAQzD,EAAK0K,uBAAyB,MAzGlC1K,EA4GnBrD,eAAiB,WACbL,EAAIK,eAAeqD,EAAKD,MAAM0B,QAAQ2E,KACjCtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVif,YAAavgB,EAAIhE,UAhHdiD,EAqHnB0K,oBAAsB,WAElB,IAAI0B,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACX,GAAI/M,EAAKrF,MAAM0mB,YACX,IAAK,IAAIzX,EAAI,EAAGA,EAAI5J,EAAKrF,MAAM0mB,YAAY1f,OAAQiI,IAE/C,IAA0C,IAAtC5J,EAAKrF,MAAM0mB,YAAYzX,GAAG5B,QAC1B,OAAQhI,EAAKrF,MAAM0mB,YAAYzX,GAAGzO,MAC9B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAQpB/M,EAAKqC,SAAS,CACV+sB,eAAgBhjB,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,KAnLlF/M,EAwLnBpD,gBAAkB,WACdN,EAAIM,gBAAgBoD,EAAKD,MAAM0B,QAAQ2E,KAClCtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVsiB,aAAc5jB,EAAIhE,SAI9B0G,WAAW,WAAQzD,EAAK6kB,wBAA0B,MAhMnC7kB,EAmMnBnD,gBAAkB,WACdP,EAAIO,gBAAgBmD,EAAKD,MAAM0B,QAAQ2E,KAClCtF,KAAK,SAAAC,GACFf,EAAKqC,SAAS,CACVyiB,aAAc/jB,EAAIhE,UAvMfiD,EA4MnB6kB,qBAAuB,WAEnB,IAAIzY,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACX,GAAI/M,EAAKrF,MAAMgqB,aACX,IAAK,IAAI/a,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMgqB,aAAahjB,OAAQiI,IAEhD,IAA2C,IAAvC5J,EAAKrF,MAAMgqB,aAAa/a,GAAG5B,QAC3B,OAAQhI,EAAKrF,MAAMgqB,aAAa/a,GAAGzO,MAC/B,IAAK,MACDiR,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAQpB/M,EAAKqC,SAAS,CACVgtB,gBAAiBjjB,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,KA1QnF/M,EAiRnByhB,eAAiB,WACbhe,WAAW,WAEPnH,EAAIgD,YAAYU,EAAKD,MAAM0B,QAAQ2E,KAC9BtF,KAAK,SAAAC,GAAG,OACLf,EAAKqC,SAAS,CACV4Q,YAAalS,EAAIhE,QAErB0G,WAAW,WAAQzD,EAAK8hB,iBAAmB,OAEpD,MA3RY9hB,EA8RnB4hB,WAAa,WACT1gB,QAAQC,IAAI,kBAAoBnB,EAAKrF,MAAMmN,UAa3C,IAZA,IAAI4L,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACDzK,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMmN,SAASnG,OAAQiI,IAE5C,OAAQ5J,EAAKrF,MAAMmN,SAAS8B,GAAGzO,MAC3B,IAAK,MACDuY,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAMZrU,EAAKqC,SAAS,CACVmJ,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,EACTjI,QAASkI,KAnWErU,EAuWnB8hB,cAAgB,WACZ5gB,QAAQC,IAAI,qBAAuBnB,EAAKrF,MAAMsY,aAC9C,IAAImC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACV,GAAI/V,EAAKrF,MAAMsY,YACX,IAAK,IAAIrJ,EAAI,EAAGA,EAAI5J,EAAKrF,MAAMsY,YAAYtR,OAAQiI,IAC/C,OAAQ5J,EAAKrF,MAAMsY,YAAYrJ,GAAGzO,MAC9B,IAAK,MACDia,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IACA,MACJ,IAAK,MACDC,IAOhB/V,EAAKqC,SAAS,CACV2K,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZnI,WAAYoI,EACZuZ,cAAela,EAAMC,EAAMC,EAAMC,EAAMC,EAAME,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,KA5a/E/V,EAAKrF,MAAQ,CACTs0B,YAAa,WAHFjvB,wEAubf,OAEIlF,EAAAC,EAAAC,cAAA,WACKmF,KAAKJ,MAAM0B,QAAQ+f,MAAM7f,OAAS,EAC/B7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB8H,MAAO,CAAE+C,QAAS,GAAII,aAAc,MAAOtC,UAAW,WACjF9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEVkF,KAAKJ,MAAM0B,QAAQyoB,SAAWpvB,EAAAC,EAAAC,cAAA,OAAKoI,MAAM,2BAA2BmsB,IAAI,UAAUC,IAAKrvB,KAAKJ,MAAM0B,QAAQyoB,SAAUnnB,MAAO,CAAEe,MAAO,QAASkC,OAAQ,WAChJlL,EAAAC,EAAAC,cAAA,OAAKoI,MAAM,2BAA2BmsB,IAAI,UAAUC,IAAI,mGAAmGzsB,MAAO,CAAEe,MAAO,QAASkC,OAAQ,WAGlMlL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,KAAO5F,KAAKJ,MAAM0B,QAAQ4E,UAA9C,IAA0DlG,KAAKJ,MAAM0B,QAAQ6E,WAEjFxL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACTkF,KAAKxF,MAAMk0B,SACR/zB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KAIIpP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,SAAsCH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,UAEZ,YAA3BmF,KAAKxF,MAAMs0B,YAA4Bn0B,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAMk0B,UAAmB,KAClD,eAA3B1uB,KAAKxF,MAAMs0B,YAA+Bn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAI/J,KAAKxF,MAAM0mB,YAAcvmB,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAM0mB,YAAY1f,QAAiB,KAA7E,KAAyF,KACxG,gBAA3BxB,KAAKxF,MAAMs0B,YAAgCn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAI/J,KAAKxF,MAAMgqB,aAAe7pB,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAMgqB,aAAahjB,QAAiB,KAA/E,KAA2F,QAK7I,KACN7G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YAAyCH,EAAAC,EAAAC,cAAA,WAAzC,IAAiDmF,KAAKxF,MAAMqS,WACxDlS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAEgC,YAA3BmF,KAAKxF,MAAMs0B,YAA4Bn0B,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAM20B,eAAwB,KACvD,eAA3BnvB,KAAKxF,MAAMs0B,YAA+Bn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAI/J,KAAKxF,MAAMy0B,eAAiB,EAAIt0B,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAMy0B,gBAAyB,EAAhF,KAAyF,KACxG,gBAA3BjvB,KAAKxF,MAAMs0B,YAAgCn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAI/J,KAAKxF,MAAM00B,gBAAkB,EAAIv0B,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAM00B,iBAA0B,EAAlF,KAA2F,MAE3Iv0B,EAAAC,EAAAC,cAAA,8BAC4B,YAA3BmF,KAAKxF,MAAM80B,YAER30B,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKuS,MAAOvuB,KAAKxF,MAAM20B,cAAgBnvB,KAAKxF,MAAMk0B,SAAY,KAAnE,KAEE,KAEsB,eAA3B1uB,KAAKxF,MAAMs0B,YACRn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACK/J,KAAKxF,MAAMy0B,eACRt0B,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKuS,MAAOvuB,KAAKxF,MAAMy0B,eAAiBjvB,KAAKxF,MAAM0mB,YAAY1f,OAAU,KAA9E,KACE,MAER,KAEsB,gBAA3BxB,KAAKxF,MAAMs0B,YACRn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACK/J,KAAKxF,MAAM00B,gBACRv0B,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKuS,MAAOvuB,KAAKxF,MAAM00B,gBAAkBlvB,KAAKxF,MAAMgqB,aAAahjB,OAAU,KAAhF,KACE,MAER,MAKR7G,EAAAC,EAAAC,cAAA,gBAGLmF,KAAKxF,MAAMm0B,SACRh0B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,iBAA8CH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,UAEpB,YAA3BmF,KAAKxF,MAAMs0B,YAA4Bn0B,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAMm0B,UAAmB,KAClD,eAA3B3uB,KAAKxF,MAAMs0B,YAA+Bn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAI/J,KAAKxF,MAAM2mB,YAAcxmB,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAM2mB,YAAY3f,QAAiB,KAA7E,KAAyF,KACxG,gBAA3BxB,KAAKxF,MAAMs0B,YAAgCn0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAI/J,KAAKxF,MAAMmqB,aAAehqB,EAAAC,EAAAC,cAAA,gBAAQmF,KAAKxF,MAAMmqB,aAAanjB,QAAiB,KAA/E,MAA4F,MAGvIxB,KAAKxF,MAAM20B,cACRx0B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sCAG4B,YAA3BmF,KAAKxF,MAAMs0B,YAA4Bn0B,EAAAC,EAAAC,cAAA,YACpCF,EAAAC,EAAAC,cAAA,UAAKmhB,KAAKuS,MAAOvuB,KAAKxF,MAAMm0B,SAAW3uB,KAAKxF,MAAM20B,cAAiB,KAAnE,MAGM,KACkB,eAA3BnvB,KAAKxF,MAAMs0B,YAA+Bn0B,EAAAC,EAAAC,cAAA,YAEtCmF,KAAKxF,MAAM2mB,YAAcxmB,EAAAC,EAAAC,cAAA,cAAMmF,KAAKxF,MAAM2mB,YAAY3f,OAAS,EAAI7G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAIiS,KAAKuS,MAAOvuB,KAAKxF,MAAM2mB,YAAY3f,OAASxB,KAAKxF,MAAMy0B,eAAkB,KAA7E,MAA0F,GAAW,MAEnK,KACkB,gBAA3BjvB,KAAKxF,MAAMs0B,YAAgCn0B,EAAAC,EAAAC,cAAA,YAEvCmF,KAAKxF,MAAMmqB,aAAehqB,EAAAC,EAAAC,cAAA,cAAMmF,KAAKxF,MAAMmqB,aAAanjB,OAAS,EAAI7G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,SAAIiS,KAAKuS,MAAOvuB,KAAKxF,MAAMmqB,aAAanjB,OAASxB,KAAKxF,MAAM00B,gBAAmB,KAA/E,MAA4F,GAAW,MAEvK,MAEZ,MAER,SAUpB,aAviBa3zB,cCqkBpBg0B,8MA3jBX/0B,MAAQ,CACJyG,KAAM,GACNqf,SAAU,GACVta,QAAS,GACTwpB,eAAgB,OAChBC,mBAAoB,GACpBC,wBAAyB,GACzBC,uBAAwB,GACxBC,uBAAwB,GACxBC,uBAAwB,GACxBC,sBAAsB,EACtBC,uBAAuB,EACvBC,gBAAgB,EAChBC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACrBC,YAAa,OACbC,aAAc,UAIlB51B,kBAAoB,WAChBqG,QAAQC,IAAI,uBACZnB,EAAKkhB,iBACLlhB,EAAKihB,mBAGTC,eAAiB,WACb5kB,EAAI+C,cACCyB,KAAK,SAACC,GACHf,EAAKqC,SAAS,CACVoe,SAAU1f,EAAIhE,YAK9BkkB,cAAgB,WACZ3kB,EAAI8C,aACC0B,KAAK,SAACC,GACHf,EAAKqC,SAAS,CACV8D,QAASpF,EAAIhE,YAK7BgF,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,OAIhBsuB,sBAAwB,SAAA1uB,GAAS,IAAAyoB,EACLzoB,EAAME,OAAtBC,EADqBsoB,EACrBtoB,KAAMC,EADeqoB,EACfroB,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,IAEZqB,WAAW,WAAQzD,EAAKknB,iBAAmB,QAG/CyJ,uBAAyB,SAAA3uB,GAAS,IAAA4oB,EACN5oB,EAAME,OAAtBC,EADsByoB,EACtBzoB,KAAMC,EADgBwoB,EAChBxoB,MACdpC,EAAKqC,SAALpC,OAAAqC,EAAA,EAAArC,CAAA,GACKkC,EAAOC,IAEZqB,WAAW,WAAQzD,EAAKmnB,kBAAoB,QAGhDD,cAAgB,WACZhmB,QAAQC,IAAI,yBAA2BnB,EAAKrF,MAAMg1B,gBAClDrzB,EAAIyC,cAAciB,EAAKrF,MAAMg1B,gBACxB7uB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,GACZf,EAAKqC,SAAS,CACVutB,mBAAoB7uB,EAAIhE,KAAK,GAC7B8yB,wBAAyB9uB,EAAIhE,KAAK,GAAGsJ,UACrCypB,uBAAwB/uB,EAAIhE,KAAK,GAAGuJ,SACpCypB,uBAAwBhvB,EAAIhE,KAAK,GAAG0jB,gBAKpD0G,eAAiB,WACbjmB,QAAQC,IAAI,0BAA4BnB,EAAKrF,MAAMisB,iBACnDtqB,EAAIoC,gBAAgBsB,EAAKrF,MAAMisB,iBAC1B9lB,KAAK,SAAAC,GACFG,QAAQC,IAAIJ,GACZf,EAAKqC,SAAS,CACVuuB,oBAAqB7vB,EAAIhE,KAAK,GAC9B8zB,yBAA0B9vB,EAAIhE,KAAK,GAAGsJ,UACtCyqB,wBAAyB/vB,EAAIhE,KAAK,GAAGuJ,SACrCyqB,uBAAwBhwB,EAAIhE,KAAK,GAAGgM,kBAKpDuf,kBAAoB,SAAAtmB,GAChBd,QAAQC,IAAIa,EAAME,OAAOC,MACzBjB,QAAQC,IAAIa,EAAME,OAAOE,OACzBlB,QAAQC,IAAInB,EAAKrF,MAAMi1B,mBAAmBnP,UAC1CzgB,EAAKqC,SAAS,CACV2tB,uBAAwBhuB,EAAME,OAAOE,WAK7CpD,mBAAqB,SAACgD,GAClBA,EAAMvB,iBACN,IAAIuwB,EAAYhxB,EAAKrF,MAAM81B,aACvBQ,EAAWjxB,EAAKrF,MAAMg1B,eAC1BzuB,QAAQC,IAAI,sBAAwBnB,EAAKrF,MAAMq1B,uBAAyB,OAAShwB,EAAKrF,MAAMk1B,wBAA0B,IAAM7vB,EAAKrF,MAAMm1B,wBACvIxzB,EAAI0C,mBAAmBiyB,EAAU,CAC7Bx1B,GAAIu1B,IACLlwB,KAAK,SAAAC,GACJG,QAAQC,IAAI,2BACZH,IAAUC,QAAQ,2BAClBjB,EAAKihB,kBACN1f,MAAM,SAAAO,GACLZ,QAAQC,IAAI,8CAKpBlC,mBAAqB,SAAC+C,GAClBA,EAAMvB,iBACN,IAAIwwB,EAAWjxB,EAAKrF,MAAM61B,YACtBQ,EAAYhxB,EAAKrF,MAAMisB,gBAE3BtqB,EAAI2C,mBAAmB+xB,EAAW,CAC9Bv1B,GAAIw1B,IACLnwB,KAAK,SAAAC,GACJG,QAAQC,IAAI,2BACZH,IAAUC,QAAQ,4BAClBjB,EAAKkhB,mBACN3f,MAAM,SAAAO,GACLZ,QAAQC,IAAI,iDAKpBjC,wBAA0B,SAAC8C,GACvBA,EAAMvB,iBAEN,IAAIuwB,EAAYhxB,EAAKrF,MAAM81B,aACvBQ,EAAWjxB,EAAKrF,MAAMg1B,eAC1BrzB,EAAI4C,wBAAwB+xB,EAAU,CAClCx1B,GAAIu1B,IACLlwB,KAAK,SAAAC,GACJG,QAAQC,IAAI,+BACZH,IAAU2E,KAAK,+BACf3F,EAAKihB,kBACN1f,MAAM,SAAAO,GACLZ,QAAQC,IAAI,mDAIpBhC,wBAA0B,SAAC6C,GACvBA,EAAMvB,iBAEN,IAAIwwB,EAAWjxB,EAAKrF,MAAM61B,YACtBQ,EAAYhxB,EAAKrF,MAAMisB,gBAG3BtqB,EAAI6C,wBAAwB6xB,EAAW,CACnCv1B,GAAIw1B,IACLnwB,KAAK,SAAAC,GACJG,QAAQC,IAAI,+BACZH,IAAU2E,KAAK,+BACf3F,EAAKkhB,mBACN3f,MAAM,SAAAO,GACLZ,QAAQC,IAAI,qDAKpB8O,WAAa,WACT/O,QAAQC,IAAI,2BACsB,IAA9BnB,EAAKrF,MAAMw1B,eACXnwB,EAAKqC,SAAS,CACV8tB,gBAAgB,IAGpBnwB,EAAKqC,SAAS,CACV8tB,gBAAgB,EAChBC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,OAKjC3P,cAAgB,WACZ1f,QAAQC,IAAI,4BAC0B,IAAlCnB,EAAKrF,MAAMu2B,mBACXlxB,EAAKqC,SAAS,CACV+tB,mBAAmB,IAGvBpwB,EAAKqC,SAAS,CACV8tB,gBAAgB,EAChBC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,OAKjCY,YAAc,WACVjwB,QAAQC,IAAI,0BAC0B,IAAlCnB,EAAKrF,MAAMu2B,mBACXlxB,EAAKqC,SAAS,CACV+tB,mBAAmB,IAGvBpwB,EAAKqC,SAAS,CACV8tB,gBAAgB,EAChBC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,OAKjCa,oBAAsB,WAClBlwB,QAAQC,IAAI,6BAC2B,IAAnCnB,EAAKrF,MAAM41B,oBACXvwB,EAAKqC,SAAS,CACVkuB,qBAAqB,IAGzBvwB,EAAKqC,SAAS,CACV8tB,gBAAgB,EAChBC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,OAKjCzP,UAAY,WACR5f,QAAQC,IAAI,0BAGhBkwB,wBAA0B,SAAC7wB,GACvBA,EAAEC,kBACuC,IAArCT,EAAKrF,MAAMu1B,sBACXlwB,EAAKqC,SAAS,CACV6tB,uBAAuB,IAG3BlwB,EAAKqC,SAAS,CACV6tB,uBAAuB,OAKnCoB,uBAAyB,SAAC9wB,GACtBA,EAAEC,kBACsC,IAApCT,EAAKrF,MAAMs1B,qBACXjwB,EAAKqC,SAAS,CACV4tB,sBAAsB,IAG1BjwB,EAAKqC,SAAS,CACV4tB,sBAAsB,6EAOzB,IAAAhmB,EAAA9J,KACL,OACIrF,EAAAC,EAAAC,cAAA,WASIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDAAgD8H,MAAO,CAAE+C,QAAS,OAAQ4X,aAAc,SACnG5iB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe8H,MAAO,CAACgD,MAAO,eAA7C,qBACAjL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClLV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BQ,GAAG,0BACzCX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,KAAK,KAA/B,SAEJJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK8P,YAAxC,gBAEJnV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKixB,qBAAxC,oBAEJt2B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKygB,eAAxC,mBAEJ9lB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAK2gB,WAAxC,eAEJhmB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW0H,QAASxC,KAAKgxB,aAAxC,oBAOhBr2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAMXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,MAAO,CAAEiD,OAAQ,QAASsB,gBAAiB,oBAClExM,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUmC,MAAO,UAAzC,eAKZjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAIVkF,KAAKxF,MAAM41B,oBACRz1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8H,MAAO,CAAE+C,QAAS,MAAOwB,gBAAiB,kBAC5DxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEe,MAAO,MAAO+E,WAAY,OAAQhF,YAAa,OAAQD,UAAW,SAAU0D,gBAAiB,KACvGxM,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEgD,MAAO,UAApB,4BACAjL,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAItH,GAAG,kBAAkB2G,MAAOjC,KAAKxF,MAAM42B,qBAAsB/uB,SAAUrC,KAAK4B,kBAAmB5G,KAAK,OAAOgH,KAAK,uBAAuBlH,UAAU,mBAAmByH,YAAY,IAC/L5H,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,QAAf,mBACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,WAAf,YACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,cAAf,eACAtH,EAAAC,EAAAC,cAAA,UAAQoH,MAAO,eAAf,iBAEJtH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ+H,MAAO,GAAIJ,QAASxC,KAAKskB,kBAAmBxpB,UAAU,gCAA9D,SAEAH,EAAAC,EAAAC,cAAA,aAIRF,EAAAC,EAAAC,cAAA,WACKmF,KAAKxF,MAAM8lB,SACR3lB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVkF,KAAKxF,MAAM8lB,SAASvc,IAAI,SAAAzC,GAAO,OAC5B3G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmP,SAAA,KACKzI,EAAQ+f,MAAM7f,OAAS,EACpB7G,EAAAC,EAAAC,cAAA,OAAKmJ,IAAK1C,EAAQ2E,IAAKnL,UAAU,WAAW8H,MAAO,CAAEI,UAAW,SAE5DrI,EAAAC,EAAAC,cAACw2B,GAAD,CACIrtB,IAAK1C,EAAQ2E,IACb3E,QAASA,EACTmE,SAAUqE,EAAKiX,eACf8N,MAAO/kB,EAAKtP,MAAM42B,wBAGxB,SAWhB,OAKZ,KAGLpxB,KAAKxF,MAAMw1B,eACRr1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACX8H,MAAO,CAEH+C,QAAS,SAGbhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MACI+H,MAAO,CACHa,UAAW,SACXkC,QAAS,OAETC,MAAO,QACP9C,OAAQ,OACRiD,aAAc,SAPtB,gBAaJpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACX8H,MAAO,CACHa,UAAW,OAEXkC,QAAS,MAEbhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOwB,gBAAiB,yBAA0BvB,MAAO,QAAS9C,OAAQ,SAArH,iBAA6InI,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKkxB,yBAA9D,WAGtJlxB,KAAKxF,MAAMu1B,sBACRp1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACy2B,GAAD,CAAmBtrB,QAAShG,KAAKxF,MAAMwL,WAEzC,MAIVrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACX8H,MAAO,CACHa,UAAW,OAEXkC,QAAS,MAEbhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAI+H,MAAO,CAAEa,UAAW,SAAUkC,QAAS,MAAOwB,gBAAiB,yBAA0BvB,MAAO,QAAS9C,OAAQ,SAArH,oBAAgJnI,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8B0H,QAASxC,KAAKmxB,wBAA9D,WAGzJnxB,KAAKxF,MAAMs1B,qBACRn1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC02B,GAAD,CAAkBjR,SAAUtgB,KAAKxF,MAAM8lB,YAEzC,OAGd3lB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAEgD,MAAO,QAASnC,UAAW,SAAUX,OAAQ,EAAG6C,QAAS,GAAIG,SAAU,OAAQqB,gBAAiB,0BAClIxM,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,8BACCzD,KAAKxF,MAAMwL,QACRrL,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKxF,MAAMg1B,eAAgBntB,SAAUrC,KAAKuwB,sBAAuBvuB,KAAK,kBACjFrH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK,OAAQ/B,MAAO,QAA5B,uBACCjC,KAAKxF,MAAMwL,QAAQjC,IAAI,SAAAxC,GAAM,OAC1B5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAG7E,KACLnG,KAAKxF,MAAMi1B,mBACR90B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,+BAEDF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SACrB9I,EAAAC,EAAAC,cAAA,UACKmF,KAAKxF,MAAMo1B,uBAAuB7rB,IAAI,SAAAzC,GAAO,OAC1C3G,EAAAC,EAAAC,cAAA,UAAKyG,EAAQ4E,UAAb,IAAyB5E,EAAQ6E,SAAjC,IAA2CxL,EAAAC,EAAAC,cAAA,kBAKvDF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,8BACCmF,KAAKxF,MAAMo1B,uBACRj1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,sBAAsB2G,MAAOjC,KAAKxF,MAAM81B,aAAcjuB,SAAUrC,KAAK4B,kBAAmBI,KAAK,gBACpGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,+BACCjC,KAAKxF,MAAM8lB,SAASvc,IAAI,SAAAzC,GAAO,OAAK3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAEpHxL,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKnB,mBAAoB/D,UAAU,+BAApD,kBACAH,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKjB,wBAAyBjE,UAAU,iCAAzD,mBAEF,OAMZ,MAOVH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8H,MAAO,CAAEgD,MAAO,QAASnC,UAAW,SAAUX,OAAQ,EAAG6C,QAAS,GAAIG,SAAU,OAAQqB,gBAAiB,0BAClIxM,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,KAAG+H,MAAO,CAAEa,UAAW,WAAvB,+BACCzD,KAAKxF,MAAM8lB,SACR3lB,EAAAC,EAAAC,cAAA,UAAQoH,MAAOjC,KAAKxF,MAAMisB,gBAAiBpkB,SAAUrC,KAAKwwB,uBAAwBxuB,KAAK,mBACnFrH,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK,OAAQ/B,MAAO,QAA5B,wBACCjC,KAAKxF,MAAM8lB,SAASvc,IAAI,SAAAzC,GAAO,OAC5B3G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAK1C,EAAQ2E,IAAKhE,MAAOX,EAAQ2E,KAAM3E,EAAQ4E,UAAvD,IAAmE5E,EAAQ6E,aAGjF,KACLnG,KAAKxF,MAAMi2B,oBACR91B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,8BAIDF,EAAAC,EAAAC,cAAA,OAAK+H,MAAO,CAAEa,UAAW,SACrB9I,EAAAC,EAAAC,cAAA,UACKmF,KAAKxF,MAAMo2B,uBAAuB7sB,IAAI,SAAAxC,GAAM,OACzC5G,EAAAC,EAAAC,cAAA,MAAImJ,IAAKzC,EAAO0E,KAAM1E,EAAO2E,UAA7B,IAAyC3E,EAAO4E,SAAhD,IAA0DxL,EAAAC,EAAAC,cAAA,kBAKtEF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,6BACCmF,KAAKxF,MAAMwL,QACRrL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,sBAAsB2G,MAAOjC,KAAKxF,MAAM61B,YAAahuB,SAAUrC,KAAK4B,kBAAmBI,KAAK,eACnGrH,EAAAC,EAAAC,cAAA,UAAQoH,MAAM,QAAd,uBACCjC,KAAKxF,MAAMwL,QAAQjC,IAAI,SAAAxC,GAAM,OAAK5G,EAAAC,EAAAC,cAAA,UAAQmJ,IAAKzC,EAAO0E,IAAKhE,MAAOV,EAAO0E,KAAM1E,EAAO2E,UAApD,IAAgE3E,EAAO4E,aAE9GxL,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKlB,mBAAoBhE,UAAU,+BAApD,iBACAH,EAAAC,EAAAC,cAAA,UAAQ2H,QAASxC,KAAKhB,wBAAyBlE,UAAU,iCAAzD,kBAEF,OAGZ,SASpB,KAELkF,KAAKxF,MAAMy1B,kBACRt1B,EAAAC,EAAAC,cAAC22B,GAAD,CACIrG,cAAenrB,KAAKxF,MAAMwL,QAC1BilB,eAAgBjrB,KAAKxF,MAAM8lB,SAC3Bta,QAAShG,KAAKxF,MAAMwL,QACpBsa,SAAUtgB,KAAKxF,MAAM8lB,WAEvB,MAGV3lB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAhjBbS,aCiDXk2B,eApDb,SAAAA,IAAc,IAAA5xB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyxB,IACZ5xB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2xB,GAAAtxB,KAAAH,QACKxF,MAAQ,CACXyG,KAAM,IAHIpB,mFASZG,KAAK0xB,sDAGQ,IAAA5nB,EAAA9J,KACbxE,EAAK+E,OAAOoxB,mBAAmB,SAAC1wB,GAE1BA,GACF6I,EAAK5H,SAAS,CACZjB,KAAMA,uCASZ,OACEtG,EAAAC,EAAAC,cAAC+2B,EAAA,EAAD,KACEj3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACg3B,EAAA,EAAD,KACEl3B,EAAAC,EAAAC,cAACg3B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAChBp3B,EAAAC,EAAAC,cAACm3B,EAAD,OAEFr3B,EAAAC,EAAAC,cAACg3B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAChBp3B,EAAAC,EAAAC,cAACo3B,EAAD,CAAahxB,KAAMjB,KAAKxF,MAAMyG,QAEhCtG,EAAAC,EAAAC,cAACg3B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAChBp3B,EAAAC,EAAAC,cAACq3B,GAAD,CAAYjxB,KAAMjB,KAAKxF,MAAMyG,QAE/BtG,EAAAC,EAAAC,cAACg3B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAChBp3B,EAAAC,EAAAC,cAACs3B,GAAD,CAAalxB,KAAMjB,KAAKxF,MAAMyG,kBA1C1B1F,aCEZ62B,GAAcC,QACW,cAA7BC,OAAO5wB,SAAS6wB,UAEe,UAA7BD,OAAO5wB,SAAS6wB,UAEhBD,OAAO5wB,SAAS6wB,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT/xB,KAAK,SAAAmyB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBx4B,QACfm4B,UAAUC,cAAcO,WAK1BpyB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBI,MAAM,SAAAC,GACLN,QAAQM,MAAM,4CAA6CA,KChEjE+xB,IAASC,OAAO14B,EAAAC,EAAAC,cAACy4B,GAAD,MAAS7xB,SAAS8xB,eAAe,SDclC,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,GAAwBnB,OAAO5wB,UAC3CgyB,SAAWpB,OAAO5wB,SAASgyB,OAIvC,OAGFpB,OAAOqB,iBAAiB,OAAQ,WAC9B,IAAMjB,EAAK,GAAAxW,OAAMuX,GAAN,sBAENrB,GAwCX,SAAiCM,GAE/BkB,MAAMlB,GACH/xB,KAAK,SAAAkzB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQz3B,IAAI,gBAAgB03B,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMtzB,KAAK,SAAAmyB,GACjCA,EAAaoB,aAAavzB,KAAK,WAC7B2xB,OAAO5wB,SAASyyB,aAKpB1B,GAAgBC,KAGnBtxB,MAAM,WACLL,QAAQC,IACN,mEAzDAozB,CAAwB1B,GAHxBD,GAAgBC,MC7BxB2B","file":"static/js/main.1e690ce0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Nav extends Component {\n\n  state = {\n    image: \"\"\n  }\n\n  componentDidMount = () => {\n\n  }\n\n\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"/\">\n          Indicators App\n      </a>\n\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n{/* \n        <a href=\"/protege\" className=\"navbar-text ml-auto\"> Protege  </a>\n        ||\n        <a href=\"/mentor\" className=\"navbar-text\">  Mentor </a>\n        ||\n        <a href=\"/manager\" className=\"navbar-text\">  Manager </a> */}\n\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/protege\">Protege Dashboard</a>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/mentor\" className=\"navbar-text\">  Mentor Dashboard</a>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/manager\" className=\"navbar-text\">  Manager Dashboard</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyAT30iL9UFYWr_1GG0IGsEEeZytoWfKRm0\",\n    authDomain: \"indicatorsapp-1e9b2.firebaseapp.com\",\n    databaseURL: \"https://indicatorsapp-1e9b2.firebaseio.com\",\n    projectId: \"indicatorsapp-1e9b2\",\n    storageBucket: \"indicatorsapp-1e9b2.appspot.com\",\n    messagingSenderId: \"60264643594\"\n}\n\nconst fire = firebase.initializeApp(config);\n// const storage = firebase.storage();\n\n\nexport default fire\n\n\n// export {\n//     storage, fire as default\n// }","import axios from \"axios\";\n\nvar BASEURL = 'https://www.googleapis.com/books/v1/volumes?q='\nvar APIKEY = '&key=AIzaSyDNS2op_Ce00hAvNB-o2wam28IBeq8dCZg'\n\n\nexport default {\n    getDials: function() {\n        return axios.get(\"/api/dials/session\")\n    },\n    getWeeklyDials: function(id) {\n        return axios.get(\"/api/dials/weekly/\" + id)\n    },\n    getWeeklyAppts: function(id) {\n        return axios.get(\"/api/appointments/weekly/\" + id)\n    },\n    getMonthlyDials: function(id) {\n        return axios.get(\"/api/dials/monthly/\" + id)\n    },\n    getMonthlyAppts: function(id) {\n        return axios.get(\"/api/appointments/monthly/\" + id)\n    },\n    logCall: function(id, data) {\n        return axios.post(\"/api/dials/session/\" + id, data)\n    },\n    saveAppointment: function(id, data) {\n        return axios.post(\"/api/dials/appt/\" + id, data)\n    },\n    saveAppointmentMentor: function(id, data) {\n        return axios.post(\"/api/dials/appt/mentor/\" + id, data)\n    },\n    saveSale: function(data) {\n        return axios.post(\"/api/dials/sales\", data)\n    },\n    saveSaleMentor: function(data) {\n        return axios.post(\"/api/dials/mentor/sales\", data)\n    },\n    getAppointments: function(id) {\n        return axios.get(\"/api/appointments/find/\" + id)\n    },\n    getSales: function(id) {\n        return axios.get(\"/api/dials/sales/\" + id)\n    },\n    getMentorSales: function(id) {\n        return axios.get(\"/api/dials/mentor/sales/\" + id)\n    },\n    getMentorAppts: function(id) {\n        return axios.get(\"/api/dials/mentor/appts/\" + id)\n    },\n    updateAppointment: function(id, data) {\n        return axios.put(\"/api/appointments/edit/\" + id, data)\n    },\n    updateSale: function(id, data) {\n        return axios.put(\"/api/dials/sales/\" + id, data)\n    },\n    deleteAppointment: function(id) {\n        return axios.delete(\"/api/appointments/edit/\" + id)\n    },\n    deleteSale: function(id) {\n        return axios.delete(\"/api/dials/sales/\" + id)\n    },\n    createUser: function(data) {\n        return axios.post(\"/api/supervisor/protege\", data)\n    },\n    updateProtege: function(id, data) {\n        return axios.put(\"/api/supervisor/protege/\" + id, data)\n    },\n    createMentor: function(data) {\n        return axios.post(\"/api/supervisor/mentor\", data)\n    },\n    saveNote: function(id, data) {\n        return axios.post(\"/api/protege/note/\" + id, data)\n    },\n    saveNoteMentor: function(id, data) {\n        return axios.post(\"/api/supervisor/mentor/notes/\" + id, data)\n    },\n    getMentorNotes(id) {\n        return axios.get(\"/api/supervisor/mentor/notes/\" + id)\n    },\n    getProtegeNotes(id) {\n        return axios.get(\"/api/protege/notes/\" + id)\n    },\n    completeNote: function(id, data) {\n        return axios.put(\"/api/protege/note/\" + id, data)\n    },\n    uncompleteNote: function(id, data) {\n        return axios.get(\"/api/protege/note/\" + id, data)\n    },\n    deleteNote: function(id) {\n        return axios.delete(\"/api/protege/note/\" + id)\n    },\n    getUserData: function(id) {\n        return axios.get(\"/api/supervisor/user/\" + id)\n    },\n    getUserDataById(id) {\n        return axios.get(\"/api/supervisor/userdata/\" + id)\n    },\n    getProtege: function(id) {\n        return axios.get(\"/api/supervisor/protege/\" + id)\n    },\n    saveSourceToProtege: function(id, data) {\n        return axios.post(\"/api/protege/sources/\" + id, data)\n    },\n    saveTargetMktToProtege: function(id, data) {\n        return axios.post(\"/api/protege/targets/\" + id, data)\n    },\n    getMentor: function(id) {\n        return axios.get(\"/api/supervisor/mentor/\" + id)\n    },\n    getMentorById: function(id) {\n        return axios.get(\"/api/supervisor/mentor/find/\" + id)\n    },\n    addProtegeToMentor: function(id, data) {\n        return axios.put(\"/api/supervisor/mentor/find/\" + id, data)\n    },\n    addMentorToProtege: function(id, data) {\n        return axios.put(\"/api/supervisor/protege/find/\" + id, data)\n    },\n    removeProtegeFromMentor: function(id, data) {\n        return axios.post(\"/api/supervisor/mentor/find/\" + id, data)\n    },\n    removeMentorFromProtege: function(id, data) {\n        return axios.post(\"/api/supervisor/protege/find/\" + id, data)\n    },\n    getMentors: function() {\n        return axios.get(\"/api/supervisor/mentor/\")\n    },\n    getProteges: function() {\n        return axios.get(\"/api/supervisor/protege\")\n    },\n    getContacts: function(id) {\n        return axios.get(\"/api/dials/contacts/\" + id)\n    },\n    randomBooks: function() {\n        return axios.get(BASEURL + \"Apple\" + APIKEY);\n    },\n    searchBooks: function(query) {\n        return axios.get(BASEURL + query + APIKEY);\n    },\n    getSavedBooks: function() {\n        return axios.get(\"/api/books\");\n    },\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n}","import React, { Component } from 'react';\nimport fire from \"../../config/Fire\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\n\nclass BasicLogin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            userData: \"\"\n        }\n    }\n\n    login = e => {\n        e.preventDefault();\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((res) => {\n            cogoToast.success(\"Successful login with \" + res);\n            console.log(res.user.uid)\n            this.checkCredentials(res.user.uid)\n\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    checkCredentials = (uid) => {\n\n        var protege = false;\n        var mentor = false;\n        console.log(protege, mentor)\n        // var manager = false;\n        API.getProtege(uid)\n            .then(res => {\n                console.log(res)\n                if (res.data.length > 0) {\n                    console.log(\"This is a protege login\")\n                    protege = true\n                    document.location.href = '/protege'\n                } else {\n                    API.getMentor(uid)\n                        .then(res => {\n                            if (res.data.length > 0) {\n                                console.log(\"This is a mentor login\")\n                                mentor = true\n                                document.location.href = '/mentor'\n                            }\n                        }).catch(err =>\n                            console.log(\"Type of user not found\"))\n                }\n            }).catch(err =>\n                console.log(\"This is not a protege login\"))\n\n    };\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                <form>\n                    <br />\n                    <label>Enter E-mail:</label>\n                    <input value={this.state.email} onChange={this.handleInputChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                    <br />\n                    <label>Enter Password:</label>\n                    <input value={this.state.password} onChange={this.handleInputChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n                    {/* <button type=\"submit\" onClick={this.login} className=\"btn\">Login</button> */}\n\n\n                    <button onClick={this.login} className=\"btn btn-outline-info\">Log in</button>\n                    {/* <button onClick={this.logOut} style={{ marginTop: '5px', marginLeft: '25px' }} className=\"btn btn-danger\">Logout</button> */}\n                </form>\n\n                <br />\n                {/* <form>\n                    <input value={this.state.testemail} onChange={this.handleInputChange} type=\"email\" name=\"email\" className=\"form-control\" id\n\n\n                </form> */}\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default BasicLogin;","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport Nav from \"../components/Nav\";\nimport BasicLogin from \"../components/BasicLogin\"\n\n\nclass Home extends Component {\n\n    state = {\n        user: \"\",\n        username: \"\",\n        password: \"\"\n    }\n\n    componentDidMount() {\n        console.log(\"Loaded Home Page\")\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Nav />\n                <div className=\"jumbotron\" style={{ backgroundSize: 'cover', margin: '50px 50px 50px 50px', backgroundImage: 'url(../../CFGBanner.png)'}}>\n                    {/* <h1>You're on the Home Page!</h1> */}\n                    {/* Header Component, Basically a nice Jumbotron */}\n                    {/* <HomePageHeader /> */}\n                    {/* About Us on Left Component */}\n                    {/* Sign In on Right Component */}\n                    {/* Demo below */}\n                    {/* Contact Form */}\n                </div>\n                <div className=\"row\" style={{marginTop: ''}}>\n                    <div className=\"col-md-6\">\n                        <div className=\"card\">\n                            <div class=\"card-header\">\n                                <h4>About Us:</h4>\n                            </div>\n                            <div class=\"card-body\">\n                                <p>We are a sales analytics tool that is built to track dials, contacts, appointments. </p>\n                                <p>We parse that data between the source of the lead, the type of call, and the specific caller</p>\n                                <p>Login if your a Protege, Mentor and Manager to view your Dashboard!</p>\n                                <p>Questions? Contact us at: evancleary@1creative.com</p>\n                                {/* <p>If you would like to sign up for an account, please email: ecenterprisesllc@gmail.com for more information.</p> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n\n                        <div className=\"card\">\n                            <div class=\"card-header\">\n                                <h4>Sign up / Log in</h4>\n                            </div>\n                            <div class=\"card-body\">\n                                <BasicLogin />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from \"react\";\nimport \"./style.css\";\n// import { FormSelect } from 'shards-react';\n\n\nclass SourceSelector extends Component {\n\n    state = {\n        source: \"\",\n        leadSource: \"none\"\n    }\n\n    componentDidMount() {\n\n        // console.log(this.props.sources);\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n\n        setTimeout(() => { this.props.setParentState(this.state.leadSource) }, 500)\n    };\n\n\n\n\n\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <label style={{float: 'left', textAlign: 'left', marginRight: '15px', width: '200px', border: 'none'}}>Referrer: <span style={{fontSize: 10}}>(optional)</span></label>\n                    {this.props.userData.sources ? <select id=\"\" className=\"\" value={this.state.leadSource} onChange={this.handleInputChange} name=\"leadSource\">\n\n                        <option value={\"none\"}>---------------</option>\n                        {this.props.userData.sources.map(source => (\n                            <option key={source} value={source}>{source}</option>\n                        ))}\n                    </select> : null}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default SourceSelector\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n// import { FormSelect } from 'shards-react'\n\nclass TargetMarketSelector extends Component {\n\n    state = {\n        source: \"\",\n        targetMarket: \"none\"\n    }\n\n    componentDidMount() {\n\n        // console.log(this.props.sources);\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n\n        setTimeout(() => { this.props.setParentState(this.state.targetMarket) }, 500)\n    };\n\n\n\n\n\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <label style={{float: 'left', textAlign: 'left', marginRight: '15px', width: '200px', border: 'none' }}>Target Industry: <span style={{fontSize: 10}}>(optional)</span></label>\n                    {this.props.userData.targetMarkets ? <select id=\"sourceDropMenu\" className=\"\" value={this.state.targetMarket} onChange={this.handleInputChange} name=\"targetMarket\">\n                        <option value={\"none\"}>----------------------</option>\n                        {this.props.userData.targetMarkets.map(target => (\n                            <option key={target} className=\"chosen-targetmkt\" value={target}>{target}</option>\n                        ))}\n                    </select> : null}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default TargetMarketSelector\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport \"./style.css\"\n\nclass AppointmentCreator extends Component {\n\n    state = {\n        apptname: \"\",\n        apptsource: \"\",\n        apptnotes: \"\",\n        apptdate: \"\",\n        appttargetmkt: \"\",\n        apptTagged: \"\",\n        apptTime: \"\",\n        showAppt: false\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        // this.setState({\n        //     apptname: this.props.apptname,\n        //     apptsource: this.props.source,\n        //     apptnotes: this.props.notes,\n        //     apptdate: this.props.date\n        // })\n\n        if (this.props.showAppt === true) {\n            this.setState({\n                showAppt: true\n            })\n        }\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleApptSubmit = event => {\n        event.preventDefault()\n        console.log(\"Submitting appointment under user ID: \" + this.props.userID)\n\n        var ApptData = {\n            apptname: this.state.apptname,\n            source: this.state.apptsource,\n            notes: this.state.apptnotes,\n            date: this.state.apptdate,\n            dialer: this.props.userID,\n            type: this.state.type,\n            targetMarket: this.state.appttargetmkt,\n            time: this.state.apptTime\n        }\n\n        console.log(ApptData)\n\n\n\n        API.saveAppointment(this.props.userID, {\n            apptname: this.state.apptname,\n            source: this.state.apptsource,\n            notes: this.state.apptnotes,\n            date: this.state.apptdate,\n            type: this.state.type,\n            dialer: this.props.userID,\n            targetMarket: this.state.appttargetmkt,\n            protege: this.props.userID,\n            mentor: this.state.apptTagged,\n            time: this.state.apptTime\n        }).then(res =>\n            cogoToast.info(\"Saved Appt!\")\n        ).catch(err => console.log(err))\n\n        setTimeout(() => {\n            // cogoToast.loading(\"Re-loading appointments\")\n            this.props.rerender()\n        }, 1000)\n\n    }\n\n\n    showApptForm = () => {\n        if (this.state.showAppt === false) {\n            this.setState({\n                showAppt: true\n            })\n        } else {\n            this.setState({\n                showAppt: false\n            })\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"col-12\" id=\"prospect\" style={{ textAlign: 'left', padding: '0' }}>\n                <div className=\"card bg-light\">\n                    <div className=\"card-header\">\n                        <h4 \n                        style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '' }}\n                        >Create Appointment\n                        <br />\n                        <span><button className=\"btn btn-sm btn-outline-dark\" onClick={this.showApptForm}>Show</button></span></h4>\n                    </div>\n\n               \n                    {this.state.showAppt ?\n                        <div className=\"card-body\" style={{ padding: '10px', height: '400px', overflow: 'auto' }}>\n\n                            <form >\n                                <div style={{ color: 'black', padding: '20px', borderRadius: '30px' }}>\n\n\n                                    <label>Type : </label>\n                                    <select className=\"\" value={this.state.type} onChange={this.handleInputChange} name=\"type\" type=\"text\">\n                                        <option value=\"CPD\">Personal Prospect</option>\n                                        <option value=\"CCD\">Personal Delegated Client</option>\n                                        <option value=\"CND\">Personal Natural</option>\n                                        <option value=\"CSD\">Personal Suspect</option>\n                                        <option value=\"CRD\">Personal Referral</option>\n                                        <option value=\"CTD\">Personal Target</option>\n                                        <option value=\"BPD\">Business Prospect</option>\n                                        <option value=\"BCD\">Business Delegated Client</option>\n                                        <option value=\"BND\">Business Natural</option>\n                                        <option value=\"BSD\">Business Suspect</option>\n                                        <option value=\"BRD\">Business Referral</option>\n                                        <option value=\"BTD\">Business Target</option>\n                                    </select>\n                                    <br />\n                                    {/* </div> */}\n\n\n                                    {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}> */}\n\n                                    <label>Name :</label>\n                                    <input id=\"apptname-input\" className=\"form-control\" value={this.state.apptname} onChange={this.handleInputChange} name=\"apptname\" type=\"text\" placeholder=\"Give your appointment a name!\" />\n                                    {/* </div> */}\n\n                                    {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}> */}\n                                    <br />\n                                    <label>Date :</label>\n                                    <input id=\"date-input\" className=\"form-control\" value={this.state.apptdate} onChange={this.handleInputChange} name=\"apptdate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n                                    {/* </div> */}\n                                    <br />\n                                    <label>Time :</label>\n                                    <input className=\"form-control\" value={this.state.apptTime} onChange={this.handleInputChange} name=\"apptTime\" type=\"time\" />\n                                    <br />\n                                    {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}> */}\n                                    <label>Mentor : </label>\n\n                                    {this.props.mentors ?\n                                        <select className=\"\" value={this.props.apptTagged} onChange={this.handleInputChange} name=\"apptTagged\">\n                                            <option value={\"none\"}>None Selected</option>\n                                            {this.props.mentors.map(mentor => (\n                                                <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                            ))}\n                                        </select>\n                                        : null}\n                                    {/* </div> */}\n                                    <br />\n\n                                    {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}> */}\n\n                                    <label>Referrer : </label>\n                                    {/* <input id=\"source-input\" className=\"form-control\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\" type=\"text\" placeholder=\"Source of Lead\" /> */}\n                                    {this.props.userData.sources ? <select className=\"\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\">\n                                        <option value={\"none\"}>None Selected</option>\n                                        {this.props.userData.sources.map(source => (\n                                            <option key={source} value={source}>{source}</option>\n                                        ))}\n                                    </select> : <p>\"No referrers created yet\"</p>}\n                                    {/* </div> */}\n                                    <br />\n                                    {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}> */}\n\n                                    <label>Industry : </label>\n                                    {/* <input id=\"targetmkt-input\" className=\"form-control\" value={this.state.apptTargetMkt} onChange={this.handleInputChange} name=\"appttargetmkt\" type=\"text\" placeholder=\"Target Market goes here\" /> */}\n                                    {this.props.userData.targetMarkets ? <select className=\"\" value={this.state.appttargetmkt} onChange={this.handleInputChange} name=\"appttargetmkt\">\n                                        <option value={\"none\"}>None Selected</option>\n                                        {this.props.userData.targetMarkets.map(target => (\n                                            <option key={target} value={target}>{target}</option>\n                                        ))}\n                                    </select> : <p>\"No target markets created yet\"</p>}\n                                    {/* </div> */}\n                                    <br />\n\n                                    {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}> */}\n\n                                    <label>Notes :</label>\n                                    <input id=\"note-input\" className=\"form-control\" value={this.state.apptnotes} onChange={this.handleInputChange} name=\"apptnotes\" type=\"text\" placeholder=\"Enter any notes...\" />\n                                </div>\n                                <br />\n                                <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleApptSubmit}>Submit Appointment</button>\n\n                            </form>\n                        </div>\n                        : null}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default AppointmentCreator","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport Modal from 'react-modal'\n// import { Button } from 'shards-react';\nimport \"./style.css\"\nimport SourceSelector from '../SourceSelector';\nimport TargetMarketSelector from '../TargetMarketSelector'\nimport AppointmentCreator from '../AppointmentCreator'\nimport moment from 'moment';\n\nclass ProtegeCallBtnContainer extends Component {\n\n    state = {\n        username: \"EvanTest\",\n        modalIsOpen: false,\n        apptname: \"\",\n        apptdate: \"\",\n        apptsource: \"\",\n        appttargetmkt: \"\",\n        apptnotes: \"\",\n        appttype: \"\",\n        userdials: [],\n        otherAttributes: null,\n        mentorTagged: \"none\",\n        typeOfCall: 'none',\n        callResult: 'none',\n        customStyles: {\n            content: {\n                top: '50%',\n                left: '50%',\n                right: 'auto',\n                bottom: 'auto',\n                marginRight: '-50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'rgba(0,0,0,0.75)'\n            }\n        },\n        setCount: 0\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Protege Page\")\n        console.log(\"Current Date: \" + moment(new Date()).format(\"YYYY-MM-DD\"))\n        console.log(\"7 Days Prior: \" + moment().subtract(6, 'd').format(\"YYYY-MM-DD\"))\n\n    }\n\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openModal = () => {\n        this.setState({\n            modalIsOpen: true\n        })\n    }\n\n    afterOpenModal = () => {\n\n    }\n\n    closeModal = () => {\n        this.setState({\n            modalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleApptSubmit = event => {\n        event.preventDefault()\n\n        var ApptData = {\n            apptname: this.state.apptname,\n            dialer: this.props.userID,\n            source: this.state.apptsource,\n            notes: this.state.apptnotes,\n            date: this.state.apptdate,\n            type: this.state.appttype\n        }\n\n        console.log(ApptData)\n\n        this.setState({\n            modalIsOpen: false\n        })\n\n        API.saveAppointment(this.props.userID, {\n            apptname: this.state.apptname,\n            dialer: this.props.userID,\n            notes: this.state.apptnotes,\n            date: this.state.apptdate,\n            type: this.state.appttype,\n            source: this.state.apptsource,\n            targetMarket: this.state.appttargetmkt,\n            mentorTagged: this.state.mentorTagged\n        }).then(res =>\n            cogoToast.info(\"Logged Appt!\")\n        ).catch(err => console.log(err))\n\n        this.props.rerender()\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////// CONTACTED CALL HANDLER ////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    handleContactCallSubmit = (typeOfDial) => {\n        var levelOfDial = \"\";\n        if (typeOfDial === \"CPD\" ||\n            typeOfDial === \"CCD\" ||\n            typeOfDial === \"CND\" ||\n            typeOfDial === \"CSD\" ||\n            typeOfDial === \"CRD\") {\n            levelOfDial = \"cashflow\"\n        } else {\n            levelOfDial = \"business\"\n        }\n\n        var dialData = {\n            dialer: this.props.user._id,\n            type: typeOfDial,\n            level: levelOfDial,\n            contact: true\n        }\n\n        API.logCall(this.props.user._id, {\n            dialer: this.props.user._id,\n            type: typeOfDial,\n            level: levelOfDial,\n            contact: true,\n            source: this.props.source,\n            targetMarket: this.props.targetMarket,\n            mentorTagged: this.state.mentorTagged\n        }).then(res =>\n            cogoToast.info(\"Logged call!\")\n        ).catch(err => console.log())\n\n        console.log(dialData)\n\n        switch (dialData.type) {\n            case \"CPD\":\n                cogoToast.success(\"+1 Prospect Contact\")\n                break;\n            case \"BPD\":\n                cogoToast.success(\"+1 Prospect Contact\")\n                break;\n            case \"CCD\":\n                cogoToast.success(\"+1 Client Contact\")\n                break;\n            case \"BCD\":\n                cogoToast.success(\"+1 Client Contact\")\n                break;\n            case \"CND\":\n                cogoToast.success(\"+1 Natural Mkt Contact\")\n                break;\n            case \"BND\":\n                cogoToast.success(\"+1 Natural Mkt Contact\");\n                break;\n            case \"CSD\":\n                cogoToast.success(\"+1 Suspect Contact\")\n                break;\n            case \"BSD\":\n                cogoToast.success(\"+1 Suspect Contact\")\n                break;\n            case \"CRD\":\n                cogoToast.success(\"+1 Referral Contact\")\n                break;\n            case \"BRD\":\n                cogoToast.success(\"+1 Referral Contact\")\n                break;\n            case \"CTD\":\n                cogoToast.success(\"+1 Target Mkt Contact\")\n                break;\n            case \"BTD\":\n                cogoToast.success(\"+1 Target Mkt Contact\")\n                break;\n            default:\n                console.log(\"Error with cogoToast\")\n        }\n        this.props.rerender();\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////// SCHEDULED APPOINTMENT HANDLER /////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    handleScheduledApptSubmit = (typeOfDial) => {\n        var levelOfDial = \"\"\n        if (typeOfDial === \"CPD\" ||\n            typeOfDial === \"CCD\" ||\n            typeOfDial === \"CND\" ||\n            typeOfDial === \"CSD\" ||\n            typeOfDial === \"CRD\" ||\n            typeOfDial === \"CTD\") {\n            levelOfDial = \"cashflow\"\n        } else {\n            levelOfDial = \"business\"\n        }\n\n        var dialData = {\n            dialer: this.props.user._id,\n            type: typeOfDial,\n            level: levelOfDial,\n            contact: true,\n            scheduled: true\n        }\n\n        API.logCall(this.props.user._id, {\n            dialer: this.props.user._id,\n            type: typeOfDial,\n            level: levelOfDial,\n            contact: true,\n            scheduled: true,\n            source: this.props.source,\n            targetMarket: this.props.targetMarket,\n            mentorTagged: this.state.mentorTagged\n        }).then(res =>\n            cogoToast.info(\"Logged call!\")\n        ).catch(err => console.log())\n\n        console.log(dialData)\n\n        switch (dialData.type) {\n            case \"CPD\":\n                cogoToast.success(\"+1 Cashflow Scheduled\")\n                break;\n            case \"BPD\":\n                cogoToast.success(\"+1 Business Scheduled\")\n                break;\n            case \"CCD\":\n                cogoToast.success(\"+1 Cashflow Scheduled\")\n                break;\n            case \"BCD\":\n                cogoToast.success(\"+1 Businessowner Scheduled\")\n                break;\n            case \"CND\":\n                cogoToast.success(\"+1 Cashflow Scheduled\")\n                break;\n            case \"BND\":\n                cogoToast.success(\"+1 Business Scheduled\");\n                break;\n            case \"CSD\":\n                cogoToast.success(\"+1 Cashflow Scheduled\")\n                break;\n            case \"BSD\":\n                cogoToast.success(\"+1 Business Scheduled\")\n                break;\n            case \"CRD\":\n                cogoToast.success(\"+1 Referral Scheduled\")\n                break;\n            case \"BRD\":\n                cogoToast.success(\"+1 Referral Scheduled\")\n                break;\n            case \"CTD\":\n                cogoToast.success(\"+1 Target Mkt Scheduled\")\n                break;\n            case \"BTD\":\n                cogoToast.success(\"+1 Target Mkt Scheduled\")\n                break;\n            default:\n                console.log(\"Error with cogoToast\")\n        }\n\n        this.setState({\n            appttype: typeOfDial,\n            appttargetmkt: this.props.targetMarket,\n            apptsource: this.props.source,\n            modalIsOpen: true\n        })\n\n        this.props.rerender()\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    /////////////// MISSED CALL HANDLER ////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    handleMissedCallSubmit = (typeOfDial) => {\n\n        var dialData = {\n            dialer: this.props.user._id,\n            type: typeOfDial,\n            level: this.state.levelOfDial\n        }\n        console.log(dialData)\n\n        API.logCall(this.props.user._id, {\n            dialer: this.props.user._id,\n            type: typeOfDial,\n            level: this.state.levelOfDial,\n            source: this.props.source,\n            targetMarket: this.props.targetMarket,\n            mentorTagged: this.state.mentorTagged,\n            dialDate: moment(new Date()).format(\"YYYY-MM-DD\")\n        }).then(res =>\n            cogoToast.info(\"Logged call!\")\n        ).catch(err => console.log())\n\n\n        switch (dialData.type) {\n            case \"CPD\":\n                cogoToast.success(\"+1 Cashflow Prospect Dial\")\n                break;\n            case \"BPD\":\n                cogoToast.success(\"+1 Business Prospect Dial\")\n                break;\n            case \"CCD\":\n                cogoToast.success(\"+1 Cashflow Client Dial\")\n                break;\n            case \"BCD\":\n                cogoToast.success(\"+1 Businessowner Client Dial\")\n                break;\n            case \"CND\":\n                cogoToast.success(\"+1 Cashflow Natural Mkt Dial\")\n                break;\n            case \"BND\":\n                cogoToast.success(\"+1 Business Natural Mkt Dial\");\n                break;\n            case \"CSD\":\n                cogoToast.success(\"+1 Suspect Dial\")\n                break;\n            case \"BSD\":\n                cogoToast.success(\"+1 Suspect Dial\")\n                break;\n            case \"CRD\":\n                cogoToast.success(\"+1 Referral Dial\")\n                break;\n            case \"BRD\":\n                cogoToast.success(\"+1 Referral Dial\")\n                break;\n            case \"CTD\":\n                cogoToast.success(\"+1 Target Mkt Dial\")\n                break;\n            case \"BTD\":\n                cogoToast.success(\"+1 Target Mkt Dial\")\n                break;\n            default:\n                console.log(\"Error with cogoToast\")\n        }\n        this.props.rerender()\n    }\n\n    findDials = () => {\n        API.getDials()\n            .then(res =>\n                console.log(res.data)\n            )\n            .catch(err => console.log(err))\n    };\n\n    handleCallSubmit = (event) => {\n        event.preventDefault()\n        console.log(\"You've submitted a call for this type: \" + this.state.typeOfCall)\n\n\n        if (this.state.typeOfCall === \"none\" || this.state.levelOfDial === \"none\" || this.state.callResult === \"none\") {\n            cogoToast.error(\"ERROR: FILL OUT REQUIRED FIELDS!\")\n        } else {\n            if (this.state.levelOfDial === \"cashflow\") {\n                switch (this.state.typeOfCall) {\n                    case \"prospect\":\n                        this.setState({\n                            dialType: \"CPD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"client\":\n                        this.setState({\n                            dialType: \"CCD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"natural\":\n                        this.setState({\n                            dialType: \"CND\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"suspect\":\n                        this.setState({\n                            dialType: \"CSD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"referral\":\n                        this.setState({\n                            dialType: \"CRD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"target\":\n                        this.setState({\n                            dialType: \"CTD\"\n                        })\n                        this.recordDial()\n                        break;\n                    default:\n                        console.log(\"Error with typeOfCall under Cashflow\")\n                        break;\n                }\n            } else if (this.state.levelOfDial === \"business\") {\n                switch (this.state.typeOfCall) {\n                    case \"prospect\":\n                        this.setState({\n                            dialType: \"BPD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"client\":\n                        this.setState({\n                            dialType: \"BCD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"natural\":\n                        this.setState({\n                            dialType: \"BND\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"suspect\":\n                        this.setState({\n                            dialType: \"BSD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"referral\":\n                        this.setState({\n                            dialType: \"BRD\"\n                        })\n                        this.recordDial()\n                        break;\n                    case \"target\":\n                        this.setState({\n                            dialType: \"BTD\"\n                        })\n                        this.recordDial()\n                        break;\n                    default:\n                        console.log(\"Error with typeOfCall under Cashflow\")\n                        break;\n                }\n            }\n        }\n\n    }\n\n\n    recordDial = () => {\n\n        setTimeout(() => {\n            if (this.state.typeOfDial === \"none\" || this.state.levelOfDial === \"none\" || this.state.callResult === \"none\") {\n                cogoToast.error(\"ERROR: FILL OUT REQUIRED FIELDS!\")\n            } else {\n                if (this.state.callResult === \"MissedCall\") {\n                    this.handleMissedCallSubmit(this.state.dialType)\n                } else if (this.state.callResult === \"Contacted\") {\n                    this.handleContactCallSubmit(this.state.dialType)\n                } else if (this.state.callResult === \"Scheduled\") {\n                    this.handleScheduledApptSubmit(this.state.dialType)\n                }\n\n            }\n            // this.updateCount()\n            // this.props.rerender(this.props.userID)\n        }, 500)\n        //     <option value=\"MissedCall\">No Answer</option>\n        // <option value=\"Contacted\">Contact, not scheduled</option>\n        // <option value=\"Scheduled\">Contacted, scheduled</option>\n\n    }\n\n    // updateCount = () => {\n\n    //     if (this.state.setCount === 4) {\n    //         this.props.rerender(this.props.userID)\n    //         this.setState({\n    //             setCount: 0\n    //         })\n    //     } else {\n    //         this.setState({\n    //             setCount: this.state.setCount++\n    //         })\n    //     }\n    // }\n\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\" id=\"prospect\" style={{ textAlign: 'left' }}>\n                    <div className=\"card bg-light text-dark\">\n                        <div className=\"card-header\">\n                            <p id=\"indicators-tag\" style={{ textAlign: 'center', padding: '20px 0px 0px 0px', color: '', borderRadius: '10px', fontSize: '20px' }}>D I A L S</p>\n                        </div>\n                        <form>\n                         \n                            <div \n                            style={{color: '', padding: '10px', borderRadius: '0px', height: '', border: 'none' }}\n                            >\n                                <label style={{ float: 'left', textAlign: '', marginRight: '15px', width: '200px' }}>Type of Call <span style={{ fontSize: 10 }}>(required)  </span>  </label>\n                                {/* <br /> */}\n                                <select style={{ marginLeft: 'auto' }} value={this.state.levelofDial} onChange={this.handleInputChange} name=\"levelOfDial\">\n                                    <option value=\"none\">Select Type 1</option>\n                                    <option value=\"cashflow\">Standard / Cashflow</option>\n                                    <option value=\"business\">Tier-1/Business</option>\n                                </select>\n                                <select style={{ marginLeft: 'auto' }} value={this.state.typeOfCall} onChange={this.handleInputChange} name=\"typeOfCall\">\n                                    <option value=\"none\">Select Type 2</option>\n                                    <option value=\"prospect\">Warm Lead/Prospect</option>\n                                    <option value=\"client\">Delegated Client</option>\n                                    <option value=\"natural\">Natural Market</option>\n                                    <option value=\"suspect\">Vertical / Orphan</option>\n                                    <option value=\"referral\">New Referral</option>\n                                    <option value=\"target\">Targeted Industry</option>\n                                    {/* <option value=\"BPD\">Warm Lead/Prospect</option>\n                            <option value=\"BCD\">Tier-1 Delegated Client</option>\n                            <option value=\"BND\">Tier-1 Natural Market</option>\n                            <option value=\"BSD\">Tier-1 Vertical / Orphan</option>\n                            <option value=\"BRD\">Tier-1 New Referral</option>\n                            <option value=\"BTD\">Tier-1 Targeted Industry</option> */}\n                                </select>\n                                {/* </div> */}\n                                <hr />\n                                {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px', height: '100px' }}> */}\n                                <label style={{ float: 'left', textAlign: 'left', marginRight: '15px', width: '200px', border: 'none' }}>Tag a Mentor <span style={{ fontSize: 10 }}>(optional)</span></label>\n                                {this.props.userData.allMentors ? <select value={this.state.mentorTagged} onChange={this.handleInputChange} name=\"mentorTagged\">\n                                    <option value=\"none\">--------------------</option>\n                                    {this.props.userData.allMentors.map(mentor => (\n                                        <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                    ))}\n                                </select>\n                                    : <p style={{ fontSize: '8px' }}>You have note been assigned a Mentor yet!</p>}\n                                {/* </div> */}\n                                <hr />\n                                {/* <hr /> */}\n                                {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px', height: '100px' }}> */}\n                                <SourceSelector userData={this.props.userData} setParentState={this.props.setParentState} />\n                                {/* </div> */}\n                                <hr />\n                                {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px', height: '100px' }}> */}\n                                <TargetMarketSelector userData={this.props.userData} setParentState={this.props.setParentStateTargetMkt} />\n                                {/* </div> */}\n                                <hr />\n                                {/* <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px', height: '100px' }}> */}\n                                <label style={{ float: 'left', textAlign: 'left', marginRight: '15px', width: '200px', border: 'none' }}>Call Result <span style={{ fontSize: 10 }}>(required)</span></label>\n                                <select id=\"\" className=\"\" value={this.state.callResult} onChange={this.handleInputChange} name=\"callResult\">\n                                    <option value=\"none\">Select a Result</option>\n                                    <option value=\"MissedCall\">No Answer</option>\n                                    <option value=\"Contacted\">Contact, not scheduled</option>\n                                    <option value=\"Scheduled\">Contacted, scheduled</option>\n                                </select>\n\n\n                            </div>\n                            <hr />\n                            <div style={{textAlign: 'center'}}>\n                            <button style={{ width: '50%', textAlign: '' }} className=\"btn btn-success\" onClick={this.handleCallSubmit}>Log Call</button>\n                            </div>\n                            <hr />\n                        </form>\n                    </div>\n                </div>\n\n\n                {/* <div className=\"col-lg-12\"> */}\n\n                {/* <div className=\"card-header\"> */}\n                {/* <h2>Appointments</h2>\n                        <hr /> */}\n                {/* </div> */}\n                {/* <div className=\"card-body\"> */}\n\n                <div className=\"form-group\" id=\"appt-holder \">\n                    <Modal isOpen={this.state.modalIsOpen} onAfterOpen={this.afterOpenModal} onRequestClose={this.closeModal}\n                        style={this.state.customStyles}\n                        contentLabel=\"Your Request Viewer\"\n                    >\n\n                        {/* <div className=\"card\"> */}\n\n\n\n\n                        <AppointmentCreator\n                            userID={this.props.user._id}\n                            username={this.props.username}\n                            rerender={this.props.rerender}\n                            userData={this.props.userData}\n                            mentors={this.props.mentors}\n                            showAppt={true}\n                        />\n\n\n\n\n                        {/* </div> */}\n                    </Modal>\n                </div>\n\n                {/* </div> */}\n\n                {/* </div> */}\n\n            </div>\n\n\n        )\n    }\n}\n\nexport default ProtegeCallBtnContainer","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport Modal from \"react-modal\"\nimport { mergeEventStores } from \"@fullcalendar/core\";\nimport moment from \"moment\"\n\n\n\nclass AppointmentItem extends Component {\n\n    state = {\n        editModalIsOpen: false,\n        apptname: \"\",\n        apptsource: \"\",\n        apptnotes: \"\",\n        apptdate: \"\",\n        appttargetmkt: \"\",\n        mentorTagged: \"\"\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        this.setState({\n            apptname: this.props.apptname,\n            apptsource: this.props.source,\n            apptnotes: this.props.notes,\n            apptdate: this.props.date,\n            appttargetmkt: this.props.targetMarket\n        })\n\n        setTimeout(() => { this.setMentorName() }, 1000);\n\n    }\n\n    setMentorName = () => {\n\n        var mentorName = \"\";\n\n        for (var i = 0; i < this.props.mentors.length; i++) {\n            if (this.props.mentor === this.props.mentors[i]._id) {\n                mentorName = this.props.mentors[i].firstName + \" \" + this.props.mentors[i].lastName;\n                console.log(\"Looped Mentor Name:\" + mentorName);\n                this.setMentorTag(mentorName)\n            }\n        }\n\n        // setTimeout(() => { \n\n        //     this.setState({\n        //         mentorName: mentorName\n        //     })\n\n        // }, 1000);\n\n    }\n\n    setMentorTag = (mentor) => {\n        console.log(\"Setting Mentor with: \" + mentor);\n        this.setState({\n            mentorTagged: mentor\n        })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleApptUpdate = event => {\n        event.preventDefault()\n\n        this.setState({\n            editModalIsOpen: false\n        })\n\n        API.updateAppointment(this.props.id, {\n            apptname: this.state.apptname,\n            source: this.state.apptsource,\n            notes: this.state.apptnotes,\n            date: this.state.apptdate,\n            targetMarket: this.state.appttargetmkt\n        }).then(res =>\n            cogoToast.info(\"Updated Appt!\")\n        ).catch(err => console.log(err))\n    }\n\n    prepEditModal = () => {\n        this.setState({\n            editModalIsOpen: true,\n            apptname: this.state.apptname,\n            apptsource: this.state.apptsource,\n            apptnotes: this.state.apptnotes,\n            apptdate: this.state.apptdate\n        })\n    }\n\n    deleteAppt = () => {\n        API.deleteAppointment(this.props.id)\n            .then(res => cogoToast.error(\"You deleted this appointment\"))\n            .catch(err => console.log(err))\n\n        setTimeout(() => {\n            // cogoToast.loading(\"Updating Appointments\")\n            this.props.rerender()\n        }, 500)\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"card bg-light\">\n\n                    <div className=\"card-header\">\n                        <div\n                        // style={{ height: '', padding: '0 10% 0 10%', textAlign: 'left', backgroundColor: 'rgba(255, 255, 255,0.75)', overflow: 'auto', borderRadius: 5 }}\n                        >\n                            <p style={{ textAlign: 'center', fontSize: this.props.headerFont }}>{this.state.apptname}</p>\n                            <p style={{ textAlign: 'center', fontSize: '12px' }}>{moment(this.state.apptdate).format(\"MM-DD-YYYY\")} {this.props.time ? <span> at: {moment(this.props.time, [\"HH:mm\"]).format(\"hh:mm A\")}</span>: null}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"card-body\" style={{ padding: '', clear: 'both' }}>\n                        {this.state.apptnotes ?\n                            <p style={{ color: '', fontSize: this.props.textFont }}>Note: {this.state.apptnotes}</p>\n                            : null}\n\n                        <p style={{ fontSize: this.props.textFont, width: '', float: '' }}>Mentor: {this.state.mentorTagged}</p>\n                        <p style={{ fontSize: this.props.textFont, width: '', float: '' }}>Type:\n                    {this.props.type === \"CPD\" ? <span> Cashflow Prospect</span> : null}\n                            {this.props.type === \"BPD\" ? <span> Businessowner Prospect</span> : null}\n                            {this.props.type === \"CCD\" ? <span> Cashflow Delegated Client</span> : null}\n                            {this.props.type === \"BCD\" ? <span> Businessowner Delegated Client</span> : null}\n                            {this.props.type === \"CND\" ? <span> Cashflow Natural Market</span> : null}\n                            {this.props.type === \"BND\" ? <span> Businessowner Natural Market</span> : null}\n                            {this.props.type === \"CSD\" ? <span> Cashflow Vertical/Orphan</span> : null}\n                            {this.props.type === \"BSD\" ? <span> Businessowner Vertical/Orphan</span> : null}\n                            {this.props.type === \"CRD\" ? <span> Cashflow Referral</span> : null}\n                            {this.props.type === \"BRD\" ? <span> Businessowner Referral\"</span> : null}\n                            {this.props.type === \"CTD\" ? <span> Cashflow Target Industry</span> : null}\n                            {this.props.type === \"BTD\" ? <span> Businessowner Target Industry</span> : null}\n                        </p>\n                    </div>\n\n                    <div className=\"card-footer\" style={{ textAlign: 'center' }}>\n                        <button value={this.props.id} onClick={this.prepEditModal} className=\"btn btn-info btn-sm\" style={{ width: '33%' }}>Edit</button>\n                        <button value={this.props.id} onClick={this.deleteAppt} className=\"btn btn-danger btn-sm\" style={{ width: '33%' }}>X</button>\n                    </div>\n\n                </div>\n\n\n                <div className=\"form-group\" id=\"appt-holder \">\n                    <Modal \n                        isOpen={this.state.editModalIsOpen} \n                        onAfterOpen={this.afterOpenEditModal} \n                        onRequestClose={this.closeEditModal} \n                        style={this.customStyles} \n                        contentLabel=\"Your Request Viewer\"\n                        ariaHideApp={false}\n                        >\n                        {/* <div className=\"card\"> */}\n                        <h3>Appointment Logger</h3>\n                        <form className=\"form-group\">\n                            <label>Appointment Name:</label>\n                            <input id=\"apptname-input\" \n                                className=\"form-control\" \n                                value={this.state.apptname} \n                                onChange={this.handleInputChange} \n                                name=\"apptname\" \n                                type=\"text\" \n                                placeholder=\"Give your appointment a name!\" />\n\n                            <label>Date of Appointment:</label>\n                            <input id=\"date-input\" className=\"form-control\" value={this.state.apptdate} onChange={this.handleInputChange} name=\"apptdate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n\n                            <label>Lead Source:</label>\n                            {/* <input id=\"source-input\" className=\"form-control\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\" type=\"text\" placeholder=\"Source of Lead\" /> */}\n                            {this.props.user.sources ? \n                                <select \n                                // defaultValue={this.props.source} \n                                value={this.state.apptsource} \n                                onChange={this.handleInputChange} \n                                name=\"apptsource\"\n                                className=\"form-control\"\n                                >\n                                <option value={\"none\"}>No Lead Source Selected</option>\n                                {this.props.user.sources.map(source => (\n                                    <option key={source} value={source}>{source}</option>\n                                ))}\n                            </select> : <p>\"No lead sources created yet\"</p>}\n\n                            <br />\n                            <label>Target Market:</label>\n                            {/* <input id=\"targetmkt-input\" className=\"form-control\" value={this.state.apptTargetMkt} onChange={this.handleInputChange} name=\"appttargetmkt\" type=\"text\" placeholder=\"Target Market goes here\" /> */}\n                            {this.props.user.targetMarkets ? <select value={this.state.appttargetmkt} onChange={this.handleInputChange} name=\"appttargetmkt\">\n                                {/* <option value={\"none\"}>No Target Market Selected</option> */}\n                                {this.props.user.targetMarkets.map(target => (\n                                    <option key={target} value={target}>{target}</option>\n                                ))}\n                            </select> : <p>\"No target markets created yet\"</p>}\n                            <br />\n                            <label>Appointment Notes:</label>\n                            <input id=\"note-input\" className=\"form-control\" value={this.state.apptnotes} onChange={this.handleInputChange} name=\"apptnotes\" type=\"text\" placeholder=\"Enter any notes...\" />\n                            <br />\n                            <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleApptUpdate}>Submit Appointment</button>\n                        </form>\n                        {/* </div> */}\n                    </Modal>\n                </div>\n\n\n            </>\n        )\n    }\n}\n\nexport default AppointmentItem","import React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nclass DialDataSide extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDialChart: true,\n            showContactChart: true,\n            showApptChart: true\n        }\n    }\n\n    componentDidMount = () => {\n    setInterval(() => { \n        this.parseWeeklyDials()\n        this.parseWeeklyContacts()\n        this.parseWeeklyAppts()\n    }, 3000)\n    }\n\n    parseWeeklyDials = () => {\n       \n            // console.log(\"Parsing Dials: \" + this.state.dialData)\n            var wCPD = 0;\n            var wBPD = 0;\n            var wCCD = 0;\n            var wBCD = 0;\n            var wCND = 0;\n            var wBND = 0;\n            var wCSD = 0;\n            var wBSD = 0;\n            var wCRD = 0;\n            var wBRD = 0;\n            var wCTD = 0;\n            var wBTD = 0;\n            for (var i = 0; i < this.props.dialData.length; i++) {\n                // console.log(this.state.dialData[i])\n                switch (this.props.dialData[i].type) {\n                    case \"CPD\":\n                        wCPD++\n                        break;\n                    case \"BPD\":\n                        wBPD++\n                        break;\n                    case \"CCD\":\n                        wCCD++\n                        break;\n                    case \"BCD\":\n                        wBCD++\n                        break;\n                    case \"CND\":\n                        wCND++\n                        break;\n                    case \"BND\":\n                        wBND++\n                        break;\n                    case \"CSD\":\n                        wCSD++\n                        break;\n                    case \"BSD\":\n                        wBSD++\n                        break;\n                    case \"CRD\":\n                        wCRD++\n                        break;\n                    case \"BRD\":\n                        wBRD++\n                        break;\n                    case \"CTD\":\n                        wCTD++\n                        break;\n                    case \"BTD\":\n                        wBTD++\n                        break;\n                    default:\n                        break;\n                }\n            }\n            this.setState({\n                CPDials: wCPD,\n                BPDials: wBPD,\n                CCDials: wCCD,\n                BCDials: wBCD,\n                CNDials: wCND,\n                BNDials: wBND,\n                CSDials: wCSD,\n                BSDials: wBSD,\n                CRDials: wCRD,\n                BRDials: wBRD,\n                CTDials: wCTD,\n                BTDials: wBTD\n            })\n        }\n\n\n\n    parseWeeklyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.props.dialData.length; i++) {\n\n            if (this.props.dialData[i].contact === true) {\n                switch (this.props.dialData[i].type) {\n                    case \"CPD\":\n                        wCPC++\n                        break;\n                    case \"BPD\":\n                        wBPC++\n                        break;\n                    case \"CCD\":\n                        wCCC++\n                        break;\n                    case \"BCD\":\n                        wBCC++\n                        break;\n                    case \"CND\":\n                        wCNC++\n                        break;\n                    case \"BND\":\n                        wBNC++\n                        break;\n                    case \"CSD\":\n                        wCSC++\n                        break;\n                    case \"BSD\":\n                        wBSC++\n                        break;\n                    case \"CRD\":\n                        wCRC++\n                        break;\n                    case \"BRD\":\n                        wBRC++\n                        break;\n                    case \"CTD\":\n                        wCTC++\n                        break;\n                    case \"BTD\":\n                        wBTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseWeeklyAppts = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.props.dialData.length; i++) {\n            // console.log(this.state.appointments[i])\n            if (this.props.dialData[i].scheduled === true) {\n            switch (this.props.dialData[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"container card\" style={{backgroundColor: 'rgba(0,0,0,0.5)', color: 'whitesmoke'}}>\n                <div className=\"row\">\n                    <div className=\"col\" style={{ textAlign: 'center'}}>\n                        <h5>Weekly Stats:</h5>\n                    </div>\n                </div>\n\n                {this.state.showDialChart ?\n                    <div>\n                        <p style={{width: '100%', fontSize: '16px'}}>Breakdown:</p>\n                    \n                        <Pie data={{\n                            labels: [\n                                \"Standard / Cashflow\",\n                                \"Tier-1 / Businessowner\"\n                                ],\n                            datasets: [{\n                                data: [\n                                    this.state.CPDials + this.state.CCDials + this.state.CNDials + this.state.CSDials + this.state.CRDials + this.state.CTDials, \n                                    this.state.BTDials + this.state.BPDials + this.state.BCDials + this.state.BNDials + this.state.BSDials + this.state.BRDials\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\"\n                                ]\n                            }]\n                        }} \n                        options={{\n                            legend: {\n                                display: false\n                            }\n                        }}/></div> : null}\n                <br />\n                \n                {this.state.showDialChart ?\n                    <div>\n                        <p style={{width: '100%', fontSize: '16px'}}>Weekly Dials: {this.props.dialData.length}</p>\n                    \n                        <Pie data={{\n                            labels: [\n                                \"Warm Lead / Prospect\",\n                                \"Delegated Client\",\n                                \"Natural Market\",\n                                \"Vertical / Orphan\",\n                                \"Referral\",\n                                \"Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.state.CPDials + this.state.BPDials,\n                                    this.state.CCDials + this.state.BCDials,\n                                    this.state.CNDials + this.state.BNDials,\n                                    this.state.CSDials + this.state.BSDials,\n                                    this.state.CRDials + this.state.BRDials,\n                                    this.state.CTDials + this.state.BTDials\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\"\n                                ]\n                            }]\n                        }} \n                        options={{\n                            legend: {\n                                display: false\n                            }\n                        }}/></div> : null}\n                <br />\n\n                {this.state.showContactChart ?\n                    <div>\n                        <p style={{width: '100%', fontSize: '16px'}}>Weekly Contacts: \n                        {this.state.CPContacts + this.state.BPContacts +\n                                    this.state.CCContacts + this.state.BCContacts +\n                                    this.state.CNContacts + this.state.BNContacts +\n                                    this.state.CSContacts + this.state.BSContacts +\n                                    this.state.CRContacts + this.state.BRContacts +\n                                    this.state.CTContacts + this.state.BTContacts}</p>\n                       \n                        <Pie data={{\n                            labels: [\n                                \"Warm Lead / Prospect\",\n                                \"Delegated Client\",\n                                \"Natural Market\",\n                                \"Vertical / Orphan\",\n                                \"Referral\",\n                                \"Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.state.CPContacts + this.state.BPContacts,\n                                    this.state.CCContacts + this.state.BCContacts,\n                                    this.state.CNContacts + this.state.BNContacts,\n                                    this.state.CSContacts + this.state.BSContacts,\n                                    this.state.CRContacts + this.state.BRContacts,\n                                    this.state.CTContacts + this.state.BTContacts\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\"\n                                ]\n                            }]\n                        }} \n                        options={{\n                            legend: {\n                                display: false\n                            }\n                        }}/>\n\n                    </div> : null}\n\n\n\n                <br />\n                {this.state.showApptChart ?\n                    <div>\n                        <p style={{width: '100%', fontSize: '16px'}}>Weekly Appointments: \n                        {this.state.CPAppts + this.state.BPAppts +\n                                    this.state.CCAppts + this.state.BCAppts +\n                                    this.state.CNAppts + this.state.BNAppts +\n                                    this.state.CSAppts + this.state.BSAppts +\n                                    this.state.CRAppts + this.state.BRAppts +\n                                    this.state.CTAppts + this.state.BTAppts}</p>\n\n                      \n                        <Pie data={{\n                            labels: [\n                                \"Warm Lead / Prospect\",\n                                \"Delegated Client\",\n                                \"Natural Market\",\n                                \"Vertical / Orphan\",\n                                \"Referral\",\n                                \"Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.state.CPAppts + this.state.BPAppts,\n                                    this.state.CCAppts + this.state.BCAppts,\n                                    this.state.CNAppts + this.state.BNAppts,\n                                    this.state.CSAppts + this.state.BSAppts,\n                                    this.state.CRAppts + this.state.BRAppts,\n                                    this.state.CTAppts + this.state.BTAppts\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\"\n                                ]\n                            }]\n                        }} \n                        options={{\n                            legend: {\n                                display: false\n                            }\n                        }}/>\n                    </div> : null}\n                <hr />\n\n                {/* <h5 style={{ textAlign: 'center' }}><u>Broken down by Area</u></h5> */}\n                <ul>\n\n                </ul>\n            </div>\n\n        )\n    }\n\n}\n\nexport default DialDataSide;","import React, { Component } from \"react\";\n// import { Input } from \"../Form\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\"\nimport \"./style.css\";\n\n\nclass SourceCreator extends Component {\n\n    state = {\n        source: \"\",\n        userData: \"\",\n        showCreateSource: false\n    }\n\n    componentDidMount() {\n\n        // console.log(this.props.sources);\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSuccess = () => {\n        cogoToast.success(\"Added new Source!\")\n        // this.props.rerender();\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(this.state);\n        API.saveSourceToProtege(this.props.userData._id, {\n            source: this.state.source\n        })\n            .then(res => this.handleSuccess())\n            .catch(err => console.log(err));\n    }\n\n    // saveCategory = body => {\n    //     // event.preventDefault()\n\n    //     API.saveCategory(body)\n    //         .then(res => console.log(\"You've saved this category to your DB!\"))\n    //         .catch(err => console.log(err));\n\n    // }\n\n    showCreate = () => {\n        if (this.state.showCreateSource === false) {\n            this.setState({\n                showCreateSource: true\n            })\n        } else {\n            this.setState({\n                showCreateSource: false\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div style={{}}>\n                {/* {this.state.showCreateSource ? */}\n                <div>\n                    {/* <div className=\"input-group\"> */}\n\n                        <div className=\"card-header\">\n                            <p style={{}}><>Create Lead Source:</></p>\n                        </div>\n                        <div className=\"card-body\">\n                            <div style={{ width: '', margin: '0' }}>\n                                <label>Enter Source:</label>\n                                <input value={this.state.source} onChange={this.handleInputChange} className=\"input-group\" name=\"source\" placeholder=\"\" />\n                                <button style={{}} id=\"admin-createCategoryBtn\" className=\"btn-outline-dark btn btn-sm\" onClick={this.handleFormSubmit}>Save</button>\n                            </div>\n                        </div>\n                    {/* </div> */}\n\n\n\n                    {/* List of Existing Sources */}\n                    {/* {this.state.showExistingSources ?\n                        <div>\n                            <br />\n                            <h6 id=\"admin-requestHeadCat\">Existing Sources: </h6>\n                            <div style={{ padding: 15, height: '150px', overflow: 'auto' }}>\n\n                                {this.props.userData.sources.map(source => (\n                                    <p key={source}>>> {source}<span><button id=\"delete-source\" className=\"btn-outline-danger btn btn-sm\" style={{ marginRight: '0px', float: 'right', textAlign: 'center' }}>X</button></span></p>\n                                ))}\n                            </div>\n                        </div>\n                        : null} */}\n                </div>\n                {/* : null} */}\n            </div>\n        )\n    }\n\n}\n\nexport default SourceCreator\n","import React, { Component } from \"react\";\n// import { Input } from \"../Form\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\"\nimport \"./style.css\";\n\n\nclass TargetMarketCreator extends Component {\n\n    state = {\n        targetMarket: \"\",\n        userData: \"\",\n        showTarget: false\n    }\n\n    componentDidMount() {\n\n        // console.log(this.props.sources);\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSuccess = () => {\n        cogoToast.success(\"Added new Target Market!\")\n        // this.props.rerender();\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(this.state);\n        API.saveTargetMktToProtege(this.props.userData._id, {\n            targetMarket: this.state.targetMarket\n        })\n            .then(res => this.handleSuccess())\n            .catch(err => console.log(err));\n    }\n\n    // saveCategory = body => {\n    //     // event.preventDefault()\n\n    //     API.saveCategory(body)\n    //         .then(res => console.log(\"You've saved this category to your DB!\"))\n    //         .catch(err => console.log(err));\n\n    // }\n\n    showTargetCreate = () => {\n        if (this.state.showTarget === false) {\n            this.setState({\n                showTarget: true\n            })\n        } else {\n            this.setState({\n                showTarget: false\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{}}>\n                {/* <h4 id=\"admin-requestHeadCat\" style={{ color: 'whitesmoke' }}>Create Target Market<span><button className=\"btn btn-sm btn-outline-light\" onClick={this.showTargetCreate} >Show</button></span></h4>\n                {this.state.showTarget ? */}\n                <div className=\"card-header\">\n\n                    <p style={{}}>Create Target Industries</p>\n\n                </div>\n\n                <div className=\"card-body\">\n                        <div style={{margin: 0}}>\n                            <label>Enter Industry:</label>\n                            <input value={this.state.targetMarket} onChange={this.handleInputChange} className=\"input-group\" name=\"targetMarket\" placeholder=\"\" />\n                            <button id=\"admin-createCategoryBtn\" className=\"btn btn-sm btn-outline-dark\" onClick={this.handleFormSubmit}>Save</button>\n                        </div>\n       \n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default TargetMarketCreator;\n","import React, { Component } from 'react';\n// import API from \"../../utils/API\";\nimport { Bar, Pie } from 'react-chartjs-2';\nimport \"./style.css\"\n\nclass MainDataViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            numContacts: 0,\n            numScheduled: 0,\n            date: \"\",\n            parsedDials: \"\",\n            showDialChart: false,\n            showContactChart: false,\n            showApptChart: false,\n            showCashflowDials: false,\n            showCashflowContacts: false,\n            showCashflowAppts: false,\n            showBusinessDials: false,\n            showBusinessContacts: false,\n            showBusinessAppts: false,\n            showProspectPerformance: false,\n            showClientPerformance: false,\n            showNaturalPerformance: false,\n            showSuspectPerformance: false,\n            showReferralPerformance: false,\n            showTargetPerformance: false,\n            leadSource: \"none\",\n            targetMarket: \"none\",\n            sourceDialData: \"\",\n            sourceContactData: \"\",\n            sourceApptData: \"\",\n            showSourcePerformance: false,\n            showSelectedTargetPerformance: false\n        }\n    }\n\n    componentDidMount = () => {\n        // setTimeout(() => {\n        //     this.getContacts(this.props.userID)\n        // }, 1300)\n        // this.getContacts()\n\n    }\n\n\n    // getContacts = (id) => {\n    //     // var userID = this.props.userID\n\n    //     API.getContacts(id)\n    //         .then(res => {\n    //             console.log(res.data.length)\n    //             this.setState({\n    //                 numContacts: res.data.length\n    //             })\n    //         })\n    // }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    getNumContacts = () => {\n        var localNumContacts = 0\n        for (var i = 0; i < this.props.dialData.length; i++) {\n            if (this.props.dialData[i].contact === true) {\n                localNumContacts++\n            }\n        }\n\n        console.log(localNumContacts)\n        this.updateContacts(localNumContacts)\n    }\n\n\n\n    updateContacts = num => {\n        this.setState({\n            numContacts: num\n        })\n    }\n\n\n    viewDialChart = () => {\n        if (this.state.showDialChart === true) {\n            this.setState({\n                showDialChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: true,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewContactChart = () => {\n        if (this.state.showContactChart === true) {\n            this.setState({\n                showContactChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: true,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewApptChart = () => {\n        if (this.state.showApptChart === true) {\n            this.setState({\n                showApptChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: true,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFDialChart = () => {\n        if (this.state.showCashflowDials === true) {\n            this.setState({\n                showCashflowDials: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: true,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFContactChart = () => {\n        if (this.state.showCashflowContacts === true) {\n            this.setState({\n                showCashflowContacts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: true,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFApptChart = () => {\n        if (this.state.showCashflowAppts === true) {\n            this.setState({\n                showCashflowAppts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: true,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBODialChart = () => {\n        if (this.state.showBusinessDials === true) {\n            this.setState({\n                showBusinessDials: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: true,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBOContactChart = () => {\n        if (this.state.showBusinessContacts === true) {\n            this.setState({\n                showBusinessContacts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: true,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBOApptChart = () => {\n        if (this.state.showBusinessAppts === true) {\n            this.setState({\n                showBusinessAppts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: true,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewProspectPerformance = () => {\n        if (this.state.showProspectPerformance === true) {\n            this.setState({\n                showProspectPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: true,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewClientPerformance = () => {\n        if (this.state.showClientPerformance === true) {\n            this.setState({\n                showClientPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: true,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewNaturalPerformance = () => {\n        if (this.state.showNaturalPerformance === true) {\n            this.setState({\n                showNaturalPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: true,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSuspectPerformance = () => {\n        if (this.state.showSuspectPerformance === true) {\n            this.setState({\n                showSuspectPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: true,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewReferralPerformance = () => {\n        if (this.state.showReferralPerformance === true) {\n            this.setState({\n                showReferralPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: true,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewTargetPerformance = () => {\n        if (this.state.showTargetPerformance === true) {\n            this.setState({\n                showTargetPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: true,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSourcePerformance = () => {\n        if (this.state.showSourcePerformance === true) {\n            this.setState({\n                showSourcePerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: true,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSelectedTargetPerformance = () => {\n        if (this.state.showSelectedTargetPerformance === true) {\n            this.setState({\n                showSelectedTargetPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: true\n            })\n        }\n    }\n\n    gatherSourceData = (event) => {\n        event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.leadSource)\n        // var parsedDials = []\n        var parsedSourceData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.props.dialData.length; i++) {\n            if (this.props.dialData[i].source === this.state.leadSource) {\n                parsedSourceData.parsedDials.push(this.props.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.props.contactData.length; j++) {\n            if (this.props.contactData[j].source === this.state.leadSource) {\n                parsedSourceData.parsedContacts.push(this.props.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.props.apptData.length; k++) {\n            if (this.props.apptData[k].source === this.state.leadSource) {\n                parsedSourceData.parsedAppts.push(this.props.apptData[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                sourceDialData: parsedSourceData.parsedDials,\n                sourceContactData: parsedSourceData.parsedContacts,\n                sourceApptData: parsedSourceData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseSourceAppts()\n                this.parseSourceContacts()\n                this.parseSourceDials()\n\n                setTimeout(() => { this.viewSourcePerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    parseSourceDials = () => {\n        console.log(\"Parsing: \" + this.state.sourceDialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        var SDials = 0;\n        for (var i = 0; i < this.state.sourceDialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.sourceDialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    SDials++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    SDials++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    SDials++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    SDials++\n                    break;\n                case \"CND\":\n                    CND++\n                    SDials++\n                    break;\n                case \"BND\":\n                    BND++\n                    SDials++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    SDials++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    SDials++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    SDials++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    SDials++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    SDials++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    SDials++\n                    break;\n                default:\n                    SDials++\n                    break;\n            }\n        }\n        this.setState({\n            SCPDials: CPD,\n            SBPDials: BPD,\n            SCCDials: CCD,\n            SBCDials: BCD,\n            SCNDials: CND,\n            SBNDials: BND,\n            SCSDials: CSD,\n            SBSDials: BSD,\n            SCRDials: CRD,\n            SBRDials: BRD,\n            SCTDials: CTD,\n            SBTDials: BTD,\n            SourceDials: SDials\n        })\n    }\n\n    parseSourceContacts = () => {\n        console.log(\"Parsing: \" + this.state.sourceContactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        var SContacts = 0;\n        for (var i = 0; i < this.state.sourceContactData.length; i++) {\n            switch (this.state.sourceContactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    SContacts++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    SContacts++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    SContacts++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    SContacts++\n                    break;\n                case \"CND\":\n                    CNC++\n                    SContacts++\n                    break;\n                case \"BND\":\n                    BNC++\n                    SContacts++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    SContacts++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    SContacts++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    SContacts++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    SContacts++\n                    break;\n                case \"CTD\":\n                    SContacts++\n                    CTC++\n                    break;\n                case \"BTD\":\n                    SContacts++\n                    BTC++\n                    break;\n                default:\n                    SContacts++\n                    break;\n            }\n        }\n        this.setState({\n            SCPContacts: CPC,\n            SBPContacts: BPC,\n            SCCContacts: CCC,\n            SBCContacts: BCC,\n            SCNContacts: CNC,\n            SBNContacts: BNC,\n            SCSContacts: CSC,\n            SBSContacts: BSC,\n            SCRContacts: CRC,\n            SBRContacts: BRC,\n            SCTContacts: CTC,\n            SBTContacts: BTC,\n            SourceContacts: SContacts\n        })\n    }\n\n    parseSourceAppts = () => {\n        console.log(\"Parsing: \" + this.state.sourceApptData)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        var SAppts = 0;\n        for (var i = 0; i < this.state.sourceApptData.length; i++) {\n            console.log(this.state.sourceApptData[i])\n            switch (this.state.sourceApptData[i].type) {\n                case \"CPD\":\n                    CPA++\n                    SAppts++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    SAppts++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    SAppts++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    SAppts++\n                    break;\n                case \"CND\":\n                    CNA++\n                    SAppts++\n                    break;\n                case \"BND\":\n                    BNA++\n                    SAppts++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    SAppts++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    SAppts++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    SAppts++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    SAppts++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    SAppts++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    SAppts++\n                    break;\n                default:\n                    SAppts++\n                    break;\n            }\n        }\n        this.setState({\n            SCPAppts: CPA,\n            SBPAppts: BPA,\n            SCCAppts: CCA,\n            SBCAppts: BCA,\n            SCNAppts: CNA,\n            SBNAppts: BNA,\n            SCSAppts: CSA,\n            SBSAppts: BSA,\n            SCRAppts: CRA,\n            SBRAppts: BRA,\n            SCTAppts: CTA,\n            SBTAppts: BTA,\n            SourceAppts: SAppts\n        })\n    }\n\n\n\n    gatherTargetData = (event) => {\n        event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.targetMarket)\n        // var parsedDials = []\n        var parsedTargetData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.props.dialData.length; i++) {\n            if (this.props.dialData[i].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedDials.push(this.props.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.props.contactData.length; j++) {\n            if (this.props.contactData[j].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedContacts.push(this.props.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.props.apptData.length; k++) {\n            if (this.props.apptData[k].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedAppts.push(this.props.apptData[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                targetDialData: parsedTargetData.parsedDials,\n                targetContactData: parsedTargetData.parsedContacts,\n                targetApptData: parsedTargetData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseTargetAppts()\n                this.parseTargetContacts()\n                this.parseTargetDials()\n\n                setTimeout(() => { this.viewSelectedTargetPerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    parseTargetDials = () => {\n        console.log(\"Parsing: \" + this.state.targetDialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        var TDials = 0;\n        for (var i = 0; i < this.state.targetDialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.targetDialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    TDials++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    TDials++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    TDials++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    TDials++\n                    break;\n                case \"CND\":\n                    CND++\n                    TDials++\n                    break;\n                case \"BND\":\n                    BND++\n                    TDials++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    TDials++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    TDials++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    TDials++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    TDials++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    TDials++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    TDials++\n                    break;\n                default:\n                    TDials++\n                    break;\n            }\n        }\n        this.setState({\n            TCPDials: CPD,\n            TBPDials: BPD,\n            TCCDials: CCD,\n            TBCDials: BCD,\n            TCNDials: CND,\n            TBNDials: BND,\n            TCSDials: CSD,\n            TBSDials: BSD,\n            TCRDials: CRD,\n            TBRDials: BRD,\n            TCTDials: CTD,\n            TBTDials: BTD,\n            TargetDials: TDials\n        })\n    }\n\n    parseTargetContacts = () => {\n        console.log(\"Parsing: \" + this.state.targetContactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        var TContacts = 0;\n        for (var i = 0; i < this.state.targetContactData.length; i++) {\n            switch (this.state.targetContactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    TContacts++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    TContacts++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    TContacts++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    TContacts++\n                    break;\n                case \"CND\":\n                    CNC++\n                    TContacts++\n                    break;\n                case \"BND\":\n                    BNC++\n                    TContacts++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    TContacts++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    TContacts++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    TContacts++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    TContacts++\n                    break;\n                case \"CTD\":\n                    TContacts++\n                    CTC++\n                    break;\n                case \"BTD\":\n                    TContacts++\n                    BTC++\n                    break;\n                default:\n                    TContacts++\n                    break;\n            }\n        }\n        this.setState({\n            TCPContacts: CPC,\n            TBPContacts: BPC,\n            TCCContacts: CCC,\n            TBCContacts: BCC,\n            TCNContacts: CNC,\n            TBNContacts: BNC,\n            TCSContacts: CSC,\n            TBSContacts: BSC,\n            TCRContacts: CRC,\n            TBRContacts: BRC,\n            TCTContacts: CTC,\n            TBTContacts: BTC,\n            TargetContacts: TContacts\n        })\n    }\n\n\n    parseTargetAppts = () => {\n        console.log(\"Parsing: \" + this.state.targetApptData)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        var TAppts = 0;\n        for (var i = 0; i < this.state.targetApptData.length; i++) {\n            console.log(this.state.targetApptData[i])\n            switch (this.state.targetApptData[i].type) {\n                case \"CPD\":\n                    CPA++\n                    TAppts++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    TAppts++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    TAppts++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    TAppts++\n                    break;\n                case \"CND\":\n                    CNA++\n                    TAppts++\n                    break;\n                case \"BND\":\n                    BNA++\n                    TAppts++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    TAppts++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    TAppts++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    TAppts++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    TAppts++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    TAppts++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    TAppts++\n                    break;\n                default:\n                    TAppts++\n                    break;\n            }\n        }\n        this.setState({\n            TCPAppts: CPA,\n            TBPAppts: BPA,\n            TCCAppts: CCA,\n            TBCAppts: BCA,\n            TCNAppts: CNA,\n            TBNAppts: BNA,\n            TCSAppts: CSA,\n            TBSAppts: BSA,\n            TCRAppts: CRA,\n            TBRAppts: BRA,\n            TCTAppts: CTA,\n            TBTAppts: BTA,\n            TargetAppts: TAppts\n        })\n    }\n\n    showDataOption = (e) => {\n        e.preventDefault()\n        switch (this.state.dataOption) {\n            case \"genDials\":\n                this.viewDialChart()\n                break;\n            case \"genContacts\":\n                this.viewContactChart()\n                break;\n            case \"genAppts\":\n                this.viewApptChart()\n                break;\n            case \"cfDials\":\n                this.viewCFDialChart()\n                break;\n            case \"cfContacts\":\n                this.viewCFContactChart()\n                break;\n            case \"cfAppts\":\n                this.viewCFApptChart()\n                break;\n            case \"boDials\":\n                this.viewBODialChart()\n                break;\n            case \"boContacts\":\n                this.viewBOContactChart()\n                break;\n            case \"boAppts\":\n                this.viewBOApptChart()\n                break;\n            default:\n                console.log(\"No option selected\")\n                break;\n        }\n    }\n\n    showCategoryOption = (e) => {\n        e.preventDefault()\n\n        switch (this.state.categoryOption) {\n            case \"pData\":\n                this.viewProspectPerformance()\n                break;\n            case \"cData\":\n                this.viewClientPerformance()\n                break;\n            case \"sData\":\n                this.viewSuspectPerformance()\n                break;\n            case \"nData\":\n                this.viewNaturalPerformance()\n                break;\n            case \"rData\":\n                this.viewReferralPerformance()\n                break;\n            case \"tData\":\n                this.viewTargetPerformance()\n                break;\n            default:\n                console.log(\"No proper selection made\")\n                break;\n        }\n    }\n\n\n    render() {\n        return (\n            // <div className=\"card\" id=\"main-analytics\">\n\n            <div className=\"card bg-light\" style={{ color: 'black', borderRadius: '30px' }}>\n                <div className=\"card-header\">\n                    <h1 style={{ textAlign: 'center', color: 'black' }}>A N A L Y T I C S</h1>\n                    <hr />\n                    {/* <button style={{ width: '30%', float: 'left' }} className=\"btn btn-success\" onClick={this.viewDialChart}>Dials: {this.props.dialData.length}</button>\n                <button style={{ width: '30%', float: 'left' }} className=\"btn btn-success\" onClick={this.viewContactChart}>Contacts: {this.props.contactData.length}</button>\n                <button style={{ width: '30%', float: 'left' }} className=\"btn btn-success\" onClick={this.viewApptChart}>Appointments: {this.props.apptData.length}</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewCFDialChart}>Cashflow Dials Only</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewCFContactChart}>Cashflow Contacts Only</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewCFApptChart}>Cashflow Appts Only</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewBODialChart}>Businessowner Dials Only</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewBOContactChart}>Businessowner Appts Only</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewBOApptChart}>Businessowner Appts Only</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewProspectPerformance}>Prospect Call Performance</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewClientPerformance}>Existing Client Call Performance</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewNaturalPerformance}>Natural Market Call Performance</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewSuspectPerformance}>Suspect Call Performance</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewReferralPerformance}>Referral Call Performance</button>\n                <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewTargetPerformance}>Target Market Call Performance</button> */}\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <form>\n                                <div style={{ textAlign: 'center' }}>\n                                    <p style={{ textAlign: 'center' }}>View Types of Calls Made</p>\n                                    <select id=\"sourceDropMenu\" className=\"\" value={this.state.dataOption} onChange={this.handleInputChange} name=\"dataOption\">\n                                        <option value={\"none\"}>------------------------------------------------------------</option>\n                                        <option value={\"genDials\"}>Dials</option>\n                                        <option value={\"genContacts\"}>Contacts</option>\n                                        <option value={\"genAppts\"}>Appointments</option>\n                                        <option value={\"cfDials\"}>Standard Dials Data</option>\n                                        <option value={\"cfContacts\"}>Standard Contact Data</option>\n                                        <option value={\"cfAppts\"}>Standard Appointment Data</option>\n                                        <option value={\"boDials\"}>Tier-1 Dial Data</option>\n                                        <option value={\"boContacts\"}>Tier-1 Contact Data</option>\n                                        <option value={\"boAppts\"}>Tier-1 Appointment Data</option>\n                                    </select>\n                                    <button className=\"btn-outline-dark btn-sm btn\" onClick={this.showDataOption}>Generate</button>\n\n                                </div>\n\n                            </form>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <form>\n                                <div style={{ textAlign: 'center' }}>\n                                    <p style={{ textAlign: 'center' }}>View Performance by Type of Call</p>\n                                    <select id=\"sourceDropMenu\" className=\"\" value={this.state.categoryOption} onChange={this.handleInputChange} name=\"categoryOption\">\n                                        <option value={\"none\"}>------------------------------------------------------------</option>\n                                        <option value={\"pData\"}>Warm Leads/ Prospects</option>\n                                        <option value={\"cData\"}>Delegated Clients</option>\n                                        <option value={\"nData\"}>Natural Market</option>\n                                        <option value={\"sData\"}>Verticals / Orphans</option>\n                                        <option value={\"rData\"}>New Referrals</option>\n                                        <option value={\"tData\"}>Targeted Industries</option>\n                                    </select>\n                                    <button className=\"btn-outline-dark btn-sm btn\" onClick={this.showCategoryOption}>Generate</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    {/* Target Market and Lead Source Selectors */}\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <form>\n                                {this.props.userData.sources ?\n                                    <div style={{ textAlign: 'center' }}>\n                                        <p style={{ textAlign: 'center' }}> View Performance by Referral Source</p>\n                                        <select id=\"sourceDropMenu\" className=\"\" value={this.state.leadSource} onChange={this.handleInputChange} name=\"leadSource\">\n                                            <option value={\"none\"}>------------------------------------------------------------</option>\n                                            {this.props.userData.sources.map(source => (\n                                                <option key={source} value={source}>{source}</option>\n                                            ))}\n                                        </select>\n                                        <button className=\"btn-outline-dark btn-sm btn\" onClick={this.gatherSourceData}>Generate</button>\n                                    </div>\n                                    : null}\n                            </form>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <form>\n                                {this.props.userData.targetMarkets ?\n                                    <div style={{ textAlign: 'center' }}>\n                                        <p style={{ textAlign: 'center' }}> View Performance by Target Industry</p>\n                                        <select id=\"sourceDropMenu\" className=\"\" value={this.state.targetMarket} onChange={this.handleInputChange} name=\"targetMarket\">\n                                            <option value={\"none\"}>------------------------------------------------------------</option>\n                                            {this.props.userData.targetMarkets.map(target => (\n                                                <option key={target} value={target}>{target}</option>\n                                            ))}\n                                        </select> <button className=\"btn-outline-dark btn-sm btn\" onClick={this.gatherTargetData}>Generate</button>\n                                    </div> : null}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                {\n                    this.state.showDialChart ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Dial Data</u></h3>\n                            <p style={{ textAlign: 'center' }}>Total Dials: {\n                                this.props.CPDials + this.props.BPDials +\n                                this.props.CCDials + this.props.BCDials +\n                                this.props.CNDials + this.props.BNDials +\n                                this.props.CSDials + this.props.BSDials +\n                                this.props.CRDials + this.props.BRDials +\n                                this.props.CTDials + this.props.BTDials\n                            }</p>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%', margin: 0 }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Dials\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.CPDials + this.props.BPDials,\n                                            this.props.CCDials + this.props.BCDials,\n                                            this.props.CNDials + this.props.BNDials,\n                                            this.props.CSDials + this.props.BSDials,\n                                            this.props.CRDials + this.props.BRDials,\n                                            this.props.CTDials + this.props.BTDials],\n                                    }]\n                                }} />\n                            </div>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%', margin: 0 }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Warm Lead/Prospect\",\n                                        \"Delegated Client\",\n                                        \"Natural Market\",\n                                        \"Vertical / Orphan\",\n                                        \"New Referral\",\n                                        \"Targeted Industry\"],\n                                    datasets: [{\n                                        data: [\n                                            this.props.CPDials + this.props.BPDials,\n                                            this.props.CCDials + this.props.BCDials,\n                                            this.props.CNDials + this.props.BNDials,\n                                            this.props.CSDials + this.props.BSDials,\n                                            this.props.CRDials + this.props.BRDials,\n                                            this.props.CTDials + this.props.BTDials\n                                        ],\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div>\n                        </div>\n                        : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n\n\n                {\n                    this.state.showContactChart ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Contact Data: </u></h3>\n                            <p style={{ textAlign: 'center' }}>Total Contacts: {\n                                 this.props.CPContacts + this.props.BPContacts +\n                                 this.props.CCContacts + this.props.BCContacts +\n                                 this.props.CNContacts + this.props.BNContacts +\n                                 this.props.CSContacts + this.props.BSContacts +\n                                 this.props.CRContacts + this.props.BRContacts +\n                                 this.props.CTContacts + this.props.BTContacts\n                            }</p>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Contacts\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.CPContacts + this.props.BPContacts,\n                                            this.props.CCContacts + this.props.BCContacts,\n                                            this.props.CNContacts + this.props.BNContacts,\n                                            this.props.CSContacts + this.props.BSContacts,\n                                            this.props.CRContacts + this.props.BRContacts,\n                                            this.props.CTContacts + this.props.BTContacts],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Warm Lead/Prospect\",\n                                        \"Delegated Client\",\n                                        \"Natural Market\",\n                                        \"Vertical / Orphan\",\n                                        \"New Referral\",\n                                        \"Targeted Industry\"],\n                                    datasets: [{\n                                        data: [\n                                            this.props.CPContacts + this.props.BPContacts,\n                                            this.props.CCContacts + this.props.BCContacts,\n                                            this.props.CNContacts + this.props.BNContacts,\n                                            this.props.CSContacts + this.props.BSContacts,\n                                            this.props.CRContacts + this.props.BRContacts,\n                                            this.props.CTContacts + this.props.BTContacts\n                                        ],\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div>\n\n                        </div> : null\n                }\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                {\n                    this.state.showApptChart ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Appointment Data:</u></h3>\n                            <p style={{textAlign: 'center'}}>Total Appointments: {this.props.CPAppts + this.props.BPAppts +\n                                            this.props.CCAppts + this.props.BCAppts +\n                                            this.props.CNAppts + this.props.BNAppts +\n                                            this.props.CSAppts + this.props.BSAppts +\n                                            this.props.CRAppts + this.props.BRAppts +\n                                            this.props.CTAppts + this.props.BTAppts}</p>\n\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Appointments\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.CPAppts + this.props.BPAppts,\n                                            this.props.CCAppts + this.props.BCAppts,\n                                            this.props.CNAppts + this.props.BNAppts,\n                                            this.props.CSAppts + this.props.BSAppts,\n                                            this.props.CRAppts + this.props.BRAppts,\n                                            this.props.CTAppts + this.props.BTAppts],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Warm Lead/Prospect\",\n                                        \"Delegated Client\",\n                                        \"Natural Market\",\n                                        \"Vertical / Orphan\",\n                                        \"New Referral\",\n                                        \"Targeted Industry\"],\n                                    datasets: [{\n                                        data: [\n                                            this.props.CPAppts + this.props.BPAppts,\n                                            this.props.CCAppts + this.props.BCAppts,\n                                            this.props.CNAppts + this.props.BNAppts,\n                                            this.props.CSAppts + this.props.BSAppts,\n                                            this.props.CRAppts + this.props.BRAppts,\n                                            this.props.CTAppts + this.props.BTAppts\n                                        ],\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /></div>\n                        </div> : null\n                }\n\n                {/* ///////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                {\n                    this.state.showCashflowDials ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Cashflow Dials Data:</u></h3>\n\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Dials\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.CPDials,\n                                            this.props.CCDials,\n                                            this.props.CNDials,\n                                            this.props.CSDials,\n                                            this.props.CRDials,\n                                            this.props.CTDials\n                                        ],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Cashflow Prospect\",\n                                        \"Cashflow Client\",\n                                        \"Cashflow Natural Market\",\n                                        \"Cashflow Suspect\",\n                                        \"Cashflow Referral\",\n                                        \"Cashflow Target Market\",\n                                    ],\n                                    datasets: [{\n                                        data: [\n                                            this.props.CPDials,\n                                            this.props.CCDials,\n                                            this.props.CNDials,\n                                            this.props.CSDials,\n                                            this.props.CRDials,\n                                            this.props.CTDials\n                                        ],\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#443959\",\n                                            \"#f99b17\",\n                                            \"#a2e505\",\n                                            \"#c9917f\",\n                                            \"#8d044b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div> </div> : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                {\n                    this.state.showCashflowContacts ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Contact Data: </u></h3>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Contacts\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.CPContacts,\n                                            this.props.CCContacts,\n                                            this.props.CNContacts,\n                                            this.props.CSContacts,\n                                            this.props.CRContacts,\n                                            this.props.CTContacts\n                                        ],\n                                    }]\n                                }} />\n                            </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Cashflow Prospect\",\n                                        \"Cashflow Client\",\n                                        \"Cashflow Natural Market\",\n                                        \"Cashflow Suspect\",\n                                        \"Cashflow Referral\",\n                                        \"Cashflow Target Market\",\n                                    ],\n                                    datasets: [{\n                                        data: [\n                                            this.props.CPContacts,\n                                            this.props.CCContacts,\n                                            this.props.CNContacts,\n                                            this.props.CSContacts,\n                                            this.props.CRContacts,\n                                            this.props.CTContacts\n                                        ],\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#443959\",\n                                            \"#f99b17\",\n                                            \"#a2e505\",\n                                            \"#c9917f\",\n                                            \"#8d044b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div>\n\n                        </div> : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                <br />\n                {\n                    this.state.showCashflowAppts ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Appointment Data:</u></h3>\n\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Appointments\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.CPAppts,\n                                            this.props.CCAppts,\n                                            this.props.CNAppts,\n                                            this.props.CSAppts,\n                                            this.props.CRAppts,\n                                            this.props.CTAppts\n                                        ],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Cashflow Prospect\",\n                                        \"Cashflow Client\",\n                                        \"Cashflow Natural Market\",\n                                        \"Cashflow Suspect\",\n                                        \"Cashflow Referral\",\n                                        \"Cashflow Target Market\",\n                                    ],\n                                    datasets: [{\n                                        data: [\n                                            this.props.CPAppts,\n                                            this.props.CCAppts,\n                                            this.props.CNAppts,\n                                            this.props.CSAppts,\n                                            this.props.CRAppts,\n                                            this.props.CTAppts\n                                        ],\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#443959\",\n                                            \"#f99b17\",\n                                            \"#a2e505\",\n                                            \"#c9917f\",\n                                            \"#8d044b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div>\n                        </div> : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showBusinessDials ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Dial Data:</u></h3>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Dials\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.BPDials,\n                                            this.props.BCDials,\n                                            this.props.BNDials,\n                                            this.props.BSDials,\n                                            this.props.BRDials,\n                                            this.props.BTDials],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Business Prospect\",\n                                        \"Business Client\",\n                                        \"Business Natural Market\",\n                                        \"Business Suspect\",\n                                        \"Business Referral\",\n                                        \"Business Target Market\"],\n                                    datasets: [{\n                                        data: [\n                                            this.props.BPDials,\n                                            this.props.BCDials,\n                                            this.props.BNDials,\n                                            this.props.BSDials,\n                                            this.props.BRDials,\n                                            this.props.BTDials\n                                        ],\n                                        backgroundColor: [\n                                            \"#d2d93b\",\n                                            \"#dd4417\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div> </div> : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showBusinessContacts ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Contact Data:</u></h3>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Contacts\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.BPContacts,\n                                            this.props.BCContacts,\n                                            this.props.BNContacts,\n                                            this.props.BSContacts,\n                                            this.props.BRContacts,\n                                            this.props.BTContacts],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Business Prospect\",\n                                        \"Business Client\",\n                                        \"Business Natural Market\",\n                                        \"Business Suspect\",\n                                        \"Business Referral\",\n                                        \"Business Target Market\"],\n                                    datasets: [{\n                                        data: [\n                                            this.props.BPContacts,\n                                            this.props.BCContacts,\n                                            this.props.BNContacts,\n                                            this.props.BSContacts,\n                                            this.props.BRContacts,\n                                            this.props.BTContacts\n                                        ],\n                                        backgroundColor: [\n                                            \"#d2d93b\",\n                                            \"#dd4417\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div> </div> : null\n                }\n\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showBusinessAppts ?\n                        <div style={{ textAlign: 'center', color: 'black' }}>\n                            <h3><u>Appointment Data:</u></h3>\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Bar data={{\n                                    labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                    datasets: [{\n                                        label: \"Appointments\",\n                                        backgroundColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        borderColor: [\n                                            \"#3ac178\",\n                                            \"#f99b17\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ],\n                                        data: [\n                                            this.props.BPAppts,\n                                            this.props.BCAppts,\n                                            this.props.BNAppts,\n                                            this.props.BSAppts,\n                                            this.props.BRAppts,\n                                            this.props.BTAppts],\n                                    }]\n                                }} /> </div>\n                            <br />\n                            <div style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <Pie data={{\n                                    labels: [\n                                        \"Business Prospect\",\n                                        \"Business Client\",\n                                        \"Business Natural Market\",\n                                        \"Business Suspect\",\n                                        \"Business Referral\",\n                                        \"Business Target Market\"],\n                                    datasets: [{\n                                        data: [\n                                            this.props.BPAppts,\n                                            this.props.BCAppts,\n                                            this.props.BNAppts,\n                                            this.props.BSAppts,\n                                            this.props.BRAppts,\n                                            this.props.BTAppts\n                                        ],\n                                        backgroundColor: [\n                                            \"#d2d93b\",\n                                            \"#dd4417\",\n                                            \"#5191d9\",\n                                            \"#483d28\",\n                                            \"#51aef7\",\n                                            \"#25517b\"\n                                        ]\n                                    }]\n                                }} options={{\n                                    legend: {\n                                        position: 'left',\n                                        labels: {\n                                            boxWidth: 10\n                                        }\n                                    }\n                                }} /> </div> </div> : null\n                }\n\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showProspectPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <h3>Prospect Calling Performance:</h3>\n                            <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Contact Ratio</h6>\n                                    <h6>Total Prospect Dials: {this.props.CPDials + this.props.BPDials}</h6>\n                                    <h6>Contact Ratio: {Math.round((this.props.CPContacts + this.props.BPContacts) / (this.props.CPDials + this.props.BPDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Prospect Dials without contacts\",\n                                            \"Prospect Contacts\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CPDials + this.props.BPDials - this.props.CPContacts - this.props.BPContacts,\n                                                this.props.CPContacts + this.props.BPContacts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Contacts to Appointment Ratio</h6>\n                                    <h6>Total Prospect Contacts: {this.props.CPContacts + this.props.BPContacts}</h6>\n                                    <h6>Appointment per Contact Ratio: {Math.round((this.props.CPAppts + this.props.BPAppts) / (this.props.CPContacts + this.props.BPContacts) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Prospect Contacts without appointments\",\n                                            \"Prospect Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CPContacts + this.props.BPContacts - this.props.CPAppts - this.props.BPAppts,\n                                                this.props.CPAppts + this.props.BPAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Appointment Ratio</h6>\n                                    <h6>Total Prospect Dials: {this.props.CPDials + this.props.BPDials}</h6>\n                                    <h6>Appointment per Dial Ratio: {Math.round((this.props.CPAppts + this.props.BPAppts) / (this.props.CPDials + this.props.BPDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Prospect Dials without appointments\",\n                                            \"Prospect Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CPDials + this.props.BPDials - this.props.CPAppts - this.props.BPAppts,\n                                                this.props.CPAppts + this.props.BPAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showClientPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <h3>Client Calling Performance:</h3>\n                            <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Contact Ratio</h6>\n                                    <h6>Total Client Dials: {this.props.CCDials + this.props.BCDials}</h6>\n                                    <h6>Contact Ratio: {Math.round((this.props.CCContacts + this.props.BCContacts) / (this.props.CCDials + this.props.BCDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Client Dials without contacts\",\n                                            \"Client Contacts\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CCDials + this.props.BCDials - this.props.CCContacts - this.props.BCContacts,\n                                                this.props.CCContacts + this.props.BCContacts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Contacts to Appointment Ratio</h6>\n                                    <h6>Total Client Contacts: {this.props.CCContacts + this.props.BCContacts}</h6>\n                                    <h6>Appointment per Contact Ratio: {Math.round((this.props.CCAppts + this.props.BCAppts) / (this.props.CCContacts + this.props.BCContacts) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Client Contacts without appointment\",\n                                            \"Client Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CCContacts + this.props.BCContacts - this.props.CCAppts - this.props.BCAppts,\n                                                this.props.CCAppts + this.props.BCAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Appointment Ratio</h6>\n                                    <h6>Total Client Dials: {this.props.CCDials + this.props.BCDials}</h6>\n                                    <h6>Appointment per Dial Ratio: {Math.round((this.props.CCAppts + this.props.BCAppts) / (this.props.CCDials + this.props.BCDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Client Dials without appointment\",\n                                            \"Client Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CCDials + this.props.BCDials - this.props.CCAppts - this.props.BCAppts,\n                                                this.props.CCAppts + this.props.BCAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showNaturalPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <h3>Natural Market Calling Performance:</h3>\n                            <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Contact Ratio</h6>\n                                    <h6>Total Natural Market Dials: {this.props.CNDials + this.props.BNDials}</h6>\n                                    <h6>Contact Ratio: {Math.round((this.props.CNContacts + this.props.BNContacts) / (this.props.CNDials + this.props.BNDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Natural Market Dials without contact\",\n                                            \"Natural Market Contacts\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CNDials + this.props.BNDials - this.props.CNContacts - this.props.BNContacts,\n                                                this.props.CNContacts + this.props.BNContacts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Contacts to Appointment Ratio</h6>\n                                    <h6>Total Natural Market Contacts: {this.props.CNContacts + this.props.BNContacts}</h6>\n                                    <h6>Appointment per Contact Ratio: {Math.round((this.props.CNAppts + this.props.BNAppts) / (this.props.CNContacts + this.props.BNContacts) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Natural Market Contacts without appointment\",\n                                            \"Natural Market Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CNContacts + this.props.BNContacts - this.props.CNAppts - this.props.BNAppts,\n                                                this.props.CNAppts + this.props.BNAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Appointment Ratio</h6>\n                                    <h6>Total Natural Market Dials: {this.props.CNDials + this.props.BNDials}</h6>\n                                    <h6>Appointment per Dial Ratio: {Math.round((this.props.CNAppts + this.props.BNAppts) / (this.props.CNDials + this.props.BNDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Natural Market Dials without appointment\",\n                                            \"Natuarl Market Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CNDials + this.props.BNDials - this.props.CNAppts - this.props.BNAppts,\n                                                this.props.CNAppts + this.props.BNAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showSuspectPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <h3>Suspect Calling Performance:</h3>\n                            <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Contact Ratio</h6>\n                                    <h6>Total Suspect Dials: {this.props.CSDials + this.props.BSDials}</h6>\n                                    <h6>Contact Ratio: {Math.round((this.props.CSContacts + this.props.BSContacts) / (this.props.CSDials + this.props.BSDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Suspect Dials without contact\",\n                                            \"Suspect Contacts\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CSDials + this.props.BSDials - this.props.CSContacts - this.props.BSContacts,\n                                                this.props.CSContacts + this.props.BSContacts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Contacts to Appointment Ratio</h6>\n                                    <h6>Total Suspect Contacts: {this.props.CSContacts + this.props.BSContacts}</h6>\n                                    <h6>Appointment per Contact Ratio: {Math.round((this.props.CSAppts + this.props.BSAppts) / (this.props.CSContacts + this.props.BSContacts) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Suspect Contacts without appointment\",\n                                            \"Suspect Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CSContacts + this.props.BSContacts - this.props.CSAppts - this.props.BSAppts,\n                                                this.props.CSAppts + this.props.BSAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Appointment Ratio</h6>\n                                    <h6>Total Suspect Dials: {this.props.CSDials + this.props.BSDials}</h6>\n                                    <h6>Appointment per Dial Ratio: {Math.round((this.props.CSAppts + this.props.BSAppts) / (this.props.CSDials + this.props.BSDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Suspect Dials without appointment\",\n                                            \"Suspect Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CSDials + this.props.BSDials - this.props.CSAppts - this.props.BSAppts,\n                                                this.props.CSAppts + this.props.BSAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showReferralPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <h3>Referral Calling Performance:</h3>\n                            <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Contact Ratio</h6>\n                                    <h6>Total Referral Dials: {this.props.CRDials + this.props.BRDials}</h6>\n                                    <h6>Contact Ratio: {Math.round((this.props.CRContacts + this.props.BRContacts) / (this.props.CRDials + this.props.BRDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Referral Dials without contact\",\n                                            \"Referral Contacts\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CRDials + this.props.BRDials - this.props.CRContacts - this.props.BRContacts,\n                                                this.props.CRContacts + this.props.BRContacts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Contacts to Appointment Ratio</h6>\n                                    <h6>Total Referral Contacts: {this.props.CRContacts + this.props.BRContacts}</h6>\n                                    <h6>Appointment per Contact Ratio: {Math.round((this.props.CRAppts + this.props.BRAppts) / (this.props.CRContacts + this.props.BRContacts) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Referral Contacts without appointment\",\n                                            \"Referral Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CRContacts + this.props.BRContacts - this.props.CRAppts - this.props.BRAppts,\n                                                this.props.CRAppts + this.props.BRAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Appointment Ratio</h6>\n                                    <h6>Total Referral Dials: {this.props.CRDials + this.props.BRDials}</h6>\n                                    <h6>Appointment per Dial Ratio: {Math.round((this.props.CRAppts + this.props.BRAppts) / (this.props.CRDials + this.props.BRDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Referral Dials without appointment\",\n                                            \"Referral Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CRDials + this.props.BRDials - this.props.CRAppts - this.props.BRAppts,\n                                                this.props.CRAppts + this.props.BRAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showTargetPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <h3>Target Market Calling Performance:</h3>\n                            <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Contact Ratio</h6>\n                                    <h6>Total Target Market Dials: {this.props.CTDials + this.props.BTDials}</h6>\n                                    <h6>Contact Ratio: {Math.round((this.props.CTContacts + this.props.BTContacts) / (this.props.CTDials + this.props.BTDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Target Market Dials without contact\",\n                                            \"Target Market Contacts\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CTDials + this.props.BTDials - this.props.CTContacts - this.props.BTContacts,\n                                                this.props.CTContacts + this.props.BTContacts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Contacts to Appointment Ratio</h6>\n                                    <h6>Total Target Market Contacts: {this.props.CTContacts + this.props.BTContacts}</h6>\n                                    <h6>Appointment per Contact Ratio: {Math.round((this.props.CTAppts + this.props.BTAppts) / (this.props.CTContacts + this.props.BTContacts) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Target Market Contacts without appointment\",\n                                            \"Target Market Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CTContacts + this.props.BTContacts - this.props.CTAppts - this.props.BTAppts,\n                                                this.props.CTAppts + this.props.BTAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                    <h6>Dials to Appointment Ratio</h6>\n                                    <h6>Total Target Market Dials: {this.props.CTDials + this.props.BTDials}</h6>\n                                    <h6>Appointment per Dial Ratio: {Math.round((this.props.CTAppts + this.props.BTAppts) / (this.props.CTDials + this.props.BTDials) * 100)}%</h6>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Target Market Dials without scheduling\",\n                                            \"Target Market Scheduled Appointments\",\n                                        ],\n                                        datasets: [{\n                                            data: [\n                                                this.props.CTDials + this.props.BTDials - this.props.CTAppts - this.props.BTAppts,\n                                                this.props.CTAppts + this.props.BTAppts\n                                            ],\n                                            backgroundColor: [\n                                                \"#51aef7\",\n                                                \"#25517b\"\n                                            ]\n                                        }]\n                                    }} />\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showSourcePerformance ?\n                        <div style={{ textAlign: 'center' }}>\n\n                            <div>\n                                <h3><u> {this.state.leadSource} Types of Calls</u></h3>\n                                {/* <Bar data={{\n                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                datasets: [{\n                                    label: \"Dials\",\n                                    backgroundColor: 'rgb(255, 99, 132)',\n                                    borderColor: 'rgb(255, 99, 132)',\n                                    data: [\n                                        this.state.SCPDials + this.state.SBPDials,\n                                        this.state.SCCDials + this.state.SBCDials,\n                                        this.state.SCNDials + this.state.SBNDials,\n                                        this.state.SCSDials + this.state.SBSDials,\n                                        this.state.SCRDials + this.state.SBRDials,\n                                        this.state.SCTDials + this.state.SBTDials],\n                                }]\n                            }} /> */}\n                                <div className=\"card\" style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                    <p style={{ textAlign: 'center' }}>Total Dials: {this.state.sourceDialData.length}</p>\n                                    <Pie data={{\n                                        labels: [\n                                            \"Cashflow Leads\",\n                                            \"Tier-1 Leads\"],\n                                        datasets: [{\n                                            data: [\n                                                this.state.SCPDials +\n                                                this.state.SCCDials +\n                                                this.state.SCNDials +\n                                                this.state.SCSDials +\n                                                this.state.SCRDials +\n                                                this.state.SCTDials,\n\n                                                this.state.SBPDials +\n                                                this.state.SBCDials +\n                                                this.state.SBNDials +\n                                                this.state.SBSDials +\n                                                this.state.SBRDials +\n                                                this.state.SBTDials\n                                            ],\n                                            backgroundColor: [\n\n                                                \"#25517b\",\n                                                \"#d2d93b\"\n                                            ]\n                                        }]\n                                    }} options={{\n                                        legend: {\n                                            position: 'left',\n                                            labels: {\n                                                boxWidth: 10\n                                            }\n                                        }\n                                    }} /> </div> </div>\n\n                            {/* /////////////////////////////////////////\n                        ////////////////////////////////////////////\n                        /////// SOURCE PIE CHARTS BELOW ////////////\n                        ///////////////////////////////////////////\n                        /////////////////////////////////////////// */}\n                            <br />\n                            <div className=\"card\" style={{ backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <h3>{this.state.leadSource} Lead Performance:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <hr />\n                                        <h5>Contacts/Dial Ratio</h5>\n                                        <h6>Total Dials: {this.state.SourceDials}</h6>\n                                        <h6>Contact Ratio: {Math.round((this.state.SourceContacts / this.state.SourceDials) * 100)}%</h6>\n                                        <Pie data={{\n                                            labels: [\n                                                `${this.state.leadSource} Lead Missed Calls`,\n                                                `${this.state.leadSource} Lead Contacts`,\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.SourceDials - this.state.SourceContacts,\n                                                    this.state.SourceContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <hr />\n                                        <h5>Appointment / Contact Ratio</h5>\n                                        <h6>Total Contacts: {this.state.SourceContacts}</h6>\n                                        <h6>Appointment Ratio: {Math.round((this.state.SourceAppts / this.state.SourceContacts) * 100)}%</h6>\n                                        <Pie data={{\n                                            labels: [\n                                                `${this.state.leadSource} Lead Contacts without Scheduling`,\n                                                `${this.state.leadSource} Lead Appointments`,\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.SourceContacts - this.state.SourceAppts,\n                                                    this.state.SourceAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <hr />\n                                        <h5>Appointment / Dial Ratio</h5>\n                                        <h6>Total Appointments: {this.state.sourceAppts}</h6>\n                                        <h6>Appointment Ratio: {Math.round((this.state.SourceAppts / this.state.SourceDials) * 100)}%</h6>\n                                        <Pie data={{\n                                            labels: [\n                                                `${this.state.leadSource} Lead Calls without Scheduling`,\n                                                `${this.state.leadSource} Lead Calls Scheduled`,\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.SourceDials - this.state.SourceAppts,\n                                                    this.state.SourceAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n\n\n                                </div>\n\n                            </div> </div>\n                        : null\n                }\n\n\n                {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                {\n                    this.state.showSelectedTargetPerformance ?\n                        <div style={{ textAlign: 'center' }}>\n                            <h3><u>{this.state.targetMarket} Types of Calls</u></h3>\n                            <div className=\"card\" style={{ width: '80%', marginLeft: '10%', backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <div>\n                                    <p style={{ textAlign: 'center' }}>Total Dials: {this.state.targetDialData.length}</p>\n                                    {/* <Bar data={{\n                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                datasets: [{\n                                    label: \"Dials\",\n                                    backgroundColor: 'rgb(255, 99, 132)',\n                                    borderColor: 'rgb(255, 99, 132)',\n                                    data: [\n                                        this.state.SCPDials + this.state.SBPDials,\n                                        this.state.SCCDials + this.state.SBCDials,\n                                        this.state.SCNDials + this.state.SBNDials,\n                                        this.state.SCSDials + this.state.SBSDials,\n                                        this.state.SCRDials + this.state.SBRDials,\n                                        this.state.SCTDials + this.state.SBTDials],\n                                }]\n                            }} /> */}\n                                    <Pie data={{\n                                        labels: [\n                                            \"Cashflow Leads\",\n                                            \"Tier-1 Leads\"],\n                                        datasets: [{\n                                            data: [\n                                                this.state.TCPDials +\n                                                this.state.TCCDials +\n                                                this.state.TCNDials +\n                                                this.state.TCSDials +\n                                                this.state.TCRDials +\n                                                this.state.TCTDials,\n\n                                                this.state.TBPDials +\n                                                this.state.TBCDials +\n                                                this.state.TBNDials +\n                                                this.state.TBSDials +\n                                                this.state.TBRDials +\n                                                this.state.TBTDials\n                                            ],\n                                            backgroundColor: [\n\n                                                \"#25517b\",\n                                                \"#d2d93b\"\n                                            ]\n                                        }]\n                                    }} options={{\n                                        legend: {\n                                            position: 'left',\n                                            labels: {\n                                                boxWidth: 10\n                                            }\n                                        }\n                                    }} />  </div> </div>\n\n                            <br />\n                            {/* /////////////////////////////////////////\n                        ////////////////////////////////////////////\n                        /////// SOURCE PIE CHARTS BELOW ////////////\n                        ///////////////////////////////////////////\n                        /////////////////////////////////////////// */}\n                            <div className=\"card\" style={{ backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                <h3>{this.state.targetMarket} Calls Performance:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <hr />\n                                        <h5>Contact / Dial Ratio</h5>\n                                        <h6>Total Dials: {this.state.TargetDials}</h6>\n                                        <h6>Contact Ratio: {Math.round((this.state.TargetContacts / this.state.TargetDials) * 100)}%</h6>\n                                        <Pie data={{\n                                            labels: [\n                                                `${this.state.targetMarket} Missed Calls`,\n                                                `${this.state.targetMarket} Contacts`,\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.TargetDials - this.state.TargetContacts,\n                                                    this.state.TargetContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <hr />\n                                        <h5>Appointment / Contact Ratio</h5>\n                                        <h6>Total Contacts: {this.state.TargetContacts}</h6>\n                                        <h6>Appointment Ratio: {Math.round((this.state.TargetAppts / this.state.TargetContacts) * 100)}%</h6>\n                                        <Pie data={{\n                                            labels: [\n                                                `${this.state.targetMarket} calls without Scheduling`,\n                                                `${this.state.targetMarket} calls Scheduled`,\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.TargetContacts - this.state.TargetAppts,\n                                                    this.state.TargetAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <hr />\n                                        <h5>Appointment / Dials Ratio</h5>\n                                        <h6>Total Appointments {this.state.targetAppts}</h6>\n                                        <h6>Appointment Ratio: {Math.round((this.state.TargetAppts / this.state.TargetDials) * 100)}%</h6>\n                                        <Pie data={{\n                                            labels: [\n                                                `${this.state.targetMarket} calls without Scheduling`,\n                                                `${this.state.targetMarket} calls Scheduled`,\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.TargetDials - this.state.TargetAppts,\n                                                    this.state.TargetAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n\n\n                                </div>\n\n                            </div> </div>\n                        : null\n                }\n\n\n                </div>\n            </div >\n\n        )\n    }\n\n}\n\nexport default MainDataViewer;","import React, { Component } from 'react';\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport { FormTextarea } from 'shards-react';\n// import \"./style.css\"\n\nclass NoteCreator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noteText: \"\",\n            noteAuthor: \"\",\n            noteTagged: \"\",\n            showNoteForm: false\n        }\n    }\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    handleNoteSubmit = event => {\n        event.preventDefault()\n        console.log(\"Submitting appointment under user ID: \" + this.props.userID)\n\n        var NoteData = {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userID,\n            noteTagged: this.state.noteTagged,\n            completed: false,\n        }\n\n        console.log(NoteData)\n\n\n\n        API.saveNote(this.props.userID, {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userID,\n            noteAuthorName: this.props.userData.firstName + \" \" + this.props.userData.lastName,\n            noteTagged: this.state.noteTagged,\n            completed: false\n        }).then(res => {\n            cogoToast.info(\"Saved Note!\")\n            this.props.rerender();\n        }\n        ).catch(err => console.log(err))\n\n        // setTimeout(() => {\n        //     // cogoToast.loading(\"Re-loading appointments\")\n        //     this.props.rerender()\n        // }, 1000)\n\n    }\n\n    showNoteForm = () => {\n        if (this.state.showNoteForm !== true) {\n            this.setState({\n                showNoteForm: true\n            })\n        } else {\n            this.setState({\n                showNoteForm: false\n            })\n        }\n    }\n\n    render() {\n        return (\n            // <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}>\n            <div className=\"col-12\" style={{ textAlign: 'left', padding: '0' }}>\n                <div className=\"card bg-light\" style={{ color: 'black' }}>\n                    <div className=\"card-header\">\n                        <h4\n                            style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '' }}\n                        >\n                            Create Note\n                            <br />\n                            <span>< button className=\"btn btn-sm btn-outline-dark\" onClick={this.showNoteForm}>Show</button></span>\n                        </h4>\n                    </div>\n\n                    {this.state.showNoteForm ?\n                        <div className=\"card-body\" style={{ padding: '10px', height: '', oveflow: 'auto' }}>\n                            <form>\n                                <div style={{ color: 'black', padding: '20px' }}>\n                                    {this.props.mentors ? <select id=\"\" value={this.state.noteTagged} onChange={this.handleInputChange} name=\"noteTagged\">\n                                        <option value={\"none\"}>--Tag Mentor--</option>\n                                        {this.props.mentors.map(mentor => (\n                                            <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                        ))}\n                                    </select> : null}\n                                    <br />\n                                    <FormTextarea\n                                        value={this.state.noteText}\n                                        onChange={this.handleInputChange}\n                                        type=\"text\"\n                                        name=\"noteText\"\n                                        className=\"form-control\"\n                                        id=\"noteTextInput\"\n                                        aria-describedby=\"\"\n                                        placeholder=\"Enter note here\"\n                                    />\n\n                                    <button onClick={this.handleNoteSubmit} style={{ float: ' right' }} className=\"btn btn-outline-dark\">Create Note</button>\n                                </div>\n                            </form>\n                        </div>\n                        : null}\n                </div>\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default NoteCreator;","import React, { Component } from 'react';\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\n// import { Card, CardBody } from 'shards-react';\nimport './style.css'\nimport Moment from 'react-moment';\n\nclass NoteViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noteChosen: \"\",\n            noteToDelete: \"\"\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(\"Note Viewer:\" + this.props.userData.notes)\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    handleNoteChange = event => {\n        event.preventDefault()\n        console.log(\"Submitting appointment under user ID: \" + this.props.userID)\n\n        var NoteData = {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userID,\n            noteTagged: this.state.noteTagged,\n            completed: false,\n        }\n\n        console.log(NoteData)\n\n\n\n        API.updateNote(this.state.noteID, {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userID,\n            noteTagged: this.state.noteTagged,\n            completed: false\n        }).then(res => {\n            cogoToast.info(\"Saved Note!\")\n            this.props.rerender()\n        }\n        ).catch(err => console.log(err))\n\n        // setTimeout(() => {\n        //     // cogoToast.loading(\"Re-loading appointments\")\n        //     this.props.rerender()\n        // }, 1000)\n\n    }\n\n    completeNote = id => {\n        // event.preventDefault()\n        console.log(\"Marked note complete:\" + id)\n\n        API.completeNote(id, {\n            completed: true\n        }).then(res => {\n            this.props.rerender()\n        }\n        ).catch(err => console.log(err))\n    }\n\n    uncompleteNote = id => {\n        console.log(\"Marked note incomplete: \" + id)\n        API.uncompleteNote(id, {\n            completed: false\n        }).then(res => {\n            cogoToast.info(\"Unchecked Box\")\n            this.props.rerender()\n        }\n        ).catch(err => console.log(err))\n    }\n\n    deleteNote = id => {\n        console.log(\"Deleted note: \" + id)\n        API.deleteNote(id)\n            .then(res => {\n                cogoToast.error(\"Deleted Note\")\n                this.props.rerender()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"\" id=\"note-view-container-1\" style={{ color: 'black', height: this.props.height, overflow: 'auto', borderWidth: '1px', borderColor: 'black', backgroundColor: 'rgba(0,0,0,0.1)' }}>\n\n                <div id=\"note-viewer-1\" style={{ padding: '', width: '', marginBottom: '10px' }}>\n\n                    <div className=\"\">\n\n                        {this.props.taggedNotes ?\n\n                            this.props.taggedNotes.map(note => (\n                                <div className=\"card bg-light\" key={note._id}\n                                    style={{ color: 'black', padding: '0px 0px 0px 0px', borderRadius: '5px', margin: 10 }}\n                                >\n                                    {/* <Card className=\"note-card\" key={note._id}>\n                                            <CardBody> */}\n\n                                    {/* <br /> */}\n\n                                    <div className=\"card-header\" style={{ padding: '5px 5px 0px 5px' }}>\n                                        <>\n                                            <div value={this.props.id} onClick={() => this.deleteNote(note._id)} style={{ float: 'right', height: '5px', width: '20px', color: 'red' }} className=\"\">X</div>\n                                            {note.completed ?\n                                                <div value={this.props.id} onClick={() => this.uncompleteNote(note._id)} style={{ float: 'right', height: '5px', width: '20px', padding: '0' }} className=\"\">√</div>\n                                                : <div value={this.props.id} onClick={() => this.completeNote(note._id)} style={{ float: 'right', height: '5px', width: '20px', padding: '0' }} className=\"\"><i className=\"far fa-square\"></i></div>\n                                            }\n\n                                        </>\n                                        <p style={{ fontSize: '10px' }}>From: {note.noteAuthorName}</p>\n                                    </div>\n                                    <div className=\"card-body\" style={{ padding: '15px 15px 0px 5px', margin: '0px 0px 0px 0px' }}>\n                                        <p style={{ fontSize: this.props.fontSize, textIndent: '50px' }}> {note.noteText} </p>\n                                    </div>\n\n                                    <div className=\"card-footer\">\n                                        <p style={{ fontSize: '12px' }}>\n                                           Posted: <Moment format=\"MM-DD HH:mm\">{note.created_at}</Moment>\n                                           <br />\n                                            <Moment date={note.created_at} durationFromNow /> ago\n                                        </p>\n                                    </div>\n                                </div>\n\n                            ))\n\n                            : <p style={{ color: 'black', textAlign: 'center' }}>No notes yet!</p>}\n                    </div>\n                </div>\n\n\n\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default NoteViewer;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\n// import './style.css'\n\n\n\nclass SalesCreator extends Component {\n\n    state = {\n        saleType: \"\",\n        saleName: \"\",\n        saleSource: \"\",\n        saleNotes: \"\",\n        saleDate: \"\",\n        saleTargetMkt: \"\",\n        saleTagged: \"\",\n        saleCommission: 0,\n        salePercentage: 0,\n        saleTaggedPercentage: 0,\n        saleProduct: \"\",\n        showSale: false\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        // this.setState({\n        //     apptname: this.props.apptname,\n        //     apptsource: this.props.source,\n        //     apptnotes: this.props.notes,\n        //     apptdate: this.props.date\n        // })\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleSaleSubmit = event => {\n        event.preventDefault()\n        console.log(\"Submitting sale under user ID: \" + this.props.userID)\n\n        console.log(this.state)\n\n        var SaleData = {\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            protege: this.props.userData._id,\n            mentor: this.state.saleTagged,\n            product: this.state.saleProduct,\n            commission: parseInt(this.state.saleCommission),\n            percentageProtege: parseInt(this.state.salePercentage) / 100,\n            percentageMentor: parseInt(this.state.saleTaggedPercentage) / 100,\n            leadSource: this.state.saleSource,\n            targetMarket: this.state.saleTargetMkt\n        }\n\n        console.log(SaleData)\n\n\n        API.saveSale({\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            protege: this.props.userData._id,\n            mentor: this.state.saleTagged,\n            product: this.state.saleProduct,\n            commission: parseInt(this.state.saleCommission),\n            percentageProtege: parseInt(this.state.salePercentage) / 100,\n            percentageMentor: parseInt(this.state.saleTaggedPercentage) / 100,\n            leadSource: this.state.saleSource,\n            targetMarket: this.state.saleTargetMkt\n        }).then(res =>\n            cogoToast.info(\"Saved Sale!\")\n        ).catch(err => console.log(err))\n\n        // setTimeout(() => {\n        //     // cogoToast.loading(\"Re-loading appointments\")\n        //     this.props.rerender()\n        // }, 1000)\n\n    }\n\n\n\n\n    showSaleForm = () => {\n        if (this.state.showSale === false) {\n            this.setState({\n                showSale: true\n            })\n        } else {\n            this.setState({\n                showSale: false\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-12\" id=\"sale-creator\" style={{ textAlign: 'left', padding: '0' }}>\n                <div className=\"card bg-light\">\n\n                    <div className=\"card-header\">\n                        <h4 style={{ textAlign: 'center', padding: '10%', color: 'black', margin: '' }}>Create Sale\n                <br /> <button className=\"btn btn-sm btn-outline-dark\" onClick={this.showSaleForm}>Show</button></h4>\n                    </div>\n\n\n\n                    {this.state.showSale ?\n                        <div className=\"card-body\" style={{ padding: '10px', height: '400px', overflow: 'auto' }}>\n                            <form>\n                                <div style={{ color: 'black', padding: '20px', borderRadius: '30px' }}>\n\n                                    <label>Type:</label>\n                                    <select className=\"custom-select my-1 mr-sm-2\" value={this.state.saleType} onChange={this.handleInputChange} name=\"saleType\" type=\"text\" placeholder=\"Choose Client type\">\n                                        <option value=\"CPD\">Cashflow Prospect</option>\n                                        <option value=\"BPD\">Businessowner Prospect</option>\n                                        <option value=\"CCD\">Cashflow Client</option>\n                                        <option value=\"BCD\">Businessowner Client</option>\n                                        <option value=\"CND\">Cashflow Natural Mkt</option>\n                                        <option value=\"BND\">Business Natural Mkt</option>\n                                    </select>\n                                    <hr />\n\n                                    <label>Sale Name:</label>\n                                    <input id=\"apptname-input\" className=\"form-control\" value={this.state.saleName} onChange={this.handleInputChange} name=\"saleName\" type=\"text\" placeholder=\"Give your Sale a name!\" />\n\n                                    <hr />\n                                    <label>Product Sold:</label>\n                                    <input id=\"product-sold\" className=\"form-control\" value={this.state.saleProduct} onChange={this.handleInputChange} name=\"saleProduct\" type=\"text\" placeholder=\"Type of product sold\" />\n                                    <hr />\n                                    <label>Date of Sale:</label>\n                                    <input id=\"date-input\" className=\"form-control\" value={this.state.saleDate} onChange={this.handleInputChange} name=\"saleDate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n                                    <hr />\n                                    <label>Mentor Tagged</label>\n                                    {this.props.mentors ? <select id=\"mentorDropMenu\" value={this.state.saleTagged} className=\"\" onChange={this.handleInputChange} name=\"saleTagged\">\n                                        <option value={\"none\"}>--Tag Mentor--</option>\n                                        {this.props.mentors.map(mentor => (\n                                            <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                        ))}\n                                    </select> : null}\n                                    <hr />\n                                    <label>Sales Commission [only enter numbers]</label>\n                                    <input id=\"saleCommission\" className=\"form-control\" value={this.state.saleCommission} onChange={this.handleInputChange} name=\"saleCommission\" />\n                                    <hr />\n                                    <label>Your Percentage [only enter numbers]</label>\n                                    <input id=\"salePercentage\" className=\"form-control\" value={this.state.salePercentage} onChange={this.handleInputChange} name=\"salePercentage\" />\n                                    <hr />\n                                    <label>Mentor Percentage [only enter numbers]</label>\n                                    <input id=\"taggedPercentage\" className=\"form-control\" value={this.state.saleTaggedPercentage} onChange={this.handleInputChange} name=\"saleTaggedPercentage\" />\n\n                                    <hr />\n                                    <label>Lead Source:</label>\n                                    {/* <input id=\"source-input\" className=\"form-control\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\" type=\"text\" placeholder=\"Source of Lead\" /> */}\n                                    {this.props.userData.sources ? <select id=\"sourceDropMenu\" value={this.state.saleSource} className=\"\" onChange={this.handleInputChange} name=\"saleSource\">\n                                        <option value={\"none\"}>No Lead Source Selected</option>\n                                        {this.props.userData.sources.map(source => (\n                                            <option key={source} value={source}>{source}</option>\n                                        ))}\n                                    </select> : <p style={{ color: 'whitesmoke' }}>\"No lead sources created yet\"</p>}\n\n                                    <hr />\n                                    <label>Target Market:</label>\n                                    {/* <input id=\"targetmkt-input\" className=\"form-control\" value={this.state.apptTargetMkt} onChange={this.handleInputChange} name=\"appttargetmkt\" type=\"text\" placeholder=\"Target Market goes here\" /> */}\n                                    {this.props.userData.targetMarkets ? <select id=\"sourceDropMenu\" value={this.state.saleTargetMkt} className=\"\" onChange={this.handleInputChange} name=\"saleTargetMkt\">\n                                        <option value={\"none\"}>No Target Market Selected</option>\n                                        {this.props.userData.targetMarkets.map(target => (\n                                            <option key={target} value={target}>{target}</option>\n                                        ))}\n                                    </select> : <p style={{ color: 'black' }}>\"No target markets created yet\"</p>}\n                                    <hr />\n                                    <label>Sales Notes:</label>\n                                    <input id=\"note-input\" className=\"form-control\" value={this.state.saleNotes} onChange={this.handleInputChange} name=\"saleNotes\" type=\"text\" placeholder=\"Enter any notes here\" />\n                                    <br />\n                                    <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleSaleSubmit}>Submit Sale</button>\n                                </div>\n                            </form>\n                        </div>\n                        : null}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default SalesCreator","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport Modal from \"react-modal\"\n\n\n\nclass SalesItem extends Component {\n\n    state = {\n        editModalIsOpen: false,\n        saleType: \"\",\n        saleName: \"\",\n        saleSource: \"\",\n        saleNotes: \"\",\n        saleDate: \"\",\n        saleTargetMkt: \"\",\n        saleTagged: \"\",\n        saleCommission: 0,\n        salePercentage: 0,\n        saleTaggedPercentage: 0,\n        saleProduct: \"\",\n        mentorTagged: \"\"\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        this.setState({\n            saleType: this.props.saleType,\n            saleName: this.props.saleName,\n            saleSource: this.props.saleSource,\n            saleNotes: this.props.saleNotes,\n            saleDate: this.props.saleDate,\n            saleTargetMkt: this.props.saleTargetMkt,\n            saleCommission: this.props.saleCommission,\n            salePercentage: this.props.salePercentage,\n            saleTaggedPercentage: this.props.saleTaggedPercentage,\n            saleProduct: this.props.saleProduct,\n            saleWriter: this.props.protege,\n            saleTagged: this.props.saleTagged\n        })\n\n        setTimeout(() => { this.setMentorName() }, 1000);\n\n\n    }\n\n    setMentorName = () => {\n        var mentorName = \"\";\n\n        if (this.props.userData._id === this.props.saleWriter) {\n            for (var i = 0; i < this.props.userData.allMentors[i]; i++) {\n                console.log(\"This appointment was written by you!\")\n                mentorName = this.props.userData.allMentors[i].firstName + \" \" + this.props.userData.allMentors[i].lastName;\n                this.setMentorTag(mentorName);\n            }\n        }\n    }\n\n    setMentorTag = (mentor) => {\n        console.log(\"Setting Mentor with: \" + mentor);\n        this.setState({\n            mentorTagged: mentor\n        })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleSaleUpdate = event => {\n        event.preventDefault()\n\n        var salesData = {\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            leadSource: this.state.saleSource,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            targetMarket: this.state.saleTargetMkt,\n            commission: this.state.saleCommission,\n            percentageProtege: this.state.salePercentage,\n            percentageMentor: this.state.saleTaggedPercentage,\n            product: this.state.saleProduct,\n            protege: this.props.saleWriter,\n            mentor: this.state.saleTagged\n        }\n\n        console.log(salesData)\n\n        this.setState({\n            editModalIsOpen: false\n        })\n\n        API.updateSale(this.props.id, {\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            leadSource: this.state.saleSource,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            targetMarket: this.state.saleTargetMkt,\n            commission: this.state.saleCommission,\n            percentageProtege: this.state.salePercentage,\n            percentageMentor: this.state.saleTaggedPercentage,\n            product: this.state.saleProduct,\n            protege: this.props.saleWriter,\n            mentor: this.state.saleTagged\n        }).then(res =>\n            cogoToast.info(\"Updated Sale!\")\n        ).catch(err => console.log(err))\n\n    }\n\n    prepEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    deleteSale = () => {\n        API.deleteSale(this.props.id)\n            .then(res => cogoToast.error(\"You deleted this sale\"))\n            .catch(err => console.log(err))\n\n        setTimeout(() => {\n            cogoToast.loading(\"Updating Appointments\")\n            // this.props.rerender()\n        }, 500)\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-light\">\n\n                <div className=\"card-header\">\n                    <h4 style={{ textAlign: 'center' }}><u>{this.props.saleName}:</u></h4>\n                </div>\n\n                <div\n                // style={{ height: '', padding: '0 10% 0 10%', textAlign: 'left', backgroundColor: 'rgba(255,255,255,0.75)', overflow: 'auto', borderRadius: 5 }}\n                >\n\n\n\n                    {/* <p style={{ fontSize: '11px' }}>{this.props.saleDate}</p> */}\n\n                    <div className=\"card-body\" style={{ padding: '20px' }}>\n                        <div></div>\n                        {this.props.saleNotes ? <p style={{ color: '' }}>Notes: {this.props.saleNotes}</p> : null}\n                        <p style={{ fontSize: '14px', float: 'right' }}>Type:\n                            {this.props.saleType === \"CPD\" ? <span> Cashflow Prospect</span> : null}\n                            {this.props.saleType === \"BPD\" ? <span> Businessowner Prospect</span> : null}\n                            {this.props.saleType === \"CCD\" ? <span> Cashflow Delegated Client</span> : null}\n                            {this.props.saleType === \"BCD\" ? <span> Businessowner Delegated Client</span> : null}\n                            {this.props.saleType === \"CND\" ? <span> Cashflow Natural Market</span> : null}\n                            {this.props.saleType === \"BND\" ? <span> Businessowner Natural Market</span> : null}\n                            {this.props.saleType === \"CSD\" ? <span> Cashflow Vertical/Orphan</span> : null}\n                            {this.props.saleType === \"BSD\" ? <span> Businessowner Vertical/Orphan</span> : null}\n                            {this.props.saleType === \"CRD\" ? <span> Cashflow Referral</span> : null}\n                            {this.props.saleType === \"BRD\" ? <span> Businessowner Referral\"</span> : null}\n                            {this.props.saleType === \"CTD\" ? <span> Cashflow Target Industry</span> : null}\n                            {this.props.saleType === \"BTD\" ? <span> Businessowner Target Industry</span> : null}\n                        </p>\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Commissions: ${this.props.saleCommission}</p>\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Protege (You) Percentage: {this.props.salePercentage * 100}% Payout: ${this.props.salePercentage * this.props.saleCommission}</p>\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Mentor Percentage: {this.props.saleTaggedPercentage * 100}% Payout: ${this.props.saleTaggedPercentage * this.props.saleCommission}</p>\n                    </div>\n\n                    {/* <div className=\"card-footer\" style={{ textAlign: 'center' }}> */}\n                 \n                    <div style={{ clear: 'both', textAlign: 'center' }}>\n                        <button value={this.props.id} onClick={this.prepEditModal} className=\"btn btn-info btn-sm\" style={{ width: '33%' }}>Edit</button>\n                        <button value={this.props.id} onClick={this.deleteSale} className=\"btn btn-danger btn-sm\" style={{ width: '33%' }}>X</button>\n                        {/* </div> */}\n                    </div>\n                </div>\n\n\n                <div className=\"form-group\" id=\"appt-holder \">\n                    <Modal isOpen={this.state.editModalIsOpen} onAfterOpen={this.afterOpenEditModal} onRequestClose={this.closeEditModal} style={this.customStyles} contentLabel=\"Your Request Viewer\">\n                        {/* <div className=\"card\"> */}\n                        <h3>Sale Logger</h3>\n                        <form className=\"form-group\">\n                            <label>Type of Sale</label>\n                            <select className=\"custom-select my-1 mr-sm-2\" value={this.state.saleType} onChange={this.handleInputChange} name=\"saleType\" type=\"text\" placeholder=\"Choose Client type\">\n                                <option value=\"CPD\">Cashflow Prospect</option>\n                                <option value=\"BPD\">Businessowner Prospect</option>\n                                <option value=\"CCD\">Cashflow Client</option>\n                                <option value=\"BCD\">Businessowner Client</option>\n                                <option value=\"CND\">Cashflow Natural Mkt</option>\n                                <option value=\"BND\">Business Natural Mkt</option>\n                            </select>\n\n                            <label>Sale Name:</label>\n                            <input id=\"apptname-input\" className=\"form-control\" value={this.state.saleName} onChange={this.handleInputChange} name=\"saleName\" type=\"text\" placeholder=\"Give your appointment a name!\" />\n\n                            <label>Product Sold:</label>\n                            <input id=\"product-sold\" className=\"form-control\" value={this.state.saleProduct} onChange={this.handleInputChange} name=\"saleProduct\" type=\"text\" placeholder=\"Type of product sold\" />\n\n                            <label>Date of Sale:</label>\n                            <input id=\"date-input\" className=\"form-control\" value={this.state.saleDate} onChange={this.handleInputChange} name=\"saleDate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n\n                            <label>Mentor Tagged</label>\n                            {this.props.mentors ? <select id=\"mentorDropMenu\" value={this.props.saleTagged} onChange={this.handleInputChange} name=\"saleTagged\">\n                                <option value={\"none\"}>--Tag Mentor--</option>\n                                {this.props.mentors.map(mentor => (\n                                    <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                ))}\n                            </select> : null}\n\n                            <label>Sales Commission [only enter numbers]</label>\n                            <input id=\"saleCommission\" className=\"form-control\" value={this.state.saleCommission} onChange={this.handleInputChange} name=\"saleCommission\" />\n\n                            <label>Your Percentage [only enter numbers]</label>\n                            <input id=\"salePercentage\" className=\"form-control\" value={this.state.salePercentage} onChange={this.handleInputChange} name=\"salePercentage\" />\n\n                            <label>Mentor Percentage [only enter numbers]</label>\n                            <input id=\"taggedPercentage\" className=\"form-control\" value={this.state.saleTaggedPercentage} onChange={this.handleInputChange} name=\"saleTaggedPercentage\" />\n\n\n                            <label>Lead Source:</label>\n                            {/* <input id=\"source-input\" className=\"form-control\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\" type=\"text\" placeholder=\"Source of Lead\" /> */}\n                            {this.props.userData.sources ? <select id=\"sourceDropMenu\" value={this.state.saleSource} onChange={this.handleInputChange} name=\"saleSource\">\n                                <option value={\"none\"}>No Lead Source Selected</option>\n                                {this.props.userData.sources.map(source => (\n                                    <option key={source} value={source}>{source}</option>\n                                ))}\n                            </select> : <p>\"No lead sources created yet\"</p>}\n\n\n                            <label>Target Market:</label>\n                            {/* <input id=\"targetmkt-input\" className=\"form-control\" value={this.state.apptTargetMkt} onChange={this.handleInputChange} name=\"appttargetmkt\" type=\"text\" placeholder=\"Target Market goes here\" /> */}\n                            {this.props.userData.targetMarkets ? <select id=\"sourceDropMenu\" value={this.state.saleTargetMkt} onChange={this.handleInputChange} name=\"saleTargetMkt\">\n                                <option value={\"none\"}>No Target Market Selected</option>\n                                {this.props.userData.targetMarkets.map(target => (\n                                    <option key={target} value={target}>{target}</option>\n                                ))}\n                            </select> : <p>\"No target markets created yet\"</p>}\n\n\n                            <label>Sales Notes:</label>\n                            <input id=\"note-input\" className=\"form-control\" value={this.state.saleNotes} onChange={this.handleInputChange} name=\"saleNotes\" type=\"text\" placeholder=\"Enter any notes here\" />\n                            <br />\n                            <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleSaleUpdate}>Update Sale</button>\n\n                        </form>\n                        {/* </div> */}\n                    </Modal>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default SalesItem","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\nimport './main.scss' // webpack must be configured to do this\n\nexport default class DemoApp extends React.Component {\n\n    state = {\n        events: \"\"\n    }\n\n    componentDidMount = () => {\n        this.sortAppts()\n    }\n\n    sortAppts = () => {\n        var apptArray = []\n        var event = \"\"\n        for (var i = 0; i < this.props.appointments.length; i++) {\n\n            event = {\n                title: this.props.appointments[i].time,\n                date: this.props.appointments[i].date\n            }\n\n            apptArray.push(event)\n\n        }\n        // setTimeout(() => {\n            this.setState({\n                events: apptArray\n            })\n        // }, 1000)\n    }\n\n    render() {\n        return (\n            <div className=\"card\" style={{height: '420px', width: '400px'}}>\n            <FullCalendar\n                defaultView=\"dayGridMonth\" \n                plugins={[dayGridPlugin]}\n                // plugins={calendarPlugins}\n                weekends={true}\n                events={this.state.events}\n            />\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from \"react\";\nimport \"./Home.css\";\n// import ProtegeCallBtnContainer from \"../components/ProtegeCallBtnContainer\"\nimport ProtegeCallBtnContainer2 from \"../components/ProtegeCallBtnContainer2\"\nimport AppointmentItem from \"../components/AppointmentItem\"\nimport AppointmentCreator from \"../components/AppointmentCreator\"\nimport DialDataSide from \"../components/DialDataSide\"\nimport API from \"../utils/API\";\nimport SourceCreator from \"../components/SourceCreator\"\n// import SourceSelector from \"../components/SourceSelector\"\n// import TargetMarketSelector from \"../components/TargetMarketSelector\"\nimport TargetMarketCreator from \"../components/TargetMarketCreator\"\nimport MainDataViewer from \"../components/MainDataViewer\"\nimport NoteCreator from \"../components/NoteCreator\"\nimport NoteViewer from \"../components/NoteViewer\"\nimport SalesCreator from \"../components/SalesCreator\"\nimport SalesItem from \"../components/SalesItem\"\n// import SideNavPage from \"../components/SideNavPage\"\nimport MainCalendar from \"../components/MainCalendar\"\nimport moment from 'moment'\n\n\nclass ProtegeDash extends Component {\n\n    state = {\n        user: \"\",\n        appointments: [],\n        mentors: \"\",\n        proteges: \"\",\n        userData: \"\",\n        dialData: \"\",\n        contactData: \"\",\n        numScheduled: 0,\n        CPDials: 0,\n        BPDials: 0,\n        CCDials: 0,\n        BCDials: 0,\n        CNDials: 0,\n        BNDials: 0,\n        CPContacts: 0,\n        BPContacts: 0,\n        CCContacts: 0,\n        BCContacts: 0,\n        CNContacts: 0,\n        BNContacts: 0,\n        CPAppts: 0,\n        BPAppts: 0,\n        CCAppts: 0,\n        BCAppts: 0,\n        CNAppts: 0,\n        BNAppts: 0,\n        CSDials: 0,\n        BSDials: 0,\n        CSContacts: 0,\n        BSContacts: 0,\n        CSAppts: 0,\n        BSAppts: 0,\n        CRDials: 0,\n        CRContacts: 0,\n        CRAppts: 0,\n        BRDials: 0,\n        BRContacts: 0,\n        BRAppts: 0,\n        CTDials: 0,\n        CTContacts: 0,\n        CTAppts: 0,\n        BTDials: 0,\n        BTContacts: 0,\n        BTAppts: 0,\n        leadSource: \"none\",\n        targetMarket: \"none\",\n        showDials: true,\n        showNotes: false,\n        // showCreate: false,\n        showAnalytics: false,\n        showAppts: false,\n        showSales: false,\n        showNoteViewer: false,\n        showCreate: false,\n        showSideBars: true\n    }\n\n    componentDidMount = () => {\n        // console.log(\"Loaded Protege Page\")\n        // this.gatherAppointments()\n        // console.log(\"User Data: \" + this.props.user.uid)\n        setTimeout(() => {\n            this.getUserData()\n            this.gatherMentors()\n            this.gatherProteges()\n\n        }, 1500)\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    setParentState = (data) => {\n        this.setState({\n            leadSource: data\n        })\n    }\n\n    setParentStateTargetMkt = (data) => {\n        this.setState({\n            targetMarket: data\n        })\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////    Data Querying Functions        //////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n    getWeeklyDials = () => {\n\n        API.getWeeklyDials(this.state.userData._id, {\n            todayDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n            weekPrior: moment().subtract(6, 'd').format(\"YYYY-MM-DD\")\n        })\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    weeklyDials: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n\n        setTimeout(() => {\n            this.parseWeeklyDials()\n            this.parseWeeklyContacts()\n\n        }, 1500)\n    }\n\n    getWeeklyAppts = () => {\n        API.getWeeklyAppts(this.state.userData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    weeklyAppts: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseWeeklyAppointments()\n        }, 1000)\n\n    }\n\n \n    getUserData = () => {\n        // console.log(this.props.user.uid)\n        var userID = this.props.user.uid\n        API.getUserData(userID)\n            .then(res =>\n                this.setState({\n                    userData: res.data[0],\n                    dialData: res.data[0].dials\n                }), this.getContactData(),\n                this.gatherAppointments(),\n                this.gatherSales(),\n\n                setTimeout(() => {\n                    this.parseDials()\n                    this.getProtegeNoteData()\n                    this.getWeeklyDials()\n                    this.getWeeklyAppts()\n                }, 500)\n            )\n    }\n\n    getProtegeNoteData = () => {\n        // console.log(this.state.userData._id)\n\n        API.getProtegeNotes(this.state.userData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    notes: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    gatherMentors = () => {\n        API.getMentors()\n            .then((res) => {\n                this.setState({\n                    mentors: res.data\n                })\n            })\n    }\n\n    gatherProteges = () => {\n        API.getProteges()\n            .then((res) => {\n                this.setState({\n                    proteges: res.data\n                })\n            })\n    }\n\n    getContactData = () => {\n        setTimeout(() => {\n            // console.log(\"Searching for contacts using: \" + this.state.userData._id)\n            API.getContacts(this.state.userData._id)\n                .then(res =>\n                    // console.log(\"Contacts: \" )\n                    // console.log(res.data.length)\n                    this.setState({\n                        contactData: res.data\n                    }),\n                    setTimeout(() => { this.parseContacts() }, 500)\n                )\n        }, 1000)\n\n    }\n\n\n    gatherAppointments = () => {\n        setTimeout(() => {\n            // console.log(\"Gathering appointemnts using ID: \" + this.state.userData._id)\n            API.getAppointments(this.state.userData._id)\n                .then(res =>\n                    this.setState({\n                        appointments: res.data\n                    }),\n                    setTimeout(() => { this.parseAppointments() }, 500)\n                )\n        }, 1000)\n    };\n\n    gatherSales = () => {\n        setTimeout(() => {\n            // console.log(\"Gathering sales using ID: \" + this.state.userData._id)\n            API.getSales(this.state.userData._id)\n                .then(res =>\n                    this.setState({\n                        sales: res.data\n                    })\n                    // ,setTimeout(() => { this.parseSales}, 500)\n                )\n        }, 1000)\n    };\n\n    gatherNotes = () => {\n        API.gatherNotes(this.state.userData._id)\n            .then(res =>\n                this.setState({\n\n                })\n            )\n    }\n\n    showApptViewer = () => {\n\n        if (this.state.showApptViewer === true) {\n            this.setState({\n                showApptViewer: false\n            })\n        } else {\n            this.setState({\n                showApptViewer: true\n            })\n        }\n\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////// Parse Functions for Data ////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n    parseAppointments = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        for (var i = 0; i < this.state.appointments.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.appointments[i].type) {\n                case \"CPD\":\n                    CPA++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    break;\n                case \"CND\":\n                    CNA++\n                    break;\n                case \"BND\":\n                    BNA++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: CPA,\n            BPAppts: BPA,\n            CCAppts: CCA,\n            BCAppts: BCA,\n            CNAppts: CNA,\n            BNAppts: BNA,\n            CSAppts: CSA,\n            BSAppts: BSA,\n            CRAppts: CRA,\n            BRAppts: BRA,\n            CTAppts: CTA,\n            BTAppts: BTA\n        })\n    }\n\n    parseDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.dialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    break;\n                case \"CND\":\n                    CND++\n                    break;\n                case \"BND\":\n                    BND++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: CPD,\n            BPDials: BPD,\n            CCDials: CCD,\n            BCDials: BCD,\n            CNDials: CND,\n            BNDials: BND,\n            CSDials: CSD,\n            BSDials: BSD,\n            CRDials: CRD,\n            BRDials: BRD,\n            CTDials: CTD,\n            BTDials: BTD\n        })\n    }\n\n    parseContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        for (var i = 0; i < this.state.contactData.length; i++) {\n            switch (this.state.contactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    break;\n                case \"CND\":\n                    CNC++\n                    break;\n                case \"BND\":\n                    BNC++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    break;\n                case \"CTD\":\n                    CTC++\n                    break;\n                case \"BTD\":\n                    BTC++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPContacts: CPC,\n            BPContacts: BPC,\n            CCContacts: CCC,\n            BCContacts: BCC,\n            CNContacts: CNC,\n            BNContacts: BNC,\n            CSContacts: CSC,\n            BSContacts: BSC,\n            CRContacts: CRC,\n            BRContacts: BRC,\n            CTContacts: CTC,\n            BTContacts: BTC\n        })\n    }\n\n    parseWeeklyAppointments = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.weeklyAppts.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.weeklyAppts[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            wCPAppts: wCPA,\n            wBPAppts: wBPA,\n            wCCAppts: wCCA,\n            wBCAppts: wBCA,\n            wCNAppts: wCNA,\n            wBNAppts: wBNA,\n            wCSAppts: wCSA,\n            wBSAppts: wBSA,\n            wCRAppts: wCRA,\n            wBRAppts: wBRA,\n            wCTAppts: wCTA,\n            wBTAppts: wBTA\n        })\n    }\n\n    parseWeeklyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.weeklyDials.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.weeklyDials[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            wCPDials: wCPD,\n            wBPDials: wBPD,\n            wCCDials: wCCD,\n            wBCDials: wBCD,\n            wCNDials: wCND,\n            wBNDials: wBND,\n            wCSDials: wCSD,\n            wBSDials: wBSD,\n            wCRDials: wCRD,\n            wBRDials: wBRD,\n            wCTDials: wCTD,\n            wBTDials: wBTD\n        })\n    }\n\n    parseWeeklyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.weeklyDials.length; i++) {\n\n            if (this.state.weeklyDials[i].contact === true) {\n                switch (this.state.weeklyDials[i].type) {\n                    case \"CPD\":\n                        wCPC++\n                        break;\n                    case \"BPD\":\n                        wBPC++\n                        break;\n                    case \"CCD\":\n                        wCCC++\n                        break;\n                    case \"BCD\":\n                        wBCC++\n                        break;\n                    case \"CND\":\n                        wCNC++\n                        break;\n                    case \"BND\":\n                        wBNC++\n                        break;\n                    case \"CSD\":\n                        wCSC++\n                        break;\n                    case \"BSD\":\n                        wBSC++\n                        break;\n                    case \"CRD\":\n                        wCRC++\n                        break;\n                    case \"BRD\":\n                        wBRC++\n                        break;\n                    case \"CTD\":\n                        wCTC++\n                        break;\n                    case \"BTD\":\n                        wBTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            wCPContacts: wCPC,\n            wBPContacts: wBPC,\n            wCCContacts: wCCC,\n            wBCContacts: wBCC,\n            wCNContacts: wCNC,\n            wBNContacts: wBNC,\n            wCSContacts: wCSC,\n            wBSContacts: wBSC,\n            wCRContacts: wCRC,\n            wBRContacts: wBRC,\n            wCTContacts: wCTC,\n            wBTContacts: wBTC\n        })\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////// Show / Hide Modules Functions///////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n    showDials = () => {\n\n        if (this.state.showDials === true) {\n            this.setState({\n                showDials: false\n            })\n        } else {\n            this.setState({\n                showDials: true,\n                showNotes: false,\n                showCreate: false,\n                showAnalytics: false,\n                showAppts: false,\n                showSales: false,\n                showSideBars: true\n            })\n        }\n    }\n\n    showNotes = () => {\n        if (this.state.showNotes === true) {\n            this.setState({\n                showNotes: false\n            })\n        } else {\n            this.setState({\n                showDials: false,\n                showNotes: true,\n                showCreate: false,\n                showAnalytics: false,\n                showAppts: false,\n                showSales: false,\n                showSideBars: true\n            })\n        }\n    }\n\n    showCreate = () => {\n        if (this.state.showCreate === true) {\n            this.setState({\n                showCreate: false\n            })\n        } else {\n            this.setState({\n                showDials: false,\n                showNotes: false,\n                showCreate: true,\n                showAnalytics: false,\n                showAppts: false,\n                showSales: false,\n                showSideBars: true\n            })\n        }\n    }\n\n    showAnalytics = () => {\n        if (this.state.showAnalytics === true) {\n            this.setState({\n                showAnalytics: false,\n                showSideBars: true\n            })\n        } else {\n            this.setState({\n                showDials: false,\n                showNotes: false,\n                showCreate: false,\n                showAnalytics: true,\n                showAppts: false,\n                showSales: false,\n                showSideBars: false\n            })\n        }\n    }\n\n    showAppts = () => {\n        if (this.state.showAppts === true) {\n            this.setState({\n                showAppts: false\n            })\n        } else {\n            this.setState({\n                showDials: false,\n                showNotes: false,\n                showCreate: false,\n                showAnalytics: false,\n                showAppts: true,\n                showSales: false,\n                showSideBars: true\n            })\n        }\n    }\n\n    showSales = () => {\n        if (this.state.showSales === true) {\n            this.setState({\n                showSales: false\n            })\n        } else {\n            this.setState({\n                showDials: false,\n                showNotes: false,\n                showCreate: false,\n                showAnalytics: false,\n                showAppts: false,\n                showSales: true\n            })\n        }\n    }\n\n    showSalesViewer = () => {\n        if (this.state.showSaleViewer === true) {\n            this.setState({\n                showSaleViewer: false\n            })\n        } else {\n            this.setState({\n                showSaleViewer: true\n            })\n        }\n    }\n\n    showNoteViewer = () => {\n        if (this.state.showNoteViewer === true) {\n            this.setState({\n                showNoteViewer: false\n            })\n        } else {\n            this.setState({\n                showNoteViewer: true\n            })\n        }\n    }\n\n\n    handleScopeChange = (e) => {\n        e.preventDefault()\n        console.log(this.state.scopeSelected)\n        if (this.state.scopeSelected === \"viewAll\") {\n            this.parseDials()\n            this.parseContacts()\n            this.parseAppointments()\n        } else if (this.state.scopeSelected === \"viewWeekly\") {\n            this.getWeeklyDials()\n            this.getWeeklyAppts()\n        } else if (this.state.scopeSelected === \"viewMonthly\") {\n            this.getMonthlyDials()\n            this.getMonthlyAppts()\n        }\n    }\n\n\n    getWeeklyDials = () => {\n        API.getWeeklyDials(this.state.userData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    weeklyDials: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseWeeklyDials()\n            this.parseWeeklyContacts()\n        }, 1000)\n    }\n\n    getMonthlyDials = () => {\n        API.getMonthlyDials(this.state.userData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    monthlyDials: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseMonthlyDials()\n            this.parseMonthlyContacts()\n        }, 1000)\n    }\n\n    getMonthlyAppts = () => {\n        API.getMonthlyAppts(this.state.userData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    monthlyAppts: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseMonthlyAppts()\n        }, 1000)\n    }\n\n\n    getWeeklyAppts = () => {\n        API.getWeeklyAppts(this.state.userData._id)\n            .then(res => {\n                this.setState({\n                    weeklyAppts: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseWeeklyAppointments()\n        }, 1000)\n    }\n\n\n    parseWeeklyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.weeklyDials.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.weeklyDials[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: wCPD,\n            BPDials: wBPD,\n            CCDials: wCCD,\n            BCDials: wBCD,\n            CNDials: wCND,\n            BNDials: wBND,\n            CSDials: wCSD,\n            BSDials: wBSD,\n            CRDials: wCRD,\n            BRDials: wBRD,\n            CTDials: wCTD,\n            BTDials: wBTD\n        })\n    }\n\n    parseMonthlyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.monthlyDials.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.monthlyDials[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: wCPD,\n            BPDials: wBPD,\n            CCDials: wCCD,\n            BCDials: wBCD,\n            CNDials: wCND,\n            BNDials: wBND,\n            CSDials: wCSD,\n            BSDials: wBSD,\n            CRDials: wCRD,\n            BRDials: wBRD,\n            CTDials: wCTD,\n            BTDials: wBTD\n        })\n    }\n\n\n\n\n    parseWeeklyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.weeklyDials.length; i++) {\n\n            if (this.state.weeklyDials[i].contact === true) {\n                switch (this.state.weeklyDials[i].type) {\n                    case \"CPD\":\n                        wCPC++\n                        break;\n                    case \"BPD\":\n                        wBPC++\n                        break;\n                    case \"CCD\":\n                        wCCC++\n                        break;\n                    case \"BCD\":\n                        wBCC++\n                        break;\n                    case \"CND\":\n                        wCNC++\n                        break;\n                    case \"BND\":\n                        wBNC++\n                        break;\n                    case \"CSD\":\n                        wCSC++\n                        break;\n                    case \"BSD\":\n                        wBSC++\n                        break;\n                    case \"CRD\":\n                        wCRC++\n                        break;\n                    case \"BRD\":\n                        wBRC++\n                        break;\n                    case \"CTD\":\n                        wCTC++\n                        break;\n                    case \"BTD\":\n                        wBTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseMonthlyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.monthlyDials.length; i++) {\n\n            if (this.state.monthlyDials[i].contact === true) {\n                switch (this.state.monthlyDials[i].type) {\n                    case \"CPD\":\n                        wCPC++\n                        break;\n                    case \"BPD\":\n                        wBPC++\n                        break;\n                    case \"CCD\":\n                        wCCC++\n                        break;\n                    case \"BCD\":\n                        wBCC++\n                        break;\n                    case \"CND\":\n                        wCNC++\n                        break;\n                    case \"BND\":\n                        wBNC++\n                        break;\n                    case \"CSD\":\n                        wCSC++\n                        break;\n                    case \"BSD\":\n                        wBSC++\n                        break;\n                    case \"CRD\":\n                        wCRC++\n                        break;\n                    case \"BRD\":\n                        wBRC++\n                        break;\n                    case \"CTD\":\n                        wCTC++\n                        break;\n                    case \"BTD\":\n                        wBTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseWeeklyAppointments = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.weeklyAppts.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.weeklyAppts[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n    parseMonthlyAppts = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.monthlyAppts.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.monthlyAppts[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                {/* <SideNavPage\n                    dialOption={this.showDials}\n                    noteOption={this.showNotes}\n                    createOption={this.showCreate}\n                    analyzeOption={this.showAnalytics}\n                    scheduleOption={this.showAppts}\n                    salesOption={this.showSales}\n                /> */}\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ padding: '30px' }}>\n                    <div className=\"navbar-brand\" style={{color: 'whitesmoke'}}>{this.state.userData.firstName} {this.state.userData.lastName} Dashboard</div>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showDials}>Home</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showDials}>Dialing Tool</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showAnalytics}>Analytics</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showNotes}>Notes</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showAppts}>Schedule</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showSales}>Sales</div>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <div className=\"container\" style={{ backgroundColor: 'transparent' }}>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n\n                        </div>\n                    </div>\n                   \n\n                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                    {/*  /////////////////////////    Analytics Module      /////////////////////////////// */}\n                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n\n\n                            {\n                                this.state.showAnalytics ?\n                                    <div id=\"protege-data-viewer-container\" style={{ marginTop: '50px' }}>\n                                        <div className=\"row\">\n                                            <div className=\"col-1\"></div>\n                                            <div className=\"col-10\">\n                                                <div className=\"jumbotron\" style={{ backgroundColor: 'rgba(0,0,0,0.4)', height: '200px' }}>\n                                                    <h4 style={{ textAlign: 'center', color: 'white' }}>Please select your Scope</h4>\n                                                    <form>\n                                                        <div style={{ textAlign: 'center' }}>\n                                                            <select style={{}} id=\"protegeSelector\" value={this.state.scopeSelected} onChange={this.handleInputChange} type=\"text\" name=\"scopeSelected\" className=\"customDropMentor\" placeholder=\"Choose your protege\">\n                                                                <option value={\"none\"}>---------------</option>\n                                                                <option value={\"viewAll\"}>All Data</option>\n                                                                <option value={\"viewWeekly\"}>Weekly Data</option>\n                                                                <option value={\"viewMonthly\"}>Monthly Data</option>\n                                                            </select>\n                                                            <br />\n                                                            <button style={{}} onClick={this.handleScopeChange} className=\"btn btn-sm btn-outline-light\">Apply</button>\n                                                            <br />\n                                                        </div>\n                                                    </form>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-1\"></div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-1\"></div>\n                                            <div className=\"col-10\">\n                                                <MainDataViewer\n                                                    userID={this.state.userData._id}\n                                                    contactData={this.state.contactData}\n                                                    dialData={this.state.dialData}\n                                                    apptData={this.state.appointments}\n                                                    CPAppts={this.state.CPAppts}\n                                                    BPAppts={this.state.BPAppts}\n                                                    CCAppts={this.state.CCAppts}\n                                                    BCAppts={this.state.BCAppts}\n                                                    CNAppts={this.state.CNAppts}\n                                                    BNAppts={this.state.BNAppts}\n                                                    CPDials={this.state.CPDials}\n                                                    BPDials={this.state.BPDials}\n                                                    CCDials={this.state.CCDials}\n                                                    BCDials={this.state.BCDials}\n                                                    CNDials={this.state.CNDials}\n                                                    BNDials={this.state.BNDials}\n                                                    CPContacts={this.state.CPContacts}\n                                                    BPContacts={this.state.BPContacts}\n                                                    CCContacts={this.state.CCContacts}\n                                                    BCContacts={this.state.BCContacts}\n                                                    CNContacts={this.state.CNContacts}\n                                                    BNContacts={this.state.BNContacts}\n                                                    CSDials={this.state.CSDials}\n                                                    BSDials={this.state.BSDials}\n                                                    CSContacts={this.state.CSContacts}\n                                                    BSContacts={this.state.BSContacts}\n                                                    CSAppts={this.state.CSAppts}\n                                                    BSAppts={this.state.BSAppts}\n                                                    CRDials={this.state.CRDials}\n                                                    BRDials={this.state.BRDials}\n                                                    CRContacts={this.state.CRContacts}\n                                                    BRContacts={this.state.BRContacts}\n                                                    CRAppts={this.state.CRAppts}\n                                                    BRAppts={this.state.BRAppts}\n                                                    CTDials={this.state.CTDials}\n                                                    BTDials={this.state.BTDials}\n                                                    CTContacts={this.state.CTContacts}\n                                                    BTContacts={this.state.BTContacts}\n                                                    CTAppts={this.state.CTAppts}\n                                                    BTAppts={this.state.BTAppts}\n                                                    userData={this.state.userData}\n                                                // sources={this.state.leadSource}\n                                                />\n                                            </div>\n                                            <div className=\"col-1\"></div>\n                                        </div>\n                                    </div>\n                                    : null\n                            }\n\n\n                            <div className=\"row\" style={{ marginTop: '20px' }}>\n                                <div className=\"col-lg-6\">\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  /////////////////////////    Dial Controller       /////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                    {this.state.showDials ?\n                                        <div id=\"call-button-container\" style={{ textAlign: 'center' }}>\n                                            <div className=\"row\">\n\n                                                <div className=\"col-lg-12\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col\">\n\n                                                            <ProtegeCallBtnContainer2\n                                                                rerender={this.getUserData}\n                                                                user={this.state.userData}\n                                                                userID={this.state.userData._id}\n                                                                source={this.state.leadSource}\n                                                                targetMarket={this.state.targetMarket}\n                                                                userData={this.state.userData}\n                                                                setParentState={this.setParentState}\n                                                                setParentStateTargetMkt={this.setParentStateTargetMkt}\n                                                                username={this.state.user}\n                                                                // userID={this.props.user.uid}\n                                                                mentors={this.state.mentors}\n                                                            />\n\n                                                        </div>\n                                                    </div>\n                                                    <br />\n                                                    <div className=\"row\">\n                                                        <div className=\"col-6\" style={{ height: '', overflow: 'auto', textAlign: 'center' }}>\n                                                            <div className=\"card\">\n                                                                <SourceCreator userData={this.state.userData} />\n                                                            </div>\n                                                        </div>\n                                                        <br />\n                                                        <div className=\"col-6\" style={{ height: '', overflow: 'auto', textAlign: 'center' }}>\n                                                            <div className=\"card\">\n                                                                <TargetMarketCreator userData={this.state.userData} />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : null}\n\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  /////////////////////////    Note Module           /////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                    {this.state.showNotes ?\n                                        <div id=\"note-container\">\n                                            <div className=\"row\">\n                                                {/* <div className=\"card\" style={{ padding: '50px', backgroundColor: 'rgba(77,160,255,0.80)', color: 'whitesmoke' }}>\n                                                    <h2 style={{ textAlign: 'center', padding: '20px', backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', margin: '20px', borderRadius: '10px' }}>N O T E S</h2> */}\n                                                <NoteCreator\n                                                    userData={this.state.userData}\n                                                    userID={this.state.userData._id}\n                                                    proteges={this.state.proteges}\n                                                    mentors={this.state.mentors}\n                                                />\n                                                {/* <hr /> */}\n                                                <br />\n                                                <br />\n                                                <div className=\"card bg-light\" style={{ marginTop: '15px' }}>\n\n                                                    <div className=\"card-header\">\n                                                        <h4 style={{ textAlign: 'center', paddingTop: '5px', width: '100%' }}>Your Notes</h4>\n                                                        {/* <span button className=\"btn btn-sm btn-outline-dark\" onClick={this.showNoteViewer}>Show</span> */}\n\n                                                    </div>\n\n                                                    <div className=\"card-body bg-dark\" style={{ padding: '0px 10px 0px 10px', marginBottom: '20px' }}>\n                                                        {/* {this.state.showNoteViewer ? */}\n                                                        <NoteViewer\n                                                            userData={this.state.userData}\n                                                            userID={this.state.userData._id}\n                                                            proteges={this.state.proteges}\n                                                            mentors={this.state.mentors}\n                                                            taggedNotes={this.state.notes}\n                                                            rerender={this.getProtegeNoteData}\n                                                            fontSize={'20px'}\n                                                            height={'600px'}\n                                                        />\n                                                        {/* : null} */}\n                                                    </div>\n                                                    {/* <div style={{ height: '20px', color: 'black', backgroundColor: 'rgba(0,0,0,0.50)' }}>\n                                                    </div> */}\n                                                </div>\n                                                {/* </div> */}\n                                            </div>\n                                        </div>\n                                        : null}\n\n                                    {/*  /////////////////////////////'///////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  /////////////////////////    Creation Tool         /////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                    {this.state.showCreate ?\n                                        <div className=\"col card\" style={{ padding: '50px', backgroundColor: 'rgba(77,160,255,0.80)', color: 'whitesmoke' }}>\n                                            <h2 style={{ textAlign: 'center', padding: '20px', backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', margin: '20px', borderRadius: '10px' }}>C R E A T E</h2>\n                                            <div className=\"row\">\n\n                                                <div className=\"col-md-6\" style={{ padding: '2%', textAlign: 'center' }}>\n                                                    {/* <p>Lead Source Creation:</p> */}\n                                                    <SourceCreator userData={this.state.userData} />\n                                                    {/* Add a View/Edit Source option */}\n                                                    <hr />\n                                                </div>\n                                                <div className=\"col-md-6\" style={{ padding: '2%', textAlign: 'center' }}>\n                                                    {/* <p>Target Market Creation:</p> */}\n                                                    <TargetMarketCreator userData={this.state.userData} />\n                                                    {/* Add a View/Edit Target Market option */}\n                                                </div>\n                                                <div className=\"col-12\" style={{ padding: '2%' }}>\n                                                    <p></p>\n                                                    <AppointmentCreator\n                                                        userID={this.state.userData._id}\n                                                        username={this.state.user}\n                                                        rerender={this.gatherAppointments}\n                                                        userData={this.state.userData}\n                                                        mentors={this.state.mentors}\n\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\" style={{ padding: '2%' }}>\n                                                    <p></p>\n                                                    <SalesCreator\n                                                        userID={this.state.userData._id}\n                                                        username={this.state.user}\n                                                        // rerender={this.gatherSales}\n                                                        userData={this.state.userData}\n                                                        mentors={this.state.mentors}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : null}\n\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  /////////////////////////    Analytics Module      /////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                    {this.state.showAnalyticsMini ?\n                                        <div id=\"protege-data-viewer-container\">\n\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <MainDataViewer\n                                                        userID={this.state.userData._id}\n                                                        contactData={this.state.contactData}\n                                                        dialData={this.state.dialData}\n                                                        apptData={this.state.appointments}\n                                                        CPAppts={this.state.CPAppts}\n                                                        BPAppts={this.state.BPAppts}\n                                                        CCAppts={this.state.CCAppts}\n                                                        BCAppts={this.state.BCAppts}\n                                                        CNAppts={this.state.CNAppts}\n                                                        BNAppts={this.state.BNAppts}\n                                                        CPDials={this.state.CPDials}\n                                                        BPDials={this.state.BPDials}\n                                                        CCDials={this.state.CCDials}\n                                                        BCDials={this.state.BCDials}\n                                                        CNDials={this.state.CNDials}\n                                                        BNDials={this.state.BNDials}\n                                                        CPContacts={this.state.CPContacts}\n                                                        BPContacts={this.state.BPContacts}\n                                                        CCContacts={this.state.CCContacts}\n                                                        BCContacts={this.state.BCContacts}\n                                                        CNContacts={this.state.CNContacts}\n                                                        BNContacts={this.state.BNContacts}\n                                                        CSDials={this.state.CSDials}\n                                                        BSDials={this.state.BSDials}\n                                                        CSContacts={this.state.CSContacts}\n                                                        BSContacts={this.state.BSContacts}\n                                                        CSAppts={this.state.CSAppts}\n                                                        BSAppts={this.state.BSAppts}\n                                                        CRDials={this.state.CRDials}\n                                                        BRDials={this.state.BRDials}\n                                                        CRContacts={this.state.CRContacts}\n                                                        BRContacts={this.state.BRContacts}\n                                                        CRAppts={this.state.CRAppts}\n                                                        BRAppts={this.state.BRAppts}\n                                                        CTDials={this.state.CTDials}\n                                                        BTDials={this.state.BTDials}\n                                                        CTContacts={this.state.CTContacts}\n                                                        BTContacts={this.state.BTContacts}\n                                                        CTAppts={this.state.CTAppts}\n                                                        BTAppts={this.state.BTAppts}\n                                                        userData={this.state.userData}\n                                                    // sources={this.state.leadSource}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : null}\n\n\n\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  /////////////////////////    Appointment Tool      /////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                    {this.state.showAppts ?\n\n                                        <div id=\"appointments-container\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\" style={{ zIndex: 0, padding: '20px' }}>\n                                                    <div className=\"card\">\n                                                        <h4 style={{ textAlign: 'center' }}>Quickview Calendar</h4>\n                                                        <MainCalendar\n                                                            appointments={this.state.appointments}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <p></p>\n                                                    <AppointmentCreator\n                                                        userID={this.state.userData._id}\n                                                        username={this.state.user}\n                                                        rerender={this.gatherAppointments}\n                                                        userData={this.state.userData}\n                                                        mentors={this.state.mentors}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <br />\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <div style={{ width: '100%' }}\n                                                    // className=\"card\" style={{ marginBottom: '10px', marginTop: '10px', textAlign: \"left\", padding: 10, height: '', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8)' }}\n                                                    >\n                                                        <div className=\"card bg-light\">\n                                                            <div className=\"card-header\">\n                                                                <h4 style={{ textAlign: 'center', padding: '10%', color: 'black', margin: '20px' }}>Appointment Manager\n                                                                <br />\n\n                                                                    {/* <span button className=\"btn btn-sm btn-outline-dark\" onClick={this.showApptViewer}>Show</span> */}\n                                                                </h4>\n                                                            </div>\n                                                            {/* {this.state.showApptViewer ? */}\n                                                            <div className=\"card-body bg-dark\" style={{ padding: '0px 10px 0px 10px', marginBottom: '20px' }}>\n                                                                {\n                                                                    this.state.appointments ?\n                                                                        <div style={{ height: '800px', overflow: 'auto' }}>\n                                                                            {\n                                                                                this.state.appointments.map(appt => (\n                                                                                    <AppointmentItem\n                                                                                        key={appt._id}\n                                                                                        id={appt._id}\n                                                                                        apptname={appt.apptname}\n                                                                                        mentor={appt.mentor}\n                                                                                        type={appt.type}\n                                                                                        held={appt.held}\n                                                                                        sold={appt.sold}\n                                                                                        dialer={appt.dialer}\n                                                                                        source={appt.source}\n                                                                                        date={appt.date}\n                                                                                        notes={appt.notes}\n                                                                                        username={this.state.user}\n                                                                                        rerender={this.gatherAppointments}\n                                                                                        user={this.state.userData}\n                                                                                        targetMarket={appt.targetMarket}\n                                                                                        mentors={this.state.mentors}\n                                                                                        headerFont={'20px'}\n                                                                                        textFont={'14px'}\n                                                                                        time={appt.time}\n                                                                                    />\n                                                                                ))\n                                                                            }\n                                                                        </div>\n                                                                        : null\n                                                                }\n                                                            </div>\n                                                            {/* : null} */}\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : null}\n\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  /////////////////////////    Sales Tool            /////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                    {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                    {this.state.showSales ?\n                                        <div id=\"sales-container\">\n                                            <div className=\"row\">\n                                                {/* <div className=\"col-12\"> */}\n\n                                                <SalesCreator\n                                                    userID={this.state.userData._id}\n                                                    username={this.state.user}\n                                                    // rerender={this.gatherSales}\n                                                    userData={this.state.userData}\n                                                    mentors={this.state.mentors}\n                                                />\n                                                {/* </div> */}\n                                            </div>\n                                            <br />\n                                            <br />\n\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <div style={{ width: '%' }}>\n\n                                                        {/* <div className=\"card\" style={{ marginBottom: '10px', marginTop: '10px', textAlign: \"left\", padding: 10, height: '', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8)' }}> */}\n                                                        <div className=\"card\">\n                                                            <div className=\"card-header\">\n                                                                <h4 style={{ textAlign: 'center', padding: '10%', backgroundColor: '', color: 'black' }}>Your Sales<br /><span><button className=\"btn btn-outline-dark\" onClick={this.showSalesViewer}>Show</button></span></h4>\n                                                            </div>\n                                                            {this.state.showSaleViewer ?\n                                                                <div>\n                                                                    {this.state.sales ?\n                                                                        <div className=\"card-body\">\n                                                                            <div style={{ height: '400px', overflow: 'auto' }}>\n                                                                                {this.state.sales.map(sale => (\n                                                                                    <SalesItem\n                                                                                        key={sale._id}\n                                                                                        id={sale._id}\n                                                                                        saleType={sale.clientType}\n                                                                                        saleName={sale.saleName}\n                                                                                        saleSource={sale.leadSource}\n                                                                                        saleNotes={sale.saleNotes}\n                                                                                        saleDate={sale.saleDate}\n                                                                                        saleTargetMkt={sale.targetMarket}\n                                                                                        saleCommission={sale.commission}\n                                                                                        salePercentage={sale.percentageProtege}\n                                                                                        saleTaggedPercentage={sale.percentageMentor}\n                                                                                        saleProduct={sale.product}\n                                                                                        saleWriter={sale.protege}\n                                                                                        saleTagged={sale.mentor}\n                                                                                        mentors={this.state.mentors}\n                                                                                        userData={this.state.userData}\n                                                                                    />\n                                                                                ))\n                                                                                } </div>\n                                                                        </div>\n                                                                        : null}\n                                                                </div>\n                                                                : null}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : null}\n\n                                </div>\n\n                                {this.state.showSideBars ?\n\n                                    <div className=\"col-lg-6\">\n\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n\n                                                {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                                {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                                {/*  /////////////////////////    Middle Quick Data Viewer       ////////////////////// */}\n                                                {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                                {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                                <div className=\"side-date-container\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12\">\n                                                            {this.state.weeklyDials ?\n                                                                <DialDataSide\n                                                                    userID={this.state.userData._id}\n                                                                    dialData={this.state.weeklyDials}\n                                                                />\n                                                                : null}\n                                                        </div>\n                                                        <br />\n                                                        <br />\n                                                        {this.state.showDials ?\n                                                            <div></div>\n                                                            :\n                                                            <div className=\"row\" style={{ padding: '10px' }}>\n                                                                <div className=\"col-12\" style={{ height: '', textAlign: 'center' }}>\n                                                                    <div className=\"card\">\n                                                                        <SourceCreator userData={this.state.userData} />\n                                                                    </div>\n                                                                </div>\n                                                                <br />\n                                                                <br />\n                                                                <div className=\"col-12\" style={{ height: '', textAlign: 'center' }}>\n                                                                    <div className=\"card\">\n                                                                        <TargetMarketCreator userData={this.state.userData} />\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                            {/*  /////////////////////////    Side Data Tools      /////////////////////////////// */}\n                                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                                            <br />\n                                            <br />\n                                            <div className=\"col-md-6\">\n                                                <div id=\"\">\n                                                    <div className=\"row\">\n\n                                                        {/* <div className=\"col-12\"> */}\n                                                        <div style={{ width: '100%', marginBottom: '10px' }}>\n                                                            <AppointmentCreator\n                                                                userID={this.state.userData._id}\n                                                                username={this.state.user}\n                                                                rerender={this.gatherAppointments}\n                                                                userData={this.state.userData}\n                                                                mentors={this.state.mentors}\n\n                                                            />\n                                                        </div>\n                                                        {/* </div> */}\n                                                        <br />\n                                                        <br />\n                                                    </div>\n\n                                                    <div className=\"row\">\n                                                        {/* <div className=\"col-12\"> */}\n\n                                                        <div style={{ width: '100%', marginBottom: '10px' }}\n                                                        // style={{ marginBottom: '10px', textAlign: \"left\", padding: 10, height: '', overflow: 'auto' }}\n                                                        >\n                                                            <div className=\"card bg-light\">\n                                                                <div className=\"card-header\">\n                                                                    <h4 style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '0px' }}>View Appointments\n                                                                    <br />\n                                                                        <span>< button className=\"btn btn-sm btn-outline-dark\" onClick={this.showApptViewer}>Show</button></span>\n                                                                        {/* <span button className=\"btn btn-sm btn-outline-dark\" onClick={this.showAppts}>Show Full</span> */}\n                                                                    </h4>\n                                                                </div>\n\n                                                                {/* <div className=\"card-body\"> */}\n                                                                {this.state.showApptViewer ?\n                                                                    <div className=\"card-body bg-dark\" style={{ padding: '0px 5px 0px 5px' }}>\n                                                                        {\n                                                                            this.state.appointments ?\n                                                                                <div style={{ height: '400px', overflow: 'auto', marginTop: '5px' }}>\n                                                                                    {\n                                                                                        this.state.appointments.map(appt => (\n                                                                                            <AppointmentItem\n                                                                                                key={appt._id}\n                                                                                                id={appt._id}\n                                                                                                apptname={appt.apptname}\n                                                                                                type={appt.type}\n                                                                                                held={appt.held}\n                                                                                                sold={appt.sold}\n                                                                                                dialer={appt.dialer}\n                                                                                                source={appt.source}\n                                                                                                date={appt.date}\n                                                                                                notes={appt.notes}\n                                                                                                username={this.state.user}\n                                                                                                rerender={this.gatherAppointments}\n                                                                                                user={this.state.userData}\n                                                                                                targetMarket={appt.targetMarket}\n                                                                                                mentors={this.state.mentors}\n                                                                                                time={appt.time}\n                                                                                            />\n                                                                                        ))\n                                                                                    }\n                                                                                </div>\n                                                                                : null\n                                                                        }\n                                                                    </div> : null}\n                                                                {/* </div> */}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    {/* </div> */}\n                                                    {/* <div className=\"col-12\" style={{ zIndex: 0 }}> */}\n                                                    {/* <div className=\"card col-12\" style={{ zIndex: 0, marginBottom: '10px', textAlign: 'center', padding: 10, height: '350px', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8', padding: '10px' }}> */}\n                                                    <div className=\"row\" style={{ marginBottom: '10px' }}>\n                                                        {/* <div className=\"col-12\" style={{ zIndex: 0, marginBottom: '10px', textAlign: 'center', padding: 10, height: '250px', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8', padding: '10px' }}> */}\n                                                        <NoteCreator\n                                                            userData={this.state.userData}\n                                                            userID={this.state.userData._id}\n                                                            proteges={this.state.proteges}\n                                                            mentors={this.state.mentors}\n                                                            rerender={this.getProtegeNoteData}\n                                                        />\n                                                        {/* </div> */}\n                                                    </div>\n\n                                                    <div className=\"row\">\n                                                        {/* <div style={{ height: '50px', textAlign: 'center', color: 'white', backgroundColor: 'rgba(0,0,0,0.50)' }}> */}\n                                                        {/* <p style={{ textAlign: 'center', paddingTop: '5px' }}>Your Notes</p> */}\n                                                        {/* </div> */}\n\n                                                        <div className=\"card bg-light\" style={{ marginBottom: '10px', width: '100%' }}>\n                                                            <div className=\"card-header\">\n                                                                <h4 style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '0px' }}>\n\n                                                                    View Notes\n                                                                    <br />\n                                                                    <span>< button className=\"btn btn-sm btn-outline-dark\" onClick={this.showNoteViewer}>Show</button></span>\n\n                                                                </h4>\n                                                            </div>\n\n                                                            {this.state.showNoteViewer ?\n                                                                <div className=\"card-body bg-dark\" style={{ padding: '0px 5px 0px 5px' }}>\n                                                                    <div style={{ fontSize: '12px' }}>\n                                                                        <NoteViewer\n                                                                            userData={this.state.userData}\n                                                                            userID={this.state.userData._id}\n                                                                            proteges={this.state.proteges}\n                                                                            mentors={this.state.mentors}\n                                                                            taggedNotes={this.state.notes}\n                                                                            rerender={this.getProtegeNoteData}\n                                                                            fontSize={'14px'}\n                                                                            height={\"300px\"}\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                                : <div style={{ height: '20px' }}></div>}\n\n                                                            {/* <div style={{ height: '20px', color: 'black', backgroundColor: 'rgba(0,0,0,0)' }}> */}\n                                                            {/* </div> */}\n                                                        </div>\n                                                    </div>\n\n                                                    {/* </div> */}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/*  */}\n                                    </div>\n\n                                    : null}\n                                {/* </div> */}\n                            </div>\n                        </div >\n                    </div >\n                </div>\n            </div >\n\n        )\n    }\n}\n\nexport default ProtegeDash","import React, { Component } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport \"./style.css\"\n\nclass MentorDataViewer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numContacts: 0,\n            numScheduled: 0,\n            date: \"\",\n            parsedDials: \"\",\n            showDialChart: true,\n            showContactChart: true,\n            showApptChart: true,\n            showCashflowDials: false,\n            showCashflowContacts: false,\n            showCashflowAppts: false,\n            showBusinessDials: false,\n            showBusinessContacts: false,\n            showBusinessAppts: false,\n            showProspectPerformance: false,\n            showClientPerformance: false,\n            showNaturalPerformance: false,\n            showSuspectPerformance: false,\n            showReferralPerformance: false,\n            showTargetPerformance: false,\n            leadSource: \"none\",\n            targetMarket: \"none\",\n            sourceDialData: \"\",\n            sourceContactData: \"\",\n            sourceApptData: \"\",\n            showSourcePerformance: false,\n            showSelectedTargetPerformance: false,\n            showAnalyticsData: false\n        }\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    viewDialChart = () => {\n        if (this.state.showDialChart === true) {\n            this.setState({\n                showDialChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: true,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewContactChart = () => {\n        if (this.state.showContactChart === true) {\n            this.setState({\n                showContactChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: true,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewApptChart = () => {\n        if (this.state.showApptChart === true) {\n            this.setState({\n                showApptChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: true,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFDialChart = () => {\n        if (this.state.showCashflowDials === true) {\n            this.setState({\n                showCashflowDials: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: true,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFContactChart = () => {\n        if (this.state.showCashflowContacts === true) {\n            this.setState({\n                showCashflowContacts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: true,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFApptChart = () => {\n        if (this.state.showCashflowAppts === true) {\n            this.setState({\n                showCashflowAppts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: true,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBODialChart = () => {\n        if (this.state.showBusinessDials === true) {\n            this.setState({\n                showBusinessDials: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: true,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBOContactChart = () => {\n        if (this.state.showBusinessContacts === true) {\n            this.setState({\n                showBusinessContacts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: true,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBOApptChart = () => {\n        if (this.state.showBusinessAppts === true) {\n            this.setState({\n                showBusinessAppts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: true,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewProspectPerformance = () => {\n        if (this.state.showProspectPerformance === true) {\n            this.setState({\n                showProspectPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: true,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewClientPerformance = () => {\n        if (this.state.showClientPerformance === true) {\n            this.setState({\n                showClientPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: true,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewNaturalPerformance = () => {\n        if (this.state.showNaturalPerformance === true) {\n            this.setState({\n                showNaturalPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: true,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSuspectPerformance = () => {\n        if (this.state.showSuspectPerformance === true) {\n            this.setState({\n                showSuspectPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: true,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewReferralPerformance = () => {\n        if (this.state.showReferralPerformance === true) {\n            this.setState({\n                showReferralPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: true,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewTargetPerformance = () => {\n        if (this.state.showTargetPerformance === true) {\n            this.setState({\n                showTargetPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: true,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSourcePerformance = () => {\n        if (this.state.showSourcePerformance === true) {\n            this.setState({\n                showSourcePerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: true,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSelectedTargetPerformance = () => {\n        if (this.state.showSelectedTargetPerformance === true) {\n            this.setState({\n                showSelectedTargetPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: true\n            })\n        }\n    }\n\n\n    gatherSourceData = (event) => {\n        event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.leadSource)\n        // var parsedDials = []\n        var parsedSourceData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.props.dialData.length; i++) {\n            if (this.props.dialData[i].source === this.state.leadSource) {\n                parsedSourceData.parsedDials.push(this.props.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.props.contactData.length; j++) {\n            if (this.props.contactData[j].source === this.state.leadSource) {\n                parsedSourceData.parsedContacts.push(this.props.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.props.apptData.length; k++) {\n            if (this.props.apptData[k].source === this.state.leadSource) {\n                parsedSourceData.parsedAppts.push(this.props.apptData[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                sourceDialData: parsedSourceData.parsedDials,\n                sourceContactData: parsedSourceData.parsedContacts,\n                sourceApptData: parsedSourceData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseSourceAppts()\n                this.parseSourceContacts()\n                this.parseSourceDials()\n\n                setTimeout(() => { this.viewSourcePerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    parseSourceDials = () => {\n        console.log(\"Parsing: \" + this.state.sourceDialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        var SDials = 0;\n        for (var i = 0; i < this.state.sourceDialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.sourceDialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    SDials++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    SDials++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    SDials++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    SDials++\n                    break;\n                case \"CND\":\n                    CND++\n                    SDials++\n                    break;\n                case \"BND\":\n                    BND++\n                    SDials++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    SDials++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    SDials++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    SDials++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    SDials++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    SDials++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    SDials++\n                    break;\n                default:\n                    SDials++\n                    break;\n            }\n        }\n        this.setState({\n            SCPDials: CPD,\n            SBPDials: BPD,\n            SCCDials: CCD,\n            SBCDials: BCD,\n            SCNDials: CND,\n            SBNDials: BND,\n            SCSDials: CSD,\n            SBSDials: BSD,\n            SCRDials: CRD,\n            SBRDials: BRD,\n            SCTDials: CTD,\n            SBTDials: BTD,\n            SourceDials: SDials\n        })\n    }\n\n\n    parseSourceContacts = () => {\n        console.log(\"Parsing: \" + this.state.sourceContactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        var SContacts = 0;\n        for (var i = 0; i < this.state.sourceContactData.length; i++) {\n            switch (this.state.sourceContactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    SContacts++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    SContacts++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    SContacts++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    SContacts++\n                    break;\n                case \"CND\":\n                    CNC++\n                    SContacts++\n                    break;\n                case \"BND\":\n                    BNC++\n                    SContacts++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    SContacts++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    SContacts++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    SContacts++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    SContacts++\n                    break;\n                case \"CTD\":\n                    SContacts++\n                    CTC++\n                    break;\n                case \"BTD\":\n                    SContacts++\n                    BTC++\n                    break;\n                default:\n                    SContacts++\n                    break;\n            }\n        }\n        this.setState({\n            SCPContacts: CPC,\n            SBPContacts: BPC,\n            SCCContacts: CCC,\n            SBCContacts: BCC,\n            SCNContacts: CNC,\n            SBNContacts: BNC,\n            SCSContacts: CSC,\n            SBSContacts: BSC,\n            SCRContacts: CRC,\n            SBRContacts: BRC,\n            SCTContacts: CTC,\n            SBTContacts: BTC,\n            SourceContacts: SContacts\n        })\n    }\n\n    parseSourceAppts = () => {\n        console.log(\"Parsing: \" + this.state.sourceApptData)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        var SAppts = 0;\n        for (var i = 0; i < this.state.sourceApptData.length; i++) {\n            console.log(this.state.sourceApptData[i])\n            switch (this.state.sourceApptData[i].type) {\n                case \"CPD\":\n                    CPA++\n                    SAppts++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    SAppts++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    SAppts++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    SAppts++\n                    break;\n                case \"CND\":\n                    CNA++\n                    SAppts++\n                    break;\n                case \"BND\":\n                    BNA++\n                    SAppts++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    SAppts++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    SAppts++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    SAppts++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    SAppts++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    SAppts++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    SAppts++\n                    break;\n                default:\n                    SAppts++\n                    break;\n            }\n        }\n        this.setState({\n            SCPAppts: CPA,\n            SBPAppts: BPA,\n            SCCAppts: CCA,\n            SBCAppts: BCA,\n            SCNAppts: CNA,\n            SBNAppts: BNA,\n            SCSAppts: CSA,\n            SBSAppts: BSA,\n            SCRAppts: CRA,\n            SBRAppts: BRA,\n            SCTAppts: CTA,\n            SBTAppts: BTA,\n            SourceAppts: SAppts\n        })\n    }\n\n\n\n    gatherTargetData = (event) => {\n        event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.targetMarket)\n        // var parsedDials = []\n        var parsedTargetData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.props.dialData.length; i++) {\n            if (this.props.dialData[i].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedDials.push(this.props.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.props.contactData.length; j++) {\n            if (this.props.contactData[j].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedContacts.push(this.props.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.props.apptData.length; k++) {\n            if (this.props.apptData[k].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedAppts.push(this.props.apptData[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                targetDialData: parsedTargetData.parsedDials,\n                targetContactData: parsedTargetData.parsedContacts,\n                targetApptData: parsedTargetData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseTargetAppts()\n                this.parseTargetContacts()\n                this.parseTargetDials()\n\n                setTimeout(() => { this.viewSelectedTargetPerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    parseTargetDials = () => {\n        console.log(\"Parsing: \" + this.state.targetDialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        var TDials = 0;\n        for (var i = 0; i < this.state.targetDialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.targetDialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    TDials++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    TDials++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    TDials++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    TDials++\n                    break;\n                case \"CND\":\n                    CND++\n                    TDials++\n                    break;\n                case \"BND\":\n                    BND++\n                    TDials++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    TDials++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    TDials++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    TDials++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    TDials++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    TDials++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    TDials++\n                    break;\n                default:\n                    TDials++\n                    break;\n            }\n        }\n        this.setState({\n            TCPDials: CPD,\n            TBPDials: BPD,\n            TCCDials: CCD,\n            TBCDials: BCD,\n            TCNDials: CND,\n            TBNDials: BND,\n            TCSDials: CSD,\n            TBSDials: BSD,\n            TCRDials: CRD,\n            TBRDials: BRD,\n            TCTDials: CTD,\n            TBTDials: BTD,\n            TargetDials: TDials\n        })\n    }\n\n    parseTargetContacts = () => {\n        console.log(\"Parsing: \" + this.state.targetContactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        var TContacts = 0;\n        for (var i = 0; i < this.state.targetContactData.length; i++) {\n            switch (this.state.targetContactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    TContacts++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    TContacts++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    TContacts++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    TContacts++\n                    break;\n                case \"CND\":\n                    CNC++\n                    TContacts++\n                    break;\n                case \"BND\":\n                    BNC++\n                    TContacts++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    TContacts++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    TContacts++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    TContacts++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    TContacts++\n                    break;\n                case \"CTD\":\n                    TContacts++\n                    CTC++\n                    break;\n                case \"BTD\":\n                    TContacts++\n                    BTC++\n                    break;\n                default:\n                    TContacts++\n                    break;\n            }\n        }\n        this.setState({\n            TCPContacts: CPC,\n            TBPContacts: BPC,\n            TCCContacts: CCC,\n            TBCContacts: BCC,\n            TCNContacts: CNC,\n            TBNContacts: BNC,\n            TCSContacts: CSC,\n            TBSContacts: BSC,\n            TCRContacts: CRC,\n            TBRContacts: BRC,\n            TCTContacts: CTC,\n            TBTContacts: BTC,\n            TargetContacts: TContacts\n        })\n    }\n\n\n    parseTargetAppts = () => {\n        console.log(\"Parsing: \" + this.state.targetApptData)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        var TAppts = 0;\n        for (var i = 0; i < this.state.targetApptData.length; i++) {\n            console.log(this.state.targetApptData[i])\n            switch (this.state.targetApptData[i].type) {\n                case \"CPD\":\n                    CPA++\n                    TAppts++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    TAppts++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    TAppts++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    TAppts++\n                    break;\n                case \"CND\":\n                    CNA++\n                    TAppts++\n                    break;\n                case \"BND\":\n                    BNA++\n                    TAppts++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    TAppts++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    TAppts++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    TAppts++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    TAppts++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    TAppts++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    TAppts++\n                    break;\n                default:\n                    TAppts++\n                    break;\n            }\n        }\n        this.setState({\n            TCPAppts: CPA,\n            TBPAppts: BPA,\n            TCCAppts: CCA,\n            TBCAppts: BCA,\n            TCNAppts: CNA,\n            TBNAppts: BNA,\n            TCSAppts: CSA,\n            TBSAppts: BSA,\n            TCRAppts: CRA,\n            TBRAppts: BRA,\n            TCTAppts: CTA,\n            TBTAppts: BTA,\n            TargetAppts: TAppts\n        })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    showDataOption = (e) => {\n        e.preventDefault()\n        switch (this.state.dataOption) {\n            case \"genDials\":\n                this.viewDialChart()\n                break;\n            case \"genContacts\":\n                this.viewContactChart()\n                break;\n            case \"genAppts\":\n                this.viewApptChart()\n                break;\n            case \"cfDials\":\n                this.viewCFDialChart()\n                break;\n            case \"cfContacts\":\n                this.viewCFContactChart()\n                break;\n            case \"cfAppts\":\n                this.viewCFApptChart()\n                break;\n            case \"boDials\":\n                this.viewBODialChart()\n                break;\n            case \"boContacts\":\n                this.viewBOContactChart()\n                break;\n            case \"boAppts\":\n                this.viewBOApptChart()\n                break;\n            default:\n                console.log(\"No option selected\")\n                break;\n        }\n\n    }\n\n    showCategoryOption = (e) => {\n        e.preventDefault()\n\n        switch (this.state.categoryOption) {\n            case \"pData\":\n                this.viewProspectPerformance()\n                break;\n            case \"cData\":\n                this.viewClientPerformance()\n                break;\n            case \"sData\":\n                this.viewSuspectPerformance()\n                break;\n            case \"nData\":\n                this.viewNaturalPerformance()\n                break;\n            case \"rData\":\n                this.viewReferralPerformance()\n                break;\n            case \"tData\":\n                this.viewTargetPerformance()\n                break;\n            default:\n                console.log(\"No proper selection made\")\n                break;\n        }\n    }\n\n\n    showAnalyticsData = () => {\n        if (!this.state.showAnalyticsData) {\n            this.setState({\n                showAnalyticsData: true\n            })\n        } else {\n            this.setState({\n                showAnalyticsData: false\n            })\n        }\n    }\n\n    render() {\n        return (\n            // <div className=\"container\" id=\"mentor-analytics\">\n            <div className=\"card bg-light\"\n                style={{\n                    // backgroundColor: 'rgba(255,255,255,0.75)',\n                    color: 'black',\n                    padding: '0',\n                    // borderRadius: '30px'\n                }}>\n                <h1 style={{ textAlign: 'center', color: 'black' }}>A N A L Y T I C S</h1>\n                <hr />\n\n                <div className=\"card-header\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <form>\n                                <div style={{ textAlign: 'center' }}>\n                                    <p style={{ textAlign: 'center' }}>View Types of Calls Made</p>\n                                    <select id=\"sourceDropMenu\" className=\"\" value={this.state.dataOption} onChange={this.handleInputChange} name=\"dataOption\">\n                                        <option value={\"none\"}>------------------------</option>\n                                        <option value={\"genDials\"}>Dial Data</option>\n                                        <option value={\"genContacts\"}>Contact Data</option>\n                                        <option value={\"genAppts\"}>Appointment Data</option>\n                                        <option value={\"cfDials\"}>Standard/Cashflow Dial Data</option>\n                                        <option value={\"cfContacts\"}>Standard/Cashflow Contact Data</option>\n                                        <option value={\"cfAppts\"}>Standard/Cashflow Appointment Data</option>\n                                        <option value={\"boDials\"}>Tier-1/Businessowner Dial Data</option>\n                                        <option value={\"boContacts\"}>Tier-1/Businessowner Contact Data</option>\n                                        <option value={\"boAppts\"}>Tier-1/Businessowner Appointment Data</option>\n                                    </select>\n                                    <button className=\"btn-outline-dark btn-sm btn\" onClick={this.showDataOption}>Generate</button>\n                                </div>\n                            </form>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <form>\n                                <div style={{ textAlign: 'center' }}>\n                                    <p style={{ textAlign: 'center' }}>View Performance by Type</p>\n                                    <select id=\"sourceDropMenu\" className=\"\" value={this.state.categoryOption} onChange={this.handleInputChange} name=\"categoryOption\">\n                                        <option value={\"none\"}>-------------------------------</option>\n                                        <option value={\"pData\"}>Warm Leads / Prospects</option>\n                                        <option value={\"cData\"}>Delegated Clients</option>\n                                        <option value={\"nData\"}>Natural Market</option>\n                                        <option value={\"sData\"}>Verticals / Orphans</option>\n                                        <option value={\"rData\"}>New Referrals</option>\n                                        <option value={\"tData\"}>Target Industries</option>\n                                    </select>\n                                    <br />\n                                    <button className=\"btn-outline-dark btn-sm btn\" onClick={this.showCategoryOption}>Generate</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <form>\n                                {this.props.protegeData.sources ?\n                                    <div style={{ textAlign: 'center' }}>\n                                        <p style={{ textAlign: 'center' }}>View Performance by Referral Source</p>\n                                        <select id=\"sourceDropMenu\" className=\"\" value={this.state.leadSource} onChange={this.handleInputChange} name=\"leadSource\">\n                                            <option value={\"none\"}>----------------------------------</option>\n                                            {this.props.protegeData.sources.map(source => (\n                                                <option key={source} value={source}>{source}</option>\n                                            ))}\n                                        </select>\n                                        <br />\n                                        <button className=\"btn-outline-dark btn-sm btn\" onClick={this.gatherSourceData}>Generate</button>\n                                    </div>\n                                    : null}\n                            </form>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <form>\n                                {this.props.protegeData.targetMarkets ?\n                                    <div style={{ textAlign: 'center' }}>\n                                        <p style={{ textAlign: 'center' }}>View Performance by Target Industry</p>\n                                        <select id=\"sourceDropMenu\" value={this.state.targetMarket} className=\"\" onChange={this.handleInputChange} name=\"targetMarket\">\n                                            <option value={\"none\"}>---------------------------------</option>\n                                            {this.props.protegeData.targetMarkets.map(target => (\n                                                <option key={target} value={target}>{target}</option>\n                                            ))}\n                                        </select>\n                                        <br />\n                                        <button className=\"btn-outline-dark btn-sm btn\" onClick={this.gatherTargetData}>Generate</button>\n                                    </div> : null}\n                            </form>\n                        </div>\n                        {/* <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewReferralPerformance}>Referral Call Performance</button>\n                        <button style={{ width: '33%', marginLeft: 'auto', marginRight: 'auto' }} className=\"btn btn-success\" onClick={this.viewTargetPerformance}>Target Market Call Performance</button> */}\n\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-5\"></div>\n                        <div className=\"col-2\">\n                            <button className=\"btn btn-lg btn-outline-dark\" onClick={this.showAnalyticsData}>Show</button>\n\n                        </div>\n                        <div className=\"col-5\"></div>\n                    </div>\n                </div>\n\n                {this.state.showAnalyticsData ?\n                    <div className=\"card-body\">\n                        <div className=\"\" style={{ textAlign: 'center' }}>\n                            <h3>Protege: {this.props.protegeData.firstName} {this.props.protegeData.lastName}</h3>\n                            <hr />\n                        </div>\n                        {this.state.showDialChart ?\n                            <div style={{ color: 'black' }}>\n                                <p style={{ textAlign: 'center' }}>Total Dials: {this.props.dialData.length}</p>\n\n                                <div className=\"row\">\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Dials\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.CPDials + this.props.BPDials,\n                                                    this.props.CCDials + this.props.BCDials,\n                                                    this.props.CNDials + this.props.BNDials,\n                                                    this.props.CSDials + this.props.BSDials,\n                                                    this.props.CRDials + this.props.BRDials,\n                                                    this.props.CTDials + this.props.BTDials],\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Prospects\",\n                                                \"Delegated Client\",\n                                                \"Natural Market\",\n                                                \"Suspects/Orphans\",\n                                                \"Referrals\",\n                                                \"Target Markets\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPDials + this.props.BPDials,\n                                                    this.props.CCDials + this.props.BCDials,\n                                                    this.props.CNDials + this.props.BNDials,\n                                                    this.props.CSDials + this.props.BSDials,\n                                                    this.props.CRDials + this.props.BRDials,\n                                                    this.props.CTDials + this.props.BTDials\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#f99b17\",\n                                                    \"#5191d9\",\n                                                    \"#483d28\",\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ],\n                                                borderColor: [\n                                                    \"#3ac178\",\n                                                    \"#f99b17\",\n                                                    \"#5191d9\",\n                                                    \"#483d28\",\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ],\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'left',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} />\n                                    </div>\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n\n                                </div>\n                            </div>\n                            : null\n                        }\n\n                        {this.state.showContactChart ?\n                            <div>\n\n                                <hr />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ textAlign: 'center' }}>\n                                        <hr />\n                                        <p style={{ textAlign: 'center', color: 'black' }}>Total Contacts: {this.props.contactData.length}</p>\n                                    </div>\n                                </div>\n                                {/* <ul>\n                    <li>Cashflow Prospect Contacts: {this.props.CPContacts}</li>\n                    <li>Business Prospect Contacts: {this.props.BPContacts}</li>\n                    <li>Cashflow Client Contacts: {this.props.CCContacts}</li>\n                    <li>Business Client Contacts: {this.props.BCContacts}</li>\n                    <li>Cashflow Natural Mkt Contacts: {this.props.CNContacts}</li>\n                    <li>Business Natural Mkt Contacts: {this.props.BNContacts}</li>\n                </ul> */}\n\n                                <div className=\"row\">\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Contacts\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.CPContacts + this.props.BPContacts,\n                                                    this.props.CCContacts + this.props.BCContacts,\n                                                    this.props.CNContacts + this.props.BNContacts,\n                                                    this.props.CSContacts + this.props.BSContacts,\n                                                    this.props.CRContacts + this.props.BRContacts,\n                                                    this.props.CTContacts + this.props.BTContacts],\n                                            }]\n                                        }} />\n                                    </div>\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Warm Lead/Prospect\",\n                                                \"Delegated Client\",\n                                                \"Natural Market\",\n                                                \"Vertical / Orphan\",\n                                                \"New Referral\",\n                                                \"Targeted Industry\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPContacts + this.props.BPContacts,\n                                                    this.props.CCContacts + this.props.BCContacts,\n                                                    this.props.CNContacts + this.props.BNContacts,\n                                                    this.props.CSContacts + this.props.BSContacts,\n                                                    this.props.CRContacts + this.props.BRContacts,\n                                                    this.props.CTContacts + this.props.BTContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#f99b17\",\n                                                    \"#5191d9\",\n                                                    \"#483d28\",\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }}\n                                        /> </div>\n                                    <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n\n\n                                </div> </div> : null\n                        }\n\n\n                        {\n                            this.state.showApptChart ?\n                                <div>\n\n                                    <hr />\n                                    <div className=\"row\">\n                                        <div className=\"col\" style={{ textAlign: 'center' }}>\n                                            <p style={{ color: 'black', textAlign: 'center' }}>Total Appointments: {this.props.apptData.length} </p>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                        <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                            <Bar data={{\n                                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                                datasets: [{\n                                                    label: \"Appointments\",\n                                                    backgroundColor: 'rgb(255, 99, 132)',\n                                                    borderColor: 'rgb(255, 99, 132)',\n                                                    data: [\n                                                        this.props.CPAppts + this.props.BPAppts,\n                                                        this.props.CCAppts + this.props.BCAppts,\n                                                        this.props.CNAppts + this.props.BNAppts,\n                                                        this.props.CSAppts + this.props.BSAppts,\n                                                        this.props.CRAppts + this.props.BRAppts,\n                                                        this.props.CTAppts + this.props.BTAppts],\n                                                }]\n                                            }} />\n                                        </div>\n                                        <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                        <div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n\n                                        <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                            <Pie data={{\n                                                labels: [\n                                                    \"Warm Lead/Prospect\",\n                                                    \"Delegated Client\",\n                                                    \"Natural Market\",\n                                                    \"Vertical / Orphan\",\n                                                    \"New Referral\",\n                                                    \"Targeted Industry\"],\n                                                datasets: [{\n                                                    data: [\n                                                        this.props.CPAppts + this.props.BPAppts,\n                                                        this.props.CCAppts + this.props.BCAppts,\n                                                        this.props.CNAppts + this.props.BNAppts,\n                                                        this.props.CSAppts + this.props.BSAppts,\n                                                        this.props.CRAppts + this.props.BRAppts,\n                                                        this.props.CTAppts + this.props.BTAppts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#3ac178\",\n                                                        \"#f99b17\",\n                                                        \"#5191d9\",\n                                                        \"#483d28\",\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        position: 'left',\n                                                        labels: {\n                                                            boxWidth: 10\n                                                        }\n                                                    }\n                                                }} />\n                                        </div><div style={{ backgroundColor: 'rgba(0,0,0,0)' }} className=\"card col-lg-1\"></div>\n                                    </div> </div> : null\n                        }\n\n                        <hr />\n\n                        {/* //////////////////////////////////////////////////\n                /////////////////////////////////////////////////\n                ///////////////////////////////////////////////////// */}\n\n                        {this.state.showCashflowDials ?\n                            <div>\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ textAlign: 'center', color: 'black' }}>\n                                        <hr />\n                                        <h4>Cashflow Dials made:</h4>\n                                        <br />\n                                        <h3>\n                                            {this.props.CPDials +\n                                                this.props.CCDials +\n                                                this.props.CNDials +\n                                                this.props.CRDials +\n                                                this.props.CSDials +\n                                                this.props.CTDials}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Dials\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.CPDials,\n                                                    this.props.CCDials,\n                                                    this.props.CNDials,\n                                                    this.props.CSDials,\n                                                    this.props.CRDials,\n                                                    this.props.CTDials\n                                                ],\n                                            }]\n                                        }} />\n                                    </div>\n                                    <div className=\"col-lg-1\"></div>\n                                    <br />\n                                    <br />\n\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Cashflow Prospect\",\n                                                \"Cashflow Client\",\n                                                \"Cashflow Natural Market\",\n                                                \"Cashflow Suspect\",\n                                                \"Cashflow Referral\",\n                                                \"Cashflow Target Market\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPDials,\n                                                    this.props.CCDials,\n                                                    this.props.CNDials,\n                                                    this.props.CSDials,\n                                                    this.props.CRDials,\n                                                    this.props.CTDials\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#443959\",\n                                                    \"#f99b17\",\n                                                    \"#a2e505\",\n                                                    \"#c9917f\",\n                                                    \"#8d044b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }} /> </div>\n                                    <div className=\"col-lg-1\"></div>\n                                </div>   </div> : null}\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                        {this.state.showCashflowContacts ?\n                            <div>\n                                <div className=\"row\" style={{ textAlign: 'center', color: 'black' }}>\n                                    <div className=\"col\">\n                                        <h4>Cashflow Contacts made:</h4>\n                                        <br />\n                                        <h3>\n                                            {this.props.CPContacts +\n                                                this.props.CCContacts +\n                                                this.props.CNContacts +\n                                                this.props.CRContacts +\n                                                this.props.CSContacts +\n                                                this.props.CTContacts}\n                                        </h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Contacts\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.CPContacts,\n                                                    this.props.CCContacts,\n                                                    this.props.CNContacts,\n                                                    this.props.CSContacts,\n                                                    this.props.CRContacts,\n                                                    this.props.CTContacts\n                                                ],\n                                            }]\n                                        }} />\n                                    </div>\n                                    <div className=\"col-lg-1\"></div>\n                                    <br />\n                                    <br />\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Cashflow Prospect\",\n                                                \"Cashflow Client\",\n                                                \"Cashflow Natural Market\",\n                                                \"Cashflow Suspect\",\n                                                \"Cashflow Referral\",\n                                                \"Cashflow Target Market\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPContacts,\n                                                    this.props.CCContacts,\n                                                    this.props.CNContacts,\n                                                    this.props.CSContacts,\n                                                    this.props.CRContacts,\n                                                    this.props.CTContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#443959\",\n                                                    \"#f99b17\",\n                                                    \"#a2e505\",\n                                                    \"#c9917f\",\n                                                    \"#8d044b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }} />\n\n                                    </div>\n                                    <div className=\"col-lg-1\"></div>\n                                </div>\n                            </div> : null}\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        <br />\n                        {this.state.showCashflowAppts ?\n                            <div>\n                                <div className=\"row\" style={{ textAlign: 'center', color: 'black' }}>\n                                    <div className=\"col\">\n                                        <h4>Cashflow Appointments made:</h4>\n                                        <br />\n                                        <h3>\n                                            {this.props.CPAppts +\n                                                this.props.CCAppts +\n                                                this.props.CNAppts +\n                                                this.props.CRAppts +\n                                                this.props.CSAppts +\n                                                this.props.CTAppts}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Appointments\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.CPAppts,\n                                                    this.props.CCAppts,\n                                                    this.props.CNAppts,\n                                                    this.props.CSAppts,\n                                                    this.props.CRAppts,\n                                                    this.props.CTAppts\n                                                ],\n                                            }]\n                                        }} />\n                                    </div>\n                                    <div className=\"col-lg-1\"></div>\n                                    <br />\n                                    <br />\n\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Cashflow Prospect\",\n                                                \"Cashflow Client\",\n                                                \"Cashflow Natural Market\",\n                                                \"Cashflow Suspect\",\n                                                \"Cashflow Referral\",\n                                                \"Cashflow Target Market\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPAppts,\n                                                    this.props.CCAppts,\n                                                    this.props.CNAppts,\n                                                    this.props.CSAppts,\n                                                    this.props.CRAppts,\n                                                    this.props.CTAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#443959\",\n                                                    \"#f99b17\",\n                                                    \"#a2e505\",\n                                                    \"#c9917f\",\n                                                    \"#8d044b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'left',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} /> </div>\n                                    <div className=\"col-lg-1\"></div>\n                                </div>\n                            </div> : null}\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showBusinessDials ?\n                            <div>\n                                <div className=\"row\" style={{ textAlign: 'center', color: 'black' }}>\n                                    <div className=\"col\">\n                                        <h4>Tier-1/Businessowner Dials made:</h4>\n                                        <br />\n                                        <h3>\n                                            {this.props.BPDials +\n                                                this.props.BCDials +\n                                                this.props.BNDials +\n                                                this.props.BRDials +\n                                                this.props.BSDials +\n                                                this.props.BTDials}\n                                        </h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Dials\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.BPDials,\n                                                    this.props.BCDials,\n                                                    this.props.BNDials,\n                                                    this.props.BSDials,\n                                                    this.props.BRDials,\n                                                    this.props.BTDials],\n                                            }]\n                                        }} />\n                                    </div>\n                                    <div className=\"col-lg-1\"></div>\n                                    <br />\n                                    <br />\n\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Business Prospect\",\n                                                \"Business Client\",\n                                                \"Business Natural Market\",\n                                                \"Business Suspect\",\n                                                \"Business Referral\",\n                                                \"Business Target Market\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.BPDials,\n                                                    this.props.BCDials,\n                                                    this.props.BNDials,\n                                                    this.props.BSDials,\n                                                    this.props.BRDials,\n                                                    this.props.BTDials\n                                                ],\n                                                backgroundColor: [\n                                                    \"#d2d93b\",\n                                                    \"#dd4417\",\n                                                    \"#5191d9\",\n                                                    \"#483d28\",\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }} options={{\n                                            legend: {\n                                                position: 'left',\n                                                labels: {\n                                                    boxWidth: 10\n                                                }\n                                            }\n                                        }} /> </div>\n                                    <div className=\"col-lg-1\"></div>\n                                </div> </div> : null}\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showBusinessContacts ?\n                            <div>\n                                <div className=\"row\" style={{ textAlign: 'center', color: 'black' }}>\n                                    <div className=\"col\">\n                                        <h4>Tier-1/Businessowner Contacts made:</h4>\n                                        <br />\n                                        <h3>\n                                            {this.props.BPContacts +\n                                                this.props.BCContacts +\n                                                this.props.BNContacts +\n                                                this.props.BRContacts +\n                                                this.props.BSContacts +\n                                                this.props.BTContacts}\n                                        </h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Contacts\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.BPContacts,\n                                                    this.props.BCContacts,\n                                                    this.props.BNContacts,\n                                                    this.props.BSContacts,\n                                                    this.props.BRContacts,\n                                                    this.props.BTContacts],\n                                            }]\n                                        }}\n                                        />\n                                    </div>\n                                    <div className=\"col-lg-1\"></div>\n                                    <br />\n                                    <br />\n\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Business Prospect\",\n                                                \"Business Client\",\n                                                \"Business Natural Market\",\n                                                \"Business Suspect\",\n                                                \"Business Referral\",\n                                                \"Business Target Market\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.BPContacts,\n                                                    this.props.BCContacts,\n                                                    this.props.BNContacts,\n                                                    this.props.BSContacts,\n                                                    this.props.BRContacts,\n                                                    this.props.BTContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#d2d93b\",\n                                                    \"#dd4417\",\n                                                    \"#5191d9\",\n                                                    \"#483d28\",\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }}\n                                        /> </div>\n                                    <div className=\"col-lg-1\"></div>\n                                </div> </div> : null}\n\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showBusinessAppts ?\n                            <div>\n                                <div className=\"row\" style={{ textAlign: 'center', color: 'black' }}>\n                                    <div className=\"col\">\n                                        <h4 style={{ color: 'black' }}>Tier-1/Businessowner Appointments made:</h4>\n                                        <br />\n                                        <h3>\n                                            {this.props.BPAppts +\n                                                this.props.BCAppts +\n                                                this.props.BNAppts +\n                                                this.props.BRAppts +\n                                                this.props.BSAppts +\n                                                this.props.BTAppts}</h3>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Bar data={{\n                                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                            datasets: [{\n                                                label: \"Appointments\",\n                                                backgroundColor: 'rgb(255, 99, 132)',\n                                                borderColor: 'rgb(255, 99, 132)',\n                                                data: [\n                                                    this.props.BPAppts,\n                                                    this.props.BCAppts,\n                                                    this.props.BNAppts,\n                                                    this.props.BSAppts,\n                                                    this.props.BRAppts,\n                                                    this.props.BTAppts],\n                                            }]\n                                        }} /> </div>\n                                    <div className=\"col-lg-1\"></div>\n                                    <br />\n                                    <br />\n\n                                    <div className=\"col-lg-1\"></div>\n                                    <div className=\"card col-lg-10\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '10px', margin: 0 }}>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Business Prospect\",\n                                                \"Business Client\",\n                                                \"Business Natural Market\",\n                                                \"Business Suspect\",\n                                                \"Business Referral\",\n                                                \"Business Target Market\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.BPAppts,\n                                                    this.props.BCAppts,\n                                                    this.props.BNAppts,\n                                                    this.props.BSAppts,\n                                                    this.props.BRAppts,\n                                                    this.props.BTAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#d2d93b\",\n                                                    \"#dd4417\",\n                                                    \"#5191d9\",\n                                                    \"#483d28\",\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }}\n                                        /> </div>\n                                    <div className=\"col-lg-1\"></div>\n                                </div> </div> : null}\n\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showProspectPerformance ?\n                            <div className=\"card\" style={{ textAlign: 'center', color: 'black' }}>\n\n                                <h3>Prospect Calling Analytics:</h3>\n                                <hr />\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Contact Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Prospect Dials without contacts\",\n                                                \"Prospect Contacts\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPDials + this.props.BPDials - this.props.CPContacts - this.props.BPContacts,\n                                                    this.props.CPContacts + this.props.BPContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Contacted a Prospect on</h6>\n                                        <h6> {Math.round((this.props.CPContacts + this.props.BPContacts) / (this.props.CPDials + this.props.BPDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Contacts to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Prospect Contacts without appointments\",\n                                                \"Prospect Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPContacts + this.props.BPContacts - this.props.CPAppts - this.props.BPAppts,\n                                                    this.props.CPAppts + this.props.BPAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n\n                                        <h6>Scheduled an appointment on:</h6>\n                                        <h6>{Math.round((this.props.CPAppts + this.props.BPAppts) / (this.props.CPContacts + this.props.BPContacts) * 100)}% of contacts</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Prospect Dials without appointments\",\n                                                \"Prospect Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CPDials + this.props.BPDials - this.props.CPAppts - this.props.BPAppts,\n                                                    this.props.CPAppts + this.props.BPAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Scheduled an appointment on:</h6>\n                                        <h6> {Math.round((this.props.CPAppts + this.props.BPAppts) / (this.props.CPDials + this.props.BPDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                            : null}\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showClientPerformance ?\n                            <div className=\"card\" style={{ textAlign: 'center', color: 'black' }}>\n\n                                <h3>Delegated Client Calling Analytics:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Contact Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Client Dials without contacts\",\n                                                \"Client Contacts\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CCDials + this.props.BCDials - this.props.CCContacts - this.props.BCContacts,\n                                                    this.props.CCContacts + this.props.BCContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n\n                                        <h6>Made contact on :</h6>\n                                        <h6>{Math.round((this.props.CCContacts + this.props.BCContacts) / (this.props.CCDials + this.props.BCDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Contacts to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Client Contacts without appointment\",\n                                                \"Client Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CCContacts + this.props.BCContacts - this.props.CCAppts - this.props.BCAppts,\n                                                    this.props.CCAppts + this.props.BCAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n\n                                        <h6>Scheduled an appointment on:</h6>\n                                        <h6>{Math.round((this.props.CCAppts + this.props.BCAppts) / (this.props.CCContacts + this.props.BCContacts) * 100)}% of contacts</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Client Dials without appointment\",\n                                                \"Client Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CCDials + this.props.BCDials - this.props.CCAppts - this.props.BCAppts,\n                                                    this.props.CCAppts + this.props.BCAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Scheduled an appointment on: </h6>\n                                        <h6>{Math.round((this.props.CCAppts + this.props.BCAppts) / (this.props.CCDials + this.props.BCDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                            : null}\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showNaturalPerformance ?\n                            <div className=\"card\" style={{ textAlign: 'center', color: 'black' }}>\n\n                                <h3>Natural Market Calling Performance:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Contact Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Natural Market Dials without contact\",\n                                                \"Natural Market Contacts\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CNDials + this.props.BNDials - this.props.CNContacts - this.props.BNContacts,\n                                                    this.props.CNContacts + this.props.BNContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <h6>Made contact on:</h6>\n                                        <h6> {Math.round((this.props.CNContacts + this.props.BNContacts) / (this.props.CNDials + this.props.BNDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Contacts to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Natural Market Contacts without appointment\",\n                                                \"Natural Market Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CNContacts + this.props.BNContacts - this.props.CNAppts - this.props.BNAppts,\n                                                    this.props.CNAppts + this.props.BNAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <h6>Scheduled an appointment on: </h6>\n                                        <h6>{Math.round((this.props.CNAppts + this.props.BNAppts) / (this.props.CNContacts + this.props.BNContacts) * 100)}% of contacts</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Natural Market Dials without appointment\",\n                                                \"Natuarl Market Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CNDials + this.props.BNDials - this.props.CNAppts - this.props.BNAppts,\n                                                    this.props.CNAppts + this.props.BNAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <h6>Scheduled an appointment on: </h6>\n                                        <h6>{Math.round((this.props.CNAppts + this.props.BNAppts) / (this.props.CNDials + this.props.BNDials) * 100)}% of your dials</h6>\n\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                            : null}\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showSuspectPerformance ?\n                            <div className=\"card\" style={{ textAlign: 'center', color: 'black' }}>\n\n                                <h3>Suspect Calling Performance:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Contact Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Suspect Dials without contact\",\n                                                \"Suspect Contacts\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CSDials + this.props.BSDials - this.props.CSContacts - this.props.BSContacts,\n                                                    this.props.CSContacts + this.props.BSContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Made contact on </h6>\n                                        <h6>{Math.round((this.props.CSContacts + this.props.BSContacts) / (this.props.CSDials + this.props.BSDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Contacts to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Suspect Contacts without appointment\",\n                                                \"Suspect Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CSContacts + this.props.BSContacts - this.props.CSAppts - this.props.BSAppts,\n                                                    this.props.CSAppts + this.props.BSAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Scheduled an appointment on: </h6>\n                                        <h6>{Math.round((this.props.CSAppts + this.props.BSAppts) / (this.props.CSContacts + this.props.BSContacts) * 100)}% of contacts</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Suspect Dials without appointment\",\n                                                \"Suspect Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CSDials + this.props.BSDials - this.props.CSAppts - this.props.BSAppts,\n                                                    this.props.CSAppts + this.props.BSAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Scheduled an appointment on:</h6>\n                                        <h6>{Math.round((this.props.CSAppts + this.props.BSAppts) / (this.props.CSDials + this.props.BSDials) * 100)}% of dials</h6>\n\n                                    </div>\n                                </div>\n\n                            </div>\n                            : null}\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showReferralPerformance ?\n                            <div className=\"card\" style={{ textAlign: 'center', color: 'black' }}>\n\n                                <h3>Referral Calling Performance:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Contact Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Referral Dials without contact\",\n                                                \"Referral Contacts\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CRDials + this.props.BRDials - this.props.CRContacts - this.props.BRContacts,\n                                                    this.props.CRContacts + this.props.BRContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Made Contact on:</h6>\n                                        <h6>{Math.round((this.props.CRContacts + this.props.BRContacts) / (this.props.CRDials + this.props.BRDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Contacts to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Referral Contacts without appointment\",\n                                                \"Referral Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CRContacts + this.props.BRContacts - this.props.CRAppts - this.props.BRAppts,\n                                                    this.props.CRAppts + this.props.BRAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Made appointments on: </h6>\n                                        <h6>{Math.round((this.props.CRAppts + this.props.BRAppts) / (this.props.CRContacts + this.props.BRContacts) * 100)}% of contacts</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Referral Dials without appointment\",\n                                                \"Referral Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CRDials + this.props.BRDials - this.props.CRAppts - this.props.BRAppts,\n                                                    this.props.CRAppts + this.props.BRAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }}\n                                        />\n                                        <br />\n                                        <h6>Scheduled appointments on: </h6>\n                                        <h6>{Math.round((this.props.CRAppts + this.props.BRAppts) / (this.props.CRDials + this.props.BRDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                            : null}\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showTargetPerformance ?\n                            <div className=\"card\" style={{ textAlign: 'center', color: 'black' }}>\n\n                                <h3>Target Market Calling Performance:</h3>\n                                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Contact Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Target Market Dials without contact\",\n                                                \"Target Market Contacts\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CTDials + this.props.BTDials - this.props.CTContacts - this.props.BTContacts,\n                                                    this.props.CTContacts + this.props.BTContacts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }} />\n                                        <br />\n                                        <h6>Made Contact on: </h6>\n                                        <h6>{Math.round((this.props.CTContacts + this.props.BTContacts) / (this.props.CTDials + this.props.BTDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Contacts to Appointment Ratio</h6>\n                                        <br />\n                                        <Pie data={{\n                                            labels: [\n                                                \"Target Market Contacts without appointment\",\n                                                \"Target Market Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CTContacts + this.props.BTContacts - this.props.CTAppts - this.props.BTAppts,\n                                                    this.props.CTAppts + this.props.BTAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }} />\n                                        <br />\n                                        <h6>Made appointments on: </h6>\n                                        <h6>{Math.round((this.props.CTAppts + this.props.BTAppts) / (this.props.CTContacts + this.props.BTContacts) * 100)}% of contacts</h6>\n\n                                    </div>\n\n                                    <div className=\"col-lg-4\">\n                                        <h6>Dials to Appointment Ratio</h6>\n                                        <br />\n\n                                        <Pie data={{\n                                            labels: [\n                                                \"Target Market Dials without scheduling\",\n                                                \"Target Market Scheduled Appointments\",\n                                            ],\n                                            datasets: [{\n                                                data: [\n                                                    this.props.CTDials + this.props.BTDials - this.props.CTAppts - this.props.BTAppts,\n                                                    this.props.CTAppts + this.props.BTAppts\n                                                ],\n                                                backgroundColor: [\n                                                    \"#51aef7\",\n                                                    \"#25517b\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    display: false\n                                                }\n                                            }} />\n                                        <br />\n                                        <h6>Made appointments on: </h6>\n                                        <h6>{Math.round((this.props.CTAppts + this.props.BTAppts) / (this.props.CTDials + this.props.BTDials) * 100)}% of dials</h6>\n\n                                    </div>\n\n                                </div>\n\n                            </div>\n                            : null}\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showSourcePerformance ?\n                            <div style={{ textAlign: 'center' }}>\n\n                                <div style={{ color: 'black' }}>\n                                    <h3><u>{this.state.leadSource} Types of Calls</u></h3>\n\n                                    {/* <Bar data={{\n                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                datasets: [{\n                                    label: \"Dials\",\n                                    backgroundColor: 'rgb(255, 99, 132)',\n                                    borderColor: 'rgb(255, 99, 132)',\n                                    data: [\n                                        this.state.SCPDials + this.state.SBPDials,\n                                        this.state.SCCDials + this.state.SBCDials,\n                                        this.state.SCNDials + this.state.SBNDials,\n                                        this.state.SCSDials + this.state.SBSDials,\n                                        this.state.SCRDials + this.state.SBRDials,\n                                        this.state.SCTDials + this.state.SBTDials],\n                                }]\n                            }} /> */}\n                                    <div className=\"card\" \n                                        style={{ \n                                            backgroundColor: 'rgba(255,255,255,0.9)', \n                                            padding: '5%' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Dials: {this.state.sourceDialData.length}</h4>\n                                        <Pie data={{\n                                            labels: [\n                                                \"Standard/Cashflow\",\n                                                \"Tier-1/Businessowner\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.SCPDials +\n                                                    this.state.SCCDials +\n                                                    this.state.SCNDials +\n                                                    this.state.SCSDials +\n                                                    this.state.SCRDials +\n                                                    this.state.SCTDials,\n                                                    this.state.SBTDials +\n                                                    this.state.SBPDials +\n                                                    this.state.SBCDials +\n                                                    this.state.SBNDials +\n                                                    this.state.SBSDials +\n                                                    this.state.SBRDials\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#483d28\"\n\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }}\n                                        /> </div>\n                                </div>\n                                <br />\n                                {/* /////////////////////////////////////////\n                        ////////////////////////////////////////////\n                        /////// SOURCE PIE CHARTS BELOW ////////////\n                        ///////////////////////////////////////////\n                        /////////////////////////////////////////// */}\n                                <div className=\"card\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '5%' }}>\n                                    <h3>{this.state.leadSource} Lead Performance:</h3>\n                                    <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                        <div className=\"col-lg-4\">\n                                            <hr />\n                                            <h5>Contacts/Dial Ratio</h5>\n                                            <h6>Total Dials: {this.state.SourceDials}</h6>\n                                            <Pie data={{\n                                                labels: [\n                                                    `Missed Calls`,\n                                                    `Contacts`,\n                                                ],\n                                                datasets: [{\n                                                    data: [\n                                                        this.state.SourceDials - this.state.SourceContacts,\n                                                        this.state.SourceContacts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        display: false\n                                                    }\n                                                }}\n                                            />\n                                            <br />\n                                            <h6>Made Contact on:</h6>\n                                            <h6> {Math.round((this.state.SourceContacts / this.state.SourceDials) * 100)}% of dials</h6>\n                                        </div>\n\n                                        <div className=\"col-lg-4\">\n                                            <hr />\n                                            <h5>Appointment / Contact Ratio</h5>\n                                            <h6>Total Contacts: {this.state.SourceContacts}</h6>\n                                            <Pie data={{\n                                                labels: [\n                                                    `Contacts without Scheduling`,\n                                                    `Scheduled`,\n                                                ],\n                                                datasets: [{\n                                                    data: [\n                                                        this.state.SourceContacts - this.state.SourceAppts,\n                                                        this.state.SourceAppts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        display: false\n                                                    }\n                                                }}\n\n                                            />\n                                            <h6>Scheduled Appointments on:</h6>\n                                            <h6> {Math.round((this.state.SourceAppts / this.state.SourceContacts) * 100)}% of contacts</h6>\n\n                                        </div>\n\n                                        <div className=\"col-lg-4\">\n                                            <hr />\n                                            <h5>Appointment / Dial Ratio</h5>\n                                            <h6>Total Appointments: {this.state.SourceAppts}</h6>\n                                            <Pie data={{\n                                                labels: [\n                                                    `Dials without Scheduling`,\n                                                    `Dials Scheduled`,\n                                                ],\n                                                datasets: [{\n                                                    data: [\n                                                        this.state.SourceDials - this.state.SourceAppts,\n                                                        this.state.SourceAppts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        display: false\n                                                    }\n                                                }}\n                                            />\n                                            <h6>Scheduled Appointments on:</h6>\n                                            <h6>{Math.round((this.state.SourceAppts / this.state.SourceDials) * 100)}% of dials</h6>\n\n                                        </div>\n\n\n                                    </div>\n                                </div>\n\n                            </div>\n                            : null}\n\n\n                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showSelectedTargetPerformance ?\n                            <div style={{ textAlign: 'center' }}>\n\n                                <div className=\"card\" style={{ backgroundColor: 'rgba(255,255,255,0.9)', padding: '5%' }}>\n                                    <div>\n                                        <h3><u>{this.state.targetMarket} Market</u></h3>\n                                        <p style={{ textAlign: 'center' }}>Total Dials: {this.state.targetDialData.length}</p>\n                                        {/* <Bar data={{\n                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                datasets: [{\n                                    label: \"Dials\",\n                                    backgroundColor: 'rgb(255, 99, 132)',\n                                    borderColor: 'rgb(255, 99, 132)',\n                                    data: [\n                                        this.state.SCPDials + this.state.SBPDials,\n                                        this.state.SCCDials + this.state.SBCDials,\n                                        this.state.SCNDials + this.state.SBNDials,\n                                        this.state.SCSDials + this.state.SBSDials,\n                                        this.state.SCRDials + this.state.SBRDials,\n                                        this.state.SCTDials + this.state.SBTDials],\n                                }]\n                            }} /> */}\n                                        <Pie data={{\n                                            labels: [\n                                                \"Standard/Cashflow\",\n                                                \"Tier-1/Businessowner\"],\n                                            datasets: [{\n                                                data: [\n                                                    this.state.TCPDials +\n                                                    this.state.TCCDials +\n                                                    this.state.TCNDials +\n                                                    this.state.TCSDials +\n                                                    this.state.TCRDials +\n                                                    this.state.TCTDials,\n\n                                                    this.state.TBTDials +\n                                                    this.state.TBPDials +\n                                                    this.state.TBCDials +\n                                                    this.state.TBNDials +\n                                                    this.state.TBSDials +\n                                                    this.state.TBRDials\n                                                ],\n                                                backgroundColor: [\n                                                    \"#3ac178\",\n                                                    \"#483d28\"\n                                                ]\n                                            }]\n                                        }}\n                                            options={{\n                                                legend: {\n                                                    position: 'left',\n                                                    labels: {\n                                                        boxWidth: 10\n                                                    }\n                                                }\n                                            }}\n                                        /> </div>\n                                </div>\n                                <br />\n\n                                {/* /////////////////////////////////////////\n                        ////////////////////////////////////////////\n                        /////// SOURCE PIE CHARTS BELOW ////////////\n                        ///////////////////////////////////////////\n                        /////////////////////////////////////////// */}\n                                <div className=\"card\" style={{ backgroundColor: 'rgba(255,255,255,0.8)', padding: '5%' }}>\n                                    <h3>{this.state.targetMarket} Market Dialing Performance:</h3>\n                                    <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                        <div className=\"col-lg-4\">\n                                            <hr />\n                                            <h5>Contact / Dial Ratio</h5>\n                                            <Pie data={{\n                                                labels: [\n                                                    `${this.state.targetMarket} Missed Calls`,\n                                                    `${this.state.targetMarket} Contacts`,\n                                                ],\n                                                datasets: [{\n                                                    data: [\n                                                        this.state.TargetDials - this.state.TargetContacts,\n                                                        this.state.TargetContacts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        display: false\n                                                    }\n                                                }}\n                                            />\n                                            <h6>Made contact on: </h6>\n                                            <h6>{Math.round((this.state.TargetContacts / this.state.TargetDials) * 100)}% of dials </h6>\n\n                                        </div>\n\n                                        <div className=\"col-lg-4\">\n                                            <hr />\n                                            <h5>Appointment / Contact Ratio</h5>\n                                            <Pie data={{\n                                                labels: [\n                                                    `${this.state.targetMarket} calls without Scheduling`,\n                                                    `${this.state.targetMarket} calls Scheduled`,\n                                                ],\n                                                datasets: [{\n                                                    data: [\n                                                        this.state.TargetContacts - this.state.TargetAppts,\n                                                        this.state.TargetAppts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        display: false\n                                                    }\n                                                }}\n                                            />\n                                            <h6>Scheduled appointment on: </h6>\n                                            <h6>{Math.round((this.state.TargetAppts / this.state.TargetContacts) * 100)}% of contacts</h6>\n\n                                        </div>\n\n                                        <div className=\"col-lg-4\">\n                                            <hr />\n                                            <h5>Appointment / Dials Ratio</h5>\n                                            <Pie data={{\n                                                labels: [\n                                                    `${this.state.targetMarket} calls without Scheduling`,\n                                                    `${this.state.targetMarket} calls Scheduled`,\n                                                ],\n                                                datasets: [{\n                                                    data: [\n                                                        this.state.TargetDials - this.state.TargetAppts,\n                                                        this.state.TargetAppts\n                                                    ],\n                                                    backgroundColor: [\n                                                        \"#51aef7\",\n                                                        \"#25517b\"\n                                                    ]\n                                                }]\n                                            }}\n                                                options={{\n                                                    legend: {\n                                                        display: false\n                                                    }\n                                                }}\n                                            />\n                                            <h6>Scheduled an appointment on: </h6>\n                                            <h6>{Math.round((this.state.TargetAppts / this.state.TargetDials) * 100)}% of dials</h6>\n\n                                        </div>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                            : null}\n                    </div>\n                    : null}\n\n            </div >\n        )\n    }\n\n}\n\nexport default MentorDataViewer","import React, { Component } from 'react';\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport Moment from 'react-moment'\n\nclass NoteViewerMentor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noteChosen: \"\",\n            noteToDelete: \"\"\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(\"Note Viewer:\" + this.props.userData.notes)\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    handleNoteChange = event => {\n        event.preventDefault()\n        console.log(\"Submitting appointment under user ID: \" + this.props.userID)\n\n        var NoteData = {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userID,\n            noteTagged: this.state.noteTagged,\n            completed: false,\n        }\n\n        console.log(NoteData)\n\n\n\n        API.updateNote(this.state.noteID, {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userID,\n            noteTagged: this.state.noteTagged,\n            completed: false\n        }).then(res => {\n            cogoToast.info(\"Saved Note!\")\n            this.props.rerender()\n        }\n        ).catch(err => console.log(err))\n\n        // setTimeout(() => {\n        //     // cogoToast.loading(\"Re-loading appointments\")\n        //     this.props.rerender()\n        // }, 1000)\n\n    }\n\n    completeNote = id => {\n        // event.preventDefault()\n        console.log(\"Marked note complete:\" + id)\n\n        API.completeNote(id, {\n            completed: true\n        }).then(res => {\n            cogoToast.info(\"Checked Box\")\n            this.props.rerender()\n        }\n        ).catch(err => console.log(err))\n    }\n\n    uncompleteNote = id => {\n        console.log(\"Marked note incomplete: \" + id)\n        API.uncompleteNote(id, {\n            completed: false\n        }).then(res => {\n            cogoToast.info(\"Unchecked Box\")\n            this.props.rerender()\n        }\n        ).catch(err => console.log(err))\n    }\n\n    deleteNote = id => {\n        console.log(\"Deleted note: \" + id)\n        API.deleteNote(id)\n            .then(res => {\n                cogoToast.error(\"Deleted Note\")\n                this.props.rerender()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"\" id=\"note-view-container-2\" style={{ color: 'black', height: this.props.height, overflow: 'auto'}}>\n\n                <div className=\"\" id=\"note-viewer-1-mentor\" style={{ padding: '', width: '', marginBottom: '10px' }}>\n\n                    {/* <div className=\"\">\n                        <div id=\"note-welcome\" div className=\"card-title\">\n                            <h4><u>View Notes Your Tagged In</u></h4>\n                        </div> */}\n\n                    <div className=\"\">\n\n                        {this.props.notes ?\n\n                            this.props.notes.map(note => (\n\n                                <div className=\"card bg-light\" key={note._id}\n                                    style={{ padding: '0px 0px 0px 0px', color: 'black', borderRadius: '5px', margin: 10 }}>\n\n                                    <div className=\"card-header\" style={{ padding: '5px 5px 0px 5px' }}>\n                                        <>\n                                            <div value={this.props.id} onClick={() => this.deleteNote(note._id)} style={{ float: 'right', height: '5px', width: '20px', color: 'red' }} className=\"\">X</div>\n                                            {note.completed ?\n                                                <div value={this.props.id} onClick={() => this.uncompleteNote(note._id)} style={{ float: 'right', height: '5px', width: '20px', padding: '0' }} className=\"\">√</div>\n                                                : <div value={this.props.id} onClick={() => this.completeNote(note._id)} style={{ float: 'right', height: '5px', width: '20px', padding: '0' }} className=\"\"><i className=\"far fa-square\"></i></div>\n                                            }\n                                        </>\n\n                                        <p style={{ fontSize: '10px' }}>By: {note.noteAuthorName}</p>\n                                    </div>\n\n                                    <div className=\"card-body\" style={{ padding: '15px 15px 0px 5px', margin: '0px 0px 0px 0px' }}>\n                                        <p style={{ fontSize: this.props.fontSize, textIndent: '50px' }}> {note.noteText} </p>\n                                    </div>\n\n                                    <div className=\"card-footer\">\n                                        <p style={{ fontSize: '12px' }}>\n                                            Posted: <Moment format=\"MM-DD HH:mm\">{note.created_at}</Moment>\n                                            <br />\n                                            <Moment date={note.created_at} durationFromNow /> ago\n                                        </p>\n                                    </div>\n                                </div>\n\n                            ))\n\n                            : <p style={{ color: 'whitesmoke', textAlign: 'center' }}>No notes yet!</p>}\n                        {/* </div> */}\n                        {/* // </div> */}\n                    </div>\n\n                    {/* <div className=\"\" id=\"note-viewer-2-mentor\" style={{ padding: '10px', width: '100%' }}>\n                    <div className=\"\">\n                        <div id=\"note-welcome\" className=\"\">\n                            <h4><u>View Notes You Made</u></h4>\n                        </div>\n                        <div className=\"\">\n\n                            {this.props.postNotes ?\n\n                                this.props.postNotes.map(note => (\n                                    <div style={{ background: 'rgba(255,255,255,0.8)', marginBottom: '0', padding: '10px' }}>\n\n                                        <p>||: {note.noteText}\n                                            <span>\n                                                <button value={this.props.id} onClick={() => this.deleteNote(note._id)} style={{float: 'right'}} className=\"btn btn-danger\">X</button>\n                                                {note.completed ?\n                                                    <button value={this.props.id} onClick={() => this.uncompleteNote(note._id)} style={{float: 'right'}} className=\"btn btn-success\">√</button>\n                                                    : <button value={this.props.id} onClick={() => this.completeNote(note._id)} style={{float: 'right'}} className=\"btn btn-success\"><i class=\"far fa-square\"></i></button>\n                                                }\n                                            </span>\n                                        </p>\n                                        <p style={{ fontSize: '8px' }}>\n                                            By: {note.noteTagged}\n                                        </p>\n\n                                        <hr />\n                                    </div>\n                                ))\n\n                                : <p style={{color: 'whitesmoke', textAlign: 'center'}}>No Notes Yet!</p>}\n                        </div>\n                    </div>\n                </div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NoteViewerMentor;","import React, { Component } from 'react';\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport { FormTextarea } from 'shards-react';\n\nimport \"./style.css\"\n\nclass NoteCreatorMentor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noteText: \"\",\n            noteAuthor: \"\",\n            noteTagged: \"\",\n            showNoteForm: true\n        }\n    }\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    handleNoteSubmit = event => {\n        event.preventDefault()\n        console.log(\"Submitting appointment under user ID: \" + this.props.userID)\n\n        var NoteData = {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userData._id,\n            noteTagged: this.state.noteTagged,\n            completed: false,\n        }\n\n        console.log(NoteData)\n\n\n\n        API.saveNoteMentor(this.props.userData._id, {\n            noteText: this.state.noteText,\n            noteAuthor: this.props.userData._id,\n            noteTagged: this.state.noteTagged,\n            noteAuthorName: this.props.userData.firstName + \" \" + this.props.userData.lastName,\n            completed: false\n        }).then(res =>\n            cogoToast.info(\"Saved Note!\")\n        ).catch(err => console.log(err))\n\n        // setTimeout(() => {\n        //     // cogoToast.loading(\"Re-loading appointments\")\n        //     this.props.rerender()\n        // }, 1000)\n\n    }\n    showNoteForm = () => {\n        if (this.state.showNoteForm !== true) {\n            this.setState({\n                showNoteForm: true\n            })\n        } else {\n            this.setState({\n                showNoteForm: false\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            // <div style={{backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}>\n            // <div className=\"col-12\" style={{ textAlign: 'left', padding: '0' }}>\n                <div className=\"card bg-light\" style={{ color: 'black', width: '100%' }}>\n                    <div className=\"card-header\">\n                        <h4\n                            style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '' }}\n                        >Create Note\n                        <br />\n                            <span>< button className=\"btn btn-sm btn-outline-dark\" onClick={this.showNoteForm}>Show</button></span>\n\n                        </h4>\n                    </div>\n\n                    {this.state.showNoteForm ?\n\n                        <div className=\"card-body\" style={{ padding: '10px', overflow: 'auto' }}>\n\n                            <form>\n                                <div style={{ color: 'black', padding: '20px' }}>\n                                    {this.props.userData.proteges ? <select id=\"\" value={this.state.noteTagged} onChange={this.handleInputChange} name=\"noteTagged\">\n                                        <option value={\"none\"}>--Tag Protege--</option>\n                                        {this.props.userData.proteges.map(protege => (\n                                            <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                        ))}\n                                    </select> : null}\n                                    <br />\n\n                                    <FormTextarea \n                                    // id=\"noteTextArea\" \n                                    value={this.state.noteText} \n                                    onChange={this.handleInputChange} \n                                    type=\"text\" \n                                    name=\"noteText\"\n                                    className=\"form-control\" \n                                    // id=\"noteTextInput\" \n                                    aria-describedby=\"\" \n                                    placeholder=\"Enter note here\" \n                                    />\n\n                                    <button onClick={this.handleNoteSubmit} style={{ float: 'right' }} className=\"btn btn-outline-dark\">Create Note</button>\n                                </div>\n                            </form>\n\n                        </div>\n\n                        : null}\n                </div>\n            // </div>\n        )\n    }\n\n\n\n}\n\nexport default NoteCreatorMentor;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport \"./style.css\"\n\n\n\nclass SalesCreatorMentor extends Component {\n\n    state = {\n        saleType: \"\",\n        saleName: \"\",\n        saleSource: \"\",\n        saleNotes: \"\",\n        saleDate: \"\",\n        saleTargetMkt: \"\",\n        saleTagged: \"\",\n        saleCommission: 0,\n        salePercentage: 0,\n        saleTaggedPercentage: 0,\n        saleProduct: \"\",\n        showSale: false\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        // this.setState({\n        //     apptname: this.props.apptname,\n        //     apptsource: this.props.source,\n        //     apptnotes: this.props.notes,\n        //     apptdate: this.props.date\n        // })\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleSaleSubmit = event => {\n        event.preventDefault()\n        console.log(\"Submitting sale under user ID: \" + this.props.userID)\n\n        console.log(this.state)\n\n        var SaleData = {\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            protege: this.state.saleTagged,\n            mentor: this.props.userData._id,\n            product: this.state.saleProduct,\n            commission: parseInt(this.state.saleCommission),\n            percentageMentor: parseInt(this.state.salePercentage) / 100,\n            percentageProtege: parseInt(this.state.saleTaggedPercentage) / 100,\n            leadSource: this.state.saleSource,\n            targetMarket: this.state.saleTargetMkt\n        }\n\n        console.log(SaleData)\n\n\n        API.saveSaleMentor({\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            protege: this.state.saleTagged,\n            mentor: this.props.userData._id,\n            product: this.state.saleProduct,\n            commission: parseInt(this.state.saleCommission),\n            percentageMentor: parseInt(this.state.salePercentage) / 100,\n            percentageProtege: parseInt(this.state.saleTaggedPercentage) / 100\n        }).then(res =>\n            cogoToast.info(\"Saved Sale!\")\n        ).catch(err => console.log(err))\n\n        // setTimeout(() => {\n        //     // cogoToast.loading(\"Re-loading appointments\")\n        //     this.props.rerender()\n        // }, 1000)\n\n    }\n\n    showSaleForm = () => {\n        if (this.state.showSale === false) {\n            this.setState({\n                showSale: true\n            })\n        } else {\n            this.setState({\n                showSale: false\n            })\n        }\n    }\n\n\n\n\n\n    render() {\n        return (\n            // <div className=\"col-12\" id=\"sale-creator-mentor\" style={{ textAlign: 'left', padding: '0' }}>\n\n                <div className=\"card bg-light\">\n\n                    <div className=\"card-header\">\n                        <h4 style={{ textAlign: 'center', padding: '10%', color: 'black', margin: '' }}>Create Sale\n                        <br />\n                            <button className=\"btn btn-outline-dark\" onClick={this.showSaleForm}>Show</button></h4>\n\n                    </div>\n\n\n                    {this.state.showSale ?\n                        <div className=\"card-body\" style={{ padding: '10px', height: '600px', overflow: 'auto' }}>\n                            <form className=\"form-group\">\n                                <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}>\n                                    <label>Type:</label>\n                                    <select className=\"custom-select my-1 mr-sm-2\" value={this.state.saleType} onChange={this.handleInputChange} name=\"saleType\" type=\"text\" placeholder=\"Choose Client type\">\n                                        <option value=\"CPD\">Cashflow Prospect</option>\n                                        <option value=\"BPD\">Businessowner Prospect</option>\n                                        <option value=\"CCD\">Cashflow Client</option>\n                                        <option value=\"BCD\">Businessowner Client</option>\n                                        <option value=\"CND\">Cashflow Natural Mkt</option>\n                                        <option value=\"BND\">Business Natural Mkt</option>\n                                    </select>\n                                    <hr />\n\n                                    <label>Sale Name:</label>\n                                    <input id=\"apptname-input\" className=\"form-control\" value={this.state.saleName} onChange={this.handleInputChange} name=\"saleName\" type=\"text\" placeholder=\"Give your appointment a name!\" />\n\n                                    <hr />\n                                    <label>Product Sold:</label>\n                                    <input id=\"product-sold\" className=\"form-control\" value={this.state.saleProduct} onChange={this.handleInputChange} name=\"saleProduct\" type=\"text\" placeholder=\"Type of product sold\" />\n\n                                    <hr />\n                                    <label>Date of Sale:</label>\n                                    <input id=\"date-input\" className=\"form-control\" value={this.state.saleDate} onChange={this.handleInputChange} name=\"saleDate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n\n                                    <hr />\n                                    <label>Protege Tagged</label>\n                                    {this.props.proteges ? <select id=\"mentorDropMenu\" className=\"\" value={this.state.saleTagged} onChange={this.handleInputChange} name=\"saleTagged\">\n                                        <option value={\"none\"}>--Tag Mentor--</option>\n                                        {this.props.proteges.map(protege => (\n                                            <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                        ))}\n                                    </select> : null}\n\n                                    <hr />\n                                    <label>Sales Commission [only enter numbers]</label>\n                                    <input id=\"saleCommission\" className=\"form-control\" value={this.state.saleCommission} onChange={this.handleInputChange} name=\"saleCommission\" />\n\n                                    <hr />\n                                    <label>Your Percentage [only enter numbers]</label>\n                                    <input id=\"salePercentage\" className=\"form-control\" value={this.state.salePercentage} onChange={this.handleInputChange} name=\"salePercentage\" />\n\n                                    <hr />\n                                    <label>Mentor Percentage [only enter numbers]</label>\n                                    <input id=\"taggedPercentage\" className=\"form-control\" value={this.state.saleTaggedPercentage} onChange={this.handleInputChange} name=\"saleTaggedPercentage\" />\n\n                                    <hr />\n                                    <label>Lead Source:</label>\n                                    {/* <input id=\"source-input\" className=\"form-control\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\" type=\"text\" placeholder=\"Source of Lead\" /> */}\n                                    {this.props.userData.sources ? <select id=\"sourceDropMenu\" className=\"\" value={this.state.saleSource} onChange={this.handleInputChange} name=\"saleSource\">\n                                        <option value={\"none\"}>No Lead Source Selected</option>\n                                        {this.props.userData.sources.map(source => (\n                                            <option value={source}>{source}</option>\n                                        ))}\n                                    </select> : <p style={{ color: '' }}>\"No lead sources created yet\"</p>}\n\n                                    <hr />\n                                    <label>Target Market:</label>\n                                    {this.props.userData.targetMarkets ? <select id=\"sourceDropMenu\" className=\"customDropMentor\" value={this.state.saleTargetMkt} onChange={this.handleInputChange} name=\"saleTargetMkt\">\n                                        <option value={\"none\"}>No Target Market Selected</option>\n                                        {this.props.userData.targetMarkets.map(target => (\n                                            <option value={target}>{target}</option>\n                                        ))}\n                                    </select> : <p style={{ color: '' }}>\"No target markets created yet\"</p>}\n\n                                    <hr />\n                                    <label>Sales Notes:</label>\n                                    <input id=\"note-input\" className=\"form-control\" value={this.state.saleNotes} onChange={this.handleInputChange} name=\"saleNotes\" type=\"text\" placeholder=\"Enter any notes here\" />\n                                    <br />\n                                    <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleSaleSubmit}>Submit Sale</button>\n                                </div>\n                            </form>\n                        </div>\n                        : null}\n\n                </div>\n\n            // </div>\n        )\n\n    }\n}\n\nexport default SalesCreatorMentor","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport Modal from \"react-modal\"\n\n\n\nclass SalesItemMentor extends Component {\n\n    state = {\n        editModalIsOpen: false,\n        saleType: \"\",\n        saleName: \"\",\n        saleSource: \"\",\n        saleNotes: \"\",\n        saleDate: \"\",\n        saleTargetMkt: \"\",\n        saleTagged: \"\",\n        saleCommission: 0,\n        salePercentage: 0,\n        saleTaggedPercentage: 0,\n        saleProduct: \"\"\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        this.setState({\n            saleType: this.props.saleType,\n            saleName: this.props.saleName,\n            saleSource: this.props.saleSource,\n            saleNotes: this.props.saleNotes,\n            saleDate: this.props.saleDate,\n            saleTargetMkt: this.props.saleTargetMkt,\n            saleCommission: this.props.saleCommission,\n            salePercentage: this.props.salePercentage,\n            saleTaggedPercentage: this.props.saleTaggedPercentage,\n            saleProduct: this.props.saleProduct,\n            saleWriter: this.props.protege,\n            saleTagged: this.props.saleTagged\n        })\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleSaleUpdate = event => {\n        event.preventDefault()\n\n        var salesData = {\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            leadSource: this.state.saleSource,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            targetMarket: this.state.saleTargetMkt,\n            commission: this.state.saleCommission,\n            percentageMentor: this.state.salePercentage,\n            percentageProtege: this.state.saleTaggedPercentage,\n            product: this.state.saleProduct,\n            protege: this.props.saleTagged,\n            mentor: this.state.saleWriter\n        }\n\n        console.log(salesData)\n\n        this.setState({\n            editModalIsOpen: false\n        })\n\n        API.updateSale(this.props.id, {\n            clientType: this.state.saleType,\n            saleName: this.state.saleName,\n            leadSource: this.state.saleSource,\n            saleNotes: this.state.saleNotes,\n            saleDate: this.state.saleDate,\n            targetMarket: this.state.saleTargetMkt,\n            commission: this.state.saleCommission,\n            percentageMentor: this.state.salePercentage,\n            percentageProtege: this.state.saleTaggedPercentage,\n            product: this.state.saleProduct,\n            protege: this.props.saleTagged,\n            mentor: this.state.saleWriter\n        }).then(res =>\n            cogoToast.info(\"Updated Sale!\")\n        ).catch(err => console.log(err))\n\n    }\n\n    prepEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    deleteSale = () => {\n        API.deleteSale(this.props.id)\n            .then(res => cogoToast.error(\"You deleted this sale\"))\n            .catch(err => console.log(err))\n\n        setTimeout(() => {\n            cogoToast.loading(\"Updating Appointments\")\n            // this.props.rerender()\n        }, 500)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"card bg-light\">\n                    {/* <div style={{ height: '', padding: '0 10% 0 10%', textAlign: 'left', backgroundColor: 'rgba(255,255,255,0.75)', overflow: 'auto', borderRadius: '5px' }}> */}\n\n                    <div className=\"card-header\">\n                        <h4 style={{ textAlign: 'center' }}><u>{this.props.saleName}:</u></h4>\n                    </div>\n                    {/* <hr /> */}\n                    {/* <hr /> */}\n\n                    <div className=\"card-body\" style={{ padding: '20px' }}>\n\n                        <div></div>\n                        {this.props.saleNotes ? <p style={{ color: '' }}>Notes: {this.props.saleNotes}</p> : null}\n                        <p style={{ fontSize: '14px', float: 'right' }}>Type:\n                        {this.props.saleType === \"CPD\" ? <span> Cashflow Prospect</span> : null}\n                            {this.props.saleType === \"BPD\" ? <span> Businessowner Prospect</span> : null}\n                            {this.props.saleType === \"CCD\" ? <span> Cashflow Delegated Client</span> : null}\n                            {this.props.saleType === \"BCD\" ? <span> Businessowner Delegated Client</span> : null}\n                            {this.props.saleType === \"CND\" ? <span> Cashflow Natural Market</span> : null}\n                            {this.props.saleType === \"BND\" ? <span> Businessowner Natural Market</span> : null}\n                            {this.props.saleType === \"CSD\" ? <span> Cashflow Vertical/Orphan</span> : null}\n                            {this.props.saleType === \"BSD\" ? <span> Businessowner Vertical/Orphan</span> : null}\n                            {this.props.saleType === \"CRD\" ? <span> Cashflow Referral</span> : null}\n                            {this.props.saleType === \"BRD\" ? <span> Businessowner Referral\"</span> : null}\n                            {this.props.saleType === \"CTD\" ? <span> Cashflow Target Industry</span> : null}\n                            {this.props.saleType === \"BTD\" ? <span> Businessowner Target Industry</span> : null}\n                        </p>\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Source: {this.props.saleSource}</p>\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Commissions: ${this.props.saleCommission}</p>\n                        <br />\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Protege Percentage: {this.props.salePercentage * 100}% Payout: ${this.props.salePercentage * this.props.saleCommission}</p>\n                        <p style={{ fontSize: '14px', width: '%', float: 'left' }}>Mentor (You) Percentage: {this.props.saleTaggedPercentage * 100}% Payout: ${this.props.saleTaggedPercentage * this.props.saleCommission}</p>\n                    </div>\n\n                    <div style={{ clear: 'both', textAlign: 'center' }}>\n                        <button value={this.props.id} onClick={this.prepEditModal} className=\"btn btn-info btn-sm\" style={{ width: '33%' }}>Edit</button>\n                        <button value={this.props.id} onClick={this.deleteSale} className=\"btn btn-danger btn-sm\" style={{ width: '33%' }}>X</button>\n                    </div>\n                </div>\n\n\n                <div className=\"form-group\" id=\"appt-holder \">\n                    <Modal isOpen={this.state.editModalIsOpen} onAfterOpen={this.afterOpenEditModal} onRequestClose={this.closeEditModal} style={this.customStyles} contentLabel=\"Your Request Viewer\">\n                        {/* <div className=\"card\"> */}\n                        <h3>Sale Logger</h3>\n                        <form className=\"form-group\">\n                            <label>Type of Sale</label>\n                            <select className=\"custom-select my-1 mr-sm-2\" value={this.state.saleType} onChange={this.handleInputChange} name=\"saleType\" type=\"text\" placeholder=\"Choose Client type\">\n                                <option value=\"CPD\">Cashflow Prospect</option>\n                                <option value=\"BPD\">Businessowner Prospect</option>\n                                <option value=\"CCD\">Cashflow Client</option>\n                                <option value=\"BCD\">Businessowner Client</option>\n                                <option value=\"CND\">Cashflow Natural Mkt</option>\n                                <option value=\"BND\">Business Natural Mkt</option>\n                            </select>\n\n                            <label>Sale Name:</label>\n                            <input id=\"apptname-input\" className=\"form-control\" value={this.state.saleName} onChange={this.handleInputChange} name=\"saleName\" type=\"text\" placeholder=\"Give your appointment a name!\" />\n\n                            <label>Product Sold:</label>\n                            <input id=\"product-sold\" className=\"form-control\" value={this.state.saleProduct} onChange={this.handleInputChange} name=\"saleProduct\" type=\"text\" placeholder=\"Type of product sold\" />\n\n                            <label>Date of Sale:</label>\n                            <input id=\"date-input\" className=\"form-control\" value={this.state.saleDate} onChange={this.handleInputChange} name=\"saleDate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n\n                            <label>Protege Tagged</label>\n                            {this.props.proteges ? <select id=\"mentorDropMenu\" value={this.props.saleTagged} onChange={this.handleInputChange} name=\"saleTagged\">\n                                <option value={\"none\"}>--Tag Protege--</option>\n                                {this.props.proteges.map(protege => (\n                                    <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                ))}\n                            </select> : null}\n\n                            <label>Sales Commission [only enter numbers]</label>\n                            <input id=\"saleCommission\" className=\"form-control\" value={this.state.saleCommission} onChange={this.handleInputChange} name=\"saleCommission\" />\n\n                            <label>Protege Percentage [only enter numbers]</label>\n                            <input id=\"salePercentage\" className=\"form-control\" value={this.state.salePercentage} onChange={this.handleInputChange} name=\"salePercentage\" />\n\n                            <label>Mentor Percentage [only enter numbers]</label>\n                            <input id=\"taggedPercentage\" className=\"form-control\" value={this.state.saleTaggedPercentage} onChange={this.handleInputChange} name=\"saleTaggedPercentage\" />\n\n\n\n                            <label>Sales Notes:</label>\n                            <input id=\"note-input\" className=\"form-control\" value={this.state.saleNotes} onChange={this.handleInputChange} name=\"saleNotes\" type=\"text\" placeholder=\"Enter any notes here\" />\n                            <br />\n                            <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleSaleUpdate}>Update Sale</button>\n\n                        </form>\n                        {/* </div> */}\n                    </Modal>\n                </div>\n\n            </div >\n        )\n    }\n}\n\nexport default SalesItemMentor","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\nimport \"./style.css\"\n\n\n\nclass AppointmentCreatorMentor extends Component {\n\n    state = {\n        apptname: \"\",\n        apptsource: \"\",\n        apptnotes: \"\",\n        apptdate: \"\",\n        appttargetmkt: \"\",\n        apptTagged: \"\",\n        showAppt: false\n    }\n\n    componentDidMount() {\n        // console.log(\"Loaded Appt Item\")\n        // console.log(this.props)\n        // this.setState({\n        //     apptname: this.props.apptname,\n        //     apptsource: this.props.source,\n        //     apptnotes: this.props.notes,\n        //     apptdate: this.props.date\n        // })\n\n        console.log(this.props.userID)\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    ///////////////////////////////////////////////////////////\n    /////////// APPOINTMENT DATA INPUT ////////////////////////\n    ///////////////////////////////////////////////////////////\n\n    handleApptSubmit = event => {\n        event.preventDefault()\n        console.log(\"Submitting appointment under user ID: \" + this.state.apptTagged)\n\n        // var ApptData = {\n        //     apptname: this.state.apptname,\n        //     source: this.state.apptsource,\n        //     notes: this.state.apptnotes,\n        //     date: this.state.apptdate,\n        //     dialer: \"none\",\n        //     type: this.state.type,\n        //     targetMarket: this.state.appttargetmkt\n        // }\n\n        // console.log(ApptData)\n\n        var protegeID = this.state.apptTagged\n\n\n        API.saveAppointment(protegeID, {\n            apptname: this.state.apptname,\n            source: this.state.apptsource,\n            notes: this.state.apptnotes,\n            date: this.state.apptdate,\n            type: this.state.type,\n            targetMarket: this.state.appttargetmkt,\n            mentor: this.props.userID,\n            protege: this.state.apptTagged\n        }).then(res =>\n            cogoToast.info(\"Saved Appt!\")\n        ).catch(err => console.log(err))\n\n        setTimeout(() => {\n            // cogoToast.loading(\"Re-loading appointments\")\n            // this.props.rerender()\n        }, 1000)\n\n    }\n\n    showApptForm = () => {\n        if (this.state.showAppt === false) {\n            this.setState({\n                showAppt: true\n            })\n        } else {\n            this.setState({\n                showAppt: false\n            })\n        }\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"col-12\" id=\"prospect\" style={{ textAlign: 'left', padding: '0', marginBottom: '10px' }}>\n                <div className=\"card bg-light\">\n\n                    <div className=\"card-header\">\n                        <h4 style={{ textAlign: 'center', padding: '10%', color: 'black', margin: '' }}>Create appointment\n                        <br />\n                            <span>< button className=\"btn btn-sm btn-outline-dark\" onClick={this.showApptForm}>Show</button></span></h4>\n\n                    </div>\n\n                    {this.state.showAppt ?\n\n\n                        <div className=\"card-body\" style={{ padding: '10px', height: '400px', overflow: 'auto' }}>\n                            <form style={{}}>\n                                <div style={{ color: 'black', padding: '20px', borderRadius: '30px' }}>\n\n                                    <label>Type : </label>\n                                    <select className=\"custom-select my-1 mr-sm-2 customDrop-Mentor\" value={this.state.type} onChange={this.handleInputChange} name=\"type\" type=\"text\" placeholder=\"Choose an appointment type..\">\n                                        <option value=\"CPD\">Standard/Cashflow Prospect</option>\n                                        <option value=\"CCD\">Standard/Cashflow Delegated Client</option>\n                                        <option value=\"CND\">Standard/Cashflow Natural Mkt</option>\n                                        <option value=\"CSD\">Standard/Cashflow Suspect</option>\n                                        <option value=\"CRD\">Standard/Cashflow Referral</option>\n                                        <option value=\"CTD\">Standard/Cashflow Target Market</option>\n                                        <option value=\"BPD\">Tier-1/Businessowner Prospect</option>\n                                        <option value=\"BCD\">Tier-1/Businessowner Client</option>\n                                        <option value=\"BND\">Tier-1/Businessowner Natural Mkt</option>\n                                        <option value=\"BSD\">Tier-1/Businessowner Suspect</option>\n                                        <option value=\"BRD\">Tier-1/Busienssowner Referral</option>\n\n\n                                        <option value=\"BTD\">Tier-1/Businessowner Target Market</option>\n                                    </select>\n                                    <br />\n\n                                    <label>Name:</label>\n                                    <input id=\"apptname-input\" className=\"form-control\" value={this.state.apptname} onChange={this.handleInputChange} name=\"apptname\" type=\"text\" placeholder=\"Give your appointment a name!\" />\n                                    <br />\n                                    <label>Date:</label>\n                                    <input id=\"date-input\" className=\"form-control\" value={this.state.apptdate} onChange={this.handleInputChange} name=\"apptdate\" type=\"date\" placeholder=\"Enter date for your appointment\" />\n                                    <br />\n                                    <label>Protege:</label>\n                                    {this.props.userData.proteges ? <select className=\"\" value={this.props.apptTagged} onChange={this.handleInputChange} name=\"apptTagged\">\n                                        <option value={\"none\"}>--Tag Mentor--</option>\n                                        {this.props.userData.proteges.map(protege => (\n                                            <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                        ))}\n                                    </select> : null}\n                                    <br />\n\n                                    <label>Lead Source:</label>\n                                    {/* <input id=\"source-input\" className=\"form-control\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\" type=\"text\" placeholder=\"Source of Lead\" /> */}\n                                    {this.props.protegeData.sources ? <select className=\"\" value={this.state.apptsource} onChange={this.handleInputChange} name=\"apptsource\">\n                                        <option value={\"none\"}>No Lead Source Selected</option>\n                                        {this.props.protegeData.sources.map(source => (\n                                            <option key={source} value={source}>{source}</option>\n                                        ))}\n                                    </select> : <p style={{ color: '' }}>\"No lead sources created yet\"</p>}\n                                    <br />\n\n                                    <label>Industry :</label>\n                                    {/* <input id=\"targetmkt-input\" className=\"form-control\" value={this.state.apptTargetMkt} onChange={this.handleInputChange} name=\"appttargetmkt\" type=\"text\" placeholder=\"Target Market goes here\" /> */}\n                                    {this.props.protegeData.targetMarkets ? <select className=\"\" value={this.state.appttargetmkt} onChange={this.handleInputChange} name=\"appttargetmkt\">\n                                        <option value={\"none\"}>No Target Market Selected</option>\n                                        {this.props.protegeData.targetMarkets.map(target => (\n                                            <option value={target}>{target}</option>\n                                        ))}\n                                    </select> : <p style={{ color: '' }}>\"No target markets created yet\"</p>}\n                                    <br />\n\n                                    <label>Notes:</label>\n                                    <input id=\"note-input\" className=\"form-control\" value={this.state.apptnotes} onChange={this.handleInputChange} name=\"apptnotes\" type=\"text\" placeholder=\"Enter any notes...\" />\n                                    <br />\n                                    <button id=\"appt-input-btn\" className=\"btn-success form-control\" onClick={this.handleApptSubmit}>Submit Appointment</button>\n                                </div>\n                            </form>\n                        </div>\n                        : null}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default AppointmentCreatorMentor","import React, { Component } from \"react\";\nimport \"./Home.css\";\n// import Nav from \"../components/Nav\";\nimport API from \"../utils/API\";\nimport MentorDataViewer from \"../components/MentorDataViewer\"\n// import NoteViewer from \"../components/NoteViewer\";\n// import Header from \"../components/Header\";\n// import TopBarMentor from \"../components/TopBarMentor\";\n// import NoteViewer from \"../components/NoteViewer\";\n// import NoteInput from \"../components/NoteInput\";\n// import ProtegeProfileContainer from \"../components/ProtegeProfileContainer\";\n//     import ProtegeProfile from \"../component/ProtegeProfile\"\n// import MentorAnalytics from \"../components/MentorAnalytics\";\n//     import AnalyticsMBasic from \"../components/AnalyticsMB\";\n//     import AnalyticsMAdvanced from \"../components/AnalyticsMAdvanced\";\nimport NoteViewerMentor from \"../components/NoteViewerMentor\"\nimport NoteCreatorMentor from \"../components/NoteCreatorMentor\"\nimport SalesCreatorMentor from \"../components/SalesCreatorMentor\"\nimport SalesItemMentor from \"../components/SalesItemMentor\"\nimport AppointmentItem from \"../components/AppointmentItem\";\nimport AppointmentCreatorMentor from \"../components/AppointmentCreatorMentor\"\nimport './Mentor.css'\n// import SideNavPageMentor from \"../components/SideNavPageMentor\";\nimport MainCalendar from \"../components/MainCalendar\"\n// import AppointmentCreator from \"../components/AppointmentCreator\";\n\nclass MentorDash extends Component {\n\n    state = {\n        mentor: \"\",\n        protegeData: \"\",\n        dialData: \"\",\n        appointments: \"\",\n        contactData: \"\",\n        numScheduled: 0,\n        CPDials: 0,\n        BPDials: 0,\n        CCDials: 0,\n        BCDials: 0,\n        CNDials: 0,\n        BNDials: 0,\n        CPContacts: 0,\n        BPContacts: 0,\n        CCContacts: 0,\n        BCContacts: 0,\n        CNContacts: 0,\n        BNContacts: 0,\n        CPAppts: 0,\n        BPAppts: 0,\n        CCAppts: 0,\n        BCAppts: 0,\n        CNAppts: 0,\n        BNAppts: 0,\n        CSDials: 0,\n        BSDials: 0,\n        CSContacts: 0,\n        BSContacts: 0,\n        CSAppts: 0,\n        BSAppts: 0,\n        protegeSelected: \"\",\n        taggedNotes: \"\",\n        postedNotes: \"\",\n        viewMainData: true,\n        viewAppointments: false,\n        viewNotes: false,\n        viewSales: false,\n        showNoteViewer: false,\n        showAnalyticsData: false\n    }\n\n    componentDidMount() {\n        console.log(\"Loaded Mentor Page\")\n        setTimeout(() => {\n            this.getMentorData()\n        }, 1200)\n    }\n\n    getMentorData = () => {\n        console.log(this.props.user.uid)\n        var userID = this.props.user.uid\n        API.getMentor(userID)\n            .then(res =>\n                this.setState({\n                    mentor: res.data[0]\n                }),\n                setTimeout(() => {\n                    this.getProtegeData()\n                    this.getMentorNoteData()\n                    this.gatherMentorSales()\n                    this.gatherMentorAppts()\n                }, 500))\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n    getMentorNoteData = () => {\n        console.log(this.state.mentor._id)\n\n        API.getMentorNotes(this.state.mentor._id)\n            .then(res =>\n                this.setState({\n                    notes: res.data\n                })\n            )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    gatherMentorSales = () => {\n        console.log(this.state.mentor._id)\n\n\n        API.getMentorSales(this.state.mentor._id)\n            .then(res =>\n                this.setState({\n                    salesData: res.data\n                })\n            )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    gatherMentorAppts = () => {\n        console.log(this.state.mentor._id)\n        API.getMentorAppts(this.state.mentor._id)\n            .then(res =>\n                this.setState({\n                    mentorViewAppts: res.data\n                })\n            )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    getProtegeData = () => {\n        console.log(this.state.mentor.proteges.length)\n        var proteges = this.state.mentor.proteges\n        var newestProtegeIndex = proteges.length - 1\n\n        console.log(\"Looking for: \" + proteges[newestProtegeIndex]._id)\n        API.getUserDataById(proteges[newestProtegeIndex]._id)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    protegeData: res.data[0],\n                    dialData: res.data[0].dials,\n                    protegeSelected: res.data[0]._id,\n                    appointments: res.data[0].appointments\n                })\n            }\n                , this.getContactData(),\n                // this.gatherAppointments(),\n                setTimeout(() => {\n                    this.parseDials()\n                    this.parseAppointments()\n                }, 500)\n            )\n    }\n\n    getNextProtegeData = () => {\n      \n\n        console.log(\"Looking for: \" + this.state.protegeSelected._id)\n        API.getUserDataById(this.state.protegeSelected._id)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    protegeData: res.data[0],\n                    dialData: res.data[0].dials,\n                    protegeSelected: res.data[0]._id,\n                    appointments: res.data[0].appointments\n                })\n            }\n                , this.getContactData(),\n                // this.gatherAppointments(),\n                setTimeout(() => {\n                    this.parseDials()\n                    this.parseAppointments()\n                }, 2000)\n            )\n\n    }\n\n    getContactData = () => {\n        setTimeout(() => {\n            console.log(\"Searching for contacts using: \" + this.state.protegeData._id)\n            API.getContacts(this.state.protegeData._id)\n                .then(res =>\n                    // console.log(res.data.length)\n                    this.setState({\n                        contactData: res.data\n                    }),\n                    setTimeout(() => { this.parseContacts() }, 500)\n                )\n        }, 1000)\n\n    }\n\n\n    // gatherAppointments = () => {\n    //     setTimeout(() => {\n    //         console.log(\"Gathering appointemnts using ID: \" + this.state.protegeData._id)\n    //         API.getAppointments(this.state.protegeData._id)\n    //             .then(res =>\n    //                 this.setState({\n    //                     appointments: res.data\n    //                 }),\n    //                 setTimeout(() => { this.parseAppointments() }, 500)\n    //             )\n    //     }, 1000)\n    // };\n\n    parseAppointments = () => {\n        console.log(\"Parsing appointments: \" + this.state.appointments)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        for (var i = 0; i < this.state.appointments.length; i++) {\n            console.log(this.state.appointments[i])\n            switch (this.state.appointments[i].type) {\n                case \"CPD\":\n                    CPA++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    break;\n                case \"CND\":\n                    CNA++\n                    break;\n                case \"BND\":\n                    BNA++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: CPA,\n            BPAppts: BPA,\n            CCAppts: CCA,\n            BCAppts: BCA,\n            CNAppts: CNA,\n            BNAppts: BNA,\n            CSAppts: CSA,\n            BSAppts: BSA,\n            CRAppts: CRA,\n            BRAppts: BRA,\n            CTAppts: CTA,\n            BTAppts: BTA\n        })\n    }\n\n    parseDials = () => {\n        console.log(\"Parsing Dials: \" + this.state.dialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.dialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    break;\n                case \"CND\":\n                    CND++\n                    break;\n                case \"BND\":\n                    BND++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: CPD,\n            BPDials: BPD,\n            CCDials: CCD,\n            BCDials: BCD,\n            CNDials: CND,\n            BNDials: BND,\n            CSDials: CSD,\n            BSDials: BSD,\n            CRDials: CRD,\n            BRDials: BRD,\n            CTDials: CTD,\n            BTDials: BTD\n        })\n    }\n\n    parseContacts = () => {\n        console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        for (var i = 0; i < this.state.contactData.length; i++) {\n            switch (this.state.contactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    break;\n                case \"CND\":\n                    CNC++\n                    break;\n                case \"BND\":\n                    BNC++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    break;\n                case \"CTD\":\n                    CTC++\n                    break;\n                case \"BTD\":\n                    BTC++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPContacts: CPC,\n            BPContacts: BPC,\n            CCContacts: CCC,\n            BCContacts: BCC,\n            CNContacts: CNC,\n            BNContacts: BNC,\n            CSContacts: CSC,\n            BSContacts: BSC,\n            CRContacts: CRC,\n            BRContacts: BRC,\n            CTContacts: CTC,\n            BTContacts: BTC\n        })\n    }\n\n    handleProtegeChange = (event) => {\n        event.preventDefault()\n        console.log(this.state.protegeSelected)\n        API.getUserDataById(this.state.protegeSelected)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    protegeData: res.data[0],\n                    dialData: res.data[0].dials,\n                    protegeSelected: res.data[0]._id,\n                    appointments: res.data[0].appointments\n                })\n            }\n                , this.getContactData(),\n                // this.gatherAppointments(),\n                setTimeout(() => { this.parseDials() }, 500)\n            )\n    }\n\n    // viewMainData = () => {}\n    viewMainData = () => {\n        if (this.state.viewMainData === true) {\n            this.setState({\n                viewMainData: false\n            })\n        } else {\n            this.setState({\n                viewMainData: true,\n                viewAppointments: false,\n                viewNotes: false,\n                viewSales: false\n            })\n        }\n    }\n\n    // viewAppointments = () => {}\n    viewAppointments = () => {\n        if (this.state.viewAppointments === true) {\n            this.setState({\n                viewAppointments: false\n            })\n        } else {\n            this.setState({\n                viewMainData: false,\n                viewAppointments: true,\n                viewNotes: false,\n                viewSales: false\n            })\n        }\n    }\n\n    // viewNotes = () => {}\n    viewNotes = () => {\n        if (this.state.viewNotes === true) {\n            this.setState({\n                viewNotes: false\n            })\n        } else {\n            this.setState({\n                viewMainData: false,\n                viewAppointments: false,\n                viewNotes: true,\n                viewSales: false\n            })\n        }\n    }\n    // viewSales = () => {}\n    viewSales = () => {\n        if (this.state.viewSales === true) {\n            this.setState({\n                viewSales: false\n            })\n        } else {\n            this.setState({\n                viewMainData: false,\n                viewAppointments: false,\n                viewNotes: false,\n                viewSales: true\n            })\n        }\n    }\n\n    showApptViewer = () => {\n\n        if (!this.state.showApptViewer) {\n            this.setState({\n                showApptViewer: true\n            })\n        } else {\n            this.setState({\n                showApptViewer: false\n            })\n        }\n    }\n\n    showNoteViewer = () => {\n        if (!this.state.showNoteViewer) {\n            this.setState({\n                showNoteViewer: true\n            })\n        } else {\n            this.setState({\n                showNoteViewer: false\n            })\n        }\n    }\n\n    showAnalyticsData = () => {\n        if (!this.state.showAnalyticsData) {\n            this.setState({\n                showAnalyticsData: true\n            })\n        } else {\n            this.setState({\n                showAnalyticsData: false\n            })\n        }\n    }\n\n    showSalesViewer = () => {\n        if (!this.state.showSalesViewer) {\n            this.setState({\n                showSalesViewer: true\n            })\n        } else {\n            this.setState({\n                showSalesViewer: false\n            })\n        }\n    }\n\n    handleScopeChange = (e) => {\n        e.preventDefault()\n        console.log(this.state.scopeSelected)\n        if (this.state.scopeSelected === \"viewAll\") {\n            this.getNextProtegeData()\n        } else if (this.state.scopeSelected === \"viewWeekly\") {\n            this.getWeeklyDials()\n            this.getWeeklyAppts()\n        } else if (this.state.scopeSelected === \"viewMonthly\") {\n            this.getMonthlyDials()\n            this.getMonthlyAppts()\n        }\n    }\n\n    getWeeklyDials = () => {\n        API.getWeeklyDials(this.state.protegeData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    dialData: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseWeeklyDials()\n            this.parseWeeklyContacts()\n        }, 1000)\n    }\n\n    getMonthlyDials = () => {\n        API.getMonthlyDials(this.state.protegeData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    dialData: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseMonthlyDials()\n            this.parseMonthlyContacts()\n        }, 1000)\n    }\n\n    getMonthlyAppts = () => {\n        API.getMonthlyAppts(this.state.protegeData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    apptData: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseMonthlyAppts()\n        }, 1000)\n    }\n\n\n    getWeeklyAppts = () => {\n        API.getWeeklyAppts(this.state.protegeData._id)\n            .then(res => {\n                this.setState({\n                    apptData: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        setTimeout(() => {\n            this.parseWeeklyAppointments()\n        }, 1000)\n    }\n\n    parseWeeklyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.dialData[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: wCPD,\n            BPDials: wBPD,\n            CCDials: wCCD,\n            BCDials: wBCD,\n            CNDials: wCND,\n            BNDials: wBND,\n            CSDials: wCSD,\n            BSDials: wBSD,\n            CRDials: wCRD,\n            BRDials: wBRD,\n            CTDials: wCTD,\n            BTDials: wBTD\n        })\n    }\n\n    parseMonthlyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.dialData[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: wCPD,\n            BPDials: wBPD,\n            CCDials: wCCD,\n            BCDials: wBCD,\n            CNDials: wCND,\n            BNDials: wBND,\n            CSDials: wCSD,\n            BSDials: wBSD,\n            CRDials: wCRD,\n            BRDials: wBRD,\n            CTDials: wCTD,\n            BTDials: wBTD\n        })\n    }\n\n\n\n\n    parseWeeklyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n\n            if (this.state.dialData[i].contact === true) {\n                switch (this.state.dialData[i].type) {\n                    case \"CPD\":\n                        wCPC++\n                        break;\n                    case \"BPD\":\n                        wBPC++\n                        break;\n                    case \"CCD\":\n                        wCCC++\n                        break;\n                    case \"BCD\":\n                        wBCC++\n                        break;\n                    case \"CND\":\n                        wCNC++\n                        break;\n                    case \"BND\":\n                        wBNC++\n                        break;\n                    case \"CSD\":\n                        wCSC++\n                        break;\n                    case \"BSD\":\n                        wBSC++\n                        break;\n                    case \"CRD\":\n                        wCRC++\n                        break;\n                    case \"BRD\":\n                        wBRC++\n                        break;\n                    case \"CTD\":\n                        wCTC++\n                        break;\n                    case \"BTD\":\n                        wBTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseMonthlyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n\n            if (this.state.dialData[i].contact === true) {\n                switch (this.state.dialData[i].type) {\n                    case \"CPD\":\n                        wCPC++\n                        break;\n                    case \"BPD\":\n                        wBPC++\n                        break;\n                    case \"CCD\":\n                        wCCC++\n                        break;\n                    case \"BCD\":\n                        wBCC++\n                        break;\n                    case \"CND\":\n                        wCNC++\n                        break;\n                    case \"BND\":\n                        wBNC++\n                        break;\n                    case \"CSD\":\n                        wCSC++\n                        break;\n                    case \"BSD\":\n                        wBSC++\n                        break;\n                    case \"CRD\":\n                        wCRC++\n                        break;\n                    case \"BRD\":\n                        wBRC++\n                        break;\n                    case \"CTD\":\n                        wCTC++\n                        break;\n                    case \"BTD\":\n                        wBTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseWeeklyAppointments = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.apptData.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.apptData[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n    parseMonthlyAppts = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.apptData.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.apptData[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                {/* <SideNavPageMentor\n                    dataOption={this.viewMainData}\n                    apptOption={this.viewAppointments}\n                    noteOption={this.viewNotes}\n                    salesOption={this.viewSales}\n                /> */}\n                <div style={{ color: 'black' }}>\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{ padding: '30px' }}>\n                        <div className=\"navbar-brand\" style={{color: 'black'}} >{this.state.mentor.firstName} {this.state.mentor.lastName} Dashboard</div>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <div className=\"nav-link\" onClick={this.showDials}>Home</div>\n                                </li>\n                                {/* <li className=\"nav-item\">\n                                <a className=\"nav-link\" onClick={this.showDials}>Dialing Tool</a>\n                            </li> */}\n                                <li className=\"nav-item\">\n                                    <div className=\"nav-link\" onClick={this.viewMainData}>Analytics</div>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <div className=\"nav-link\" onClick={this.viewNotes}>Notes</div>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <div className=\"nav-link\" onClick={this.viewAppointments}>Appointments</div>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <div className=\"nav-link\" onClick={this.viewSales}>Sales</div>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n                <div className=\"container\">\n                    {/* <Nav /> */}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n\n                            <div className=\"jumbotron\" style={{ height: '300px', backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                                <h3 style={{ textAlign: 'center', color: 'white' }}>Welcome {this.state.mentor.firstName}!</h3>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6\">\n                                        <h4 style={{ textAlign: 'center', color: 'white' }}> Please select your Protege</h4>\n                                        {/* Mentor Header Here */}\n                                        {/* Top Reader 8/12 Left (Sortable by Proteges, including Past)\n                        --Contacts / Dials\n                        --Appointments / Sales\n                        --Sales / Appointment  \n                    */}\n                                        <form>\n                                            {this.state.mentor ?\n\n                                                <div style={{ textAlign: 'center' }}>\n                                                    <span>\n                                                        <select style={{}} id=\"protegeSelector\" value={this.state.protegeSelected} onChange={this.handleInputChange} type=\"text\" name=\"protegeSelected\" className=\"customDropMentor\" placeholder=\"Choose your protege\">\n                                                            {this.state.mentor.proteges.map(protege => (\n                                                                <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                                            ))} </select>\n                                                        <br />\n                                                        <button style={{}} onClick={this.handleProtegeChange} className=\"btn btn-sm btn-outline-light\">Search</button>\n                                                    </span>\n                                                    <br />\n\n                                                </div> : null}\n                                        </form>\n                                    </div>\n                                    <br />\n                                    <div className=\"col-lg-6\">\n                                        <h4 style={{ textAlign: 'center', color: 'white' }}>Please select your Scope</h4>\n\n                                        <form>\n\n\n                                            <div style={{ textAlign: 'center' }}>\n\n                                                <select style={{}} id=\"protegeSelector\" value={this.state.scopeSelected} onChange={this.handleInputChange} type=\"text\" name=\"scopeSelected\" className=\"customDropMentor\" placeholder=\"Choose your protege\">\n                                                    <option value={\"none\"}>---------------</option>\n                                                    <option value={\"viewAll\"}>All Data</option>\n                                                    <option value={\"viewWeekly\"}>Weekly Data</option>\n                                                    <option value={\"viewMonthly\"}>Monthly Data</option>\n                                                </select>\n                                                <br />\n                                                <button style={{}} onClick={this.handleScopeChange} className=\"btn btn-sm btn-outline-light\">Apply</button>\n\n                                                <br />\n\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n\n\n                    </div>\n\n\n\n\n\n\n\n\n                    <div className=\"row\" style={{ marginTop: '20px', marginBottom: 200 }}>\n\n\n\n                        <div className=\"col-lg-8\">\n\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  /////////////////////////   Analytics Tool            /////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                            {this.state.viewMainData ?\n                                <div className=\"mentor-data-viewer-container\" style={{ height: '1000px', overflow: 'auto',  marginBottom: '100px' }}>\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-12\">\n                                            <MentorDataViewer\n                                                protegeData={this.state.protegeData}\n                                                contactData={this.state.contactData}\n                                                dialData={this.state.dialData}\n                                                apptData={this.state.appointments}\n                                                CPAppts={this.state.CPAppts}\n                                                BPAppts={this.state.BPAppts}\n                                                CCAppts={this.state.CCAppts}\n                                                BCAppts={this.state.BCAppts}\n                                                CNAppts={this.state.CNAppts}\n                                                BNAppts={this.state.BNAppts}\n                                                CPDials={this.state.CPDials}\n                                                BPDials={this.state.BPDials}\n                                                CCDials={this.state.CCDials}\n                                                BCDials={this.state.BCDials}\n                                                CNDials={this.state.CNDials}\n                                                BNDials={this.state.BNDials}\n                                                CPContacts={this.state.CPContacts}\n                                                BPContacts={this.state.BPContacts}\n                                                CCContacts={this.state.CCContacts}\n                                                BCContacts={this.state.BCContacts}\n                                                CNContacts={this.state.CNContacts}\n                                                BNContacts={this.state.BNContacts}\n                                                CSDials={this.state.CSDials}\n                                                BSDials={this.state.BSDials}\n                                                CSContacts={this.state.CSContacts}\n                                                BSContacts={this.state.BSContacts}\n                                                CSAppts={this.state.CSAppts}\n                                                BSAppts={this.state.BSAppts}\n                                                CRDials={this.state.CRDials}\n                                                BRDials={this.state.BRDials}\n                                                CRContacts={this.state.CRContacts}\n                                                BRContacts={this.state.BRContacts}\n                                                CRAppts={this.state.CRAppts}\n                                                BRAppts={this.state.BRAppts}\n                                                CTDials={this.state.CTDials}\n                                                BTDials={this.state.BTDials}\n                                                CTContacts={this.state.CTContacts}\n                                                BTContacts={this.state.BTContacts}\n                                                CTAppts={this.state.CTAppts}\n                                                BTAppts={this.state.BTAppts}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                : null}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  /////////////////////////   Appointments Tool            /////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                            {this.state.viewAppointments ?\n                                <div className=\"row\">\n                                    <div className=\"col-8\">\n                                        <div className=\"card\" style={{ zIndex: 0, padding: '20px' }}>\n\n                                            <h4 style={{ textAlign: 'center' }}>Quickview Calendar</h4>\n                                            <MainCalendar\n                                                appointments={this.state.appointments}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-12\">\n                                        <p></p>\n                                        <AppointmentCreatorMentor\n                                            userID={this.state.mentor._id}\n                                            username={this.state.mentor.firstName + this.state.mentor.lastName}\n                                            rerender={this.gatherMentorAppts}\n                                            userData={this.state.mentor}\n                                            proteges={this.state.mentor.proteges}\n                                            protegeData={this.state.protegeData}\n                                        />\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"card bg-light\" style={{ marginBottom: '10px', marginTop: '10px', textAlign: \"left\", padding: 10, height: '', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8)' }}>\n\n                                            <div className=\"card-header\">\n                                                <h4 style={{ textAlign: 'center', padding: '10%', color: 'black', margin: '20px' }}>Manage Your Appointments:</h4>\n                                            </div>\n                                            {this.state.mentorViewAppts ?\n\n\n                                                <div className=\"card-body bg-dark\" style={{ padding: '0px 25px 0px 25px', height: '' }}>\n                                                    <div style={{ height: '600px', overflow: 'auto' }}>\n                                                        {this.state.mentorViewAppts.map(appt => (\n                                                            <AppointmentItem\n                                                                key={appt._id}\n                                                                id={appt._id}\n                                                                apptname={appt.apptname}\n                                                                mentor={appt.mentor}\n                                                                type={appt.type}\n                                                                held={appt.held}\n                                                                sold={appt.sold}\n                                                                dialer={appt.protege}\n                                                                date={appt.date}\n                                                                source={appt.source}\n                                                                // date={appt.date}\n                                                                notes={appt.notes}\n                                                                username={this.state.mentor.firstName + this.state.mentor.lastName}\n                                                                rerender={this.gatherMentorAppts}\n                                                                user={this.state.mentor}\n                                                                targetMarket={appt.targetMarket}\n                                                                mentors={this.state.mentor.proteges}\n                                                                proteges={this.state.mentor.proteges}\n\n                                                            />\n                                                        ))} </div>\n                                                </div>\n                                                : null}\n                                        </div>\n                                    </div>\n                                </div>\n                                : null}\n\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  /////////////////////////   Notes Tool            /////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n                            {this.state.viewNotes ?\n                                <div id=\"mentor-note-container\">\n                                    <div className=\"row\" >\n                                        {/* <div className=\"col card\" style={{ padding: '50px', backgroundColor: 'rgba(77,160,255,0.8)', color: 'whitesmoke' }}>\n                                        <h2 style={{ textAlign: 'center', padding: '20px', backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', margin: '20px', borderRadius: '10px' }}>N O T E S</h2> */}\n                                        <div className=\"col-12\">\n                                            <NoteCreatorMentor\n                                                userData={this.state.mentor}\n                                            />\n                                        </div>\n                                        <br />\n                                        <br />\n\n                                    </div>\n\n\n\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"card bg-light\" style={{ marginTop: '15px' }}>\n\n\n                                                <div className=\"card-header\">\n                                                    {/* <div style={{ height: '50px', textAlign: 'center', color: 'white', backgroundColor: 'rgba(0,0,0,0.50)' }}> */}\n                                                    <p style={{ textAlign: 'center', paddingTop: '5px' }}>Your Notes</p>\n                                                </div>\n\n                                                <div className=\"card-body bg-dark\" style={{ padding: '0px 10px 0px 10px', marginBottom: '20px' }}>\n                                                    <NoteViewerMentor\n                                                        fontSize={'20px'}\n                                                        notes={this.state.notes}\n                                                        rerender={this.getMentorNoteData}\n                                                        height={'700px'}\n                                                    />\n                                                </div>\n                                                {/* <div style={{ height: '20px', color: 'black', backgroundColor: 'rgba(0,0,0,0.50)' }}>\n                                            </div> */}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                : null}\n\n\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  /////////////////////////   Sales Tool            /////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                            {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n\n\n\n                            {this.state.viewSales ?\n                                <>\n                                    <div className=\"row\" style={{ marginBottom: '20px' }}>\n                                        <div className=\"col-12\">\n                                            <SalesCreatorMentor\n                                                userID={this.state.mentor._id}\n                                                userData={this.state.mentor}\n                                                proteges={this.state.mentor.proteges}\n                                            />\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            {/* <div className=\"card\" style={{ marginBottom: '10px', marginTop: '10px', textAlign: \"left\", padding: 10, height: '', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8)' }}> */}\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h4 style={{ textAlign: 'center', padding: '10%', backgroundColor: '', color: 'black' }}>Your Sales<br /><span><button className=\"btn btn-outline-dark\" onClick={this.showSalesViewer}>Show</button></span></h4>\n                                                </div>\n\n                                                {this.state.showSalesViewer ?\n                                                    <div>\n                                                        {this.state.salesData ?\n                                                            <div className=\"card-body bg-dark\" style={{ padding: '0px 25px 0px 25px' }}>\n                                                                <div style={{ height: '400px', overflow: 'auto' }}>\n                                                                    {\n                                                                        this.state.salesData.map(sale => (\n                                                                            <SalesItemMentor\n                                                                                key={sale._id}\n                                                                                id={sale._id}\n                                                                                saleType={sale.clientType}\n                                                                                saleName={sale.saleName}\n                                                                                saleSource={sale.leadSource}\n                                                                                saleNotes={sale.saleNotes}\n                                                                                saleDate={sale.saleDate}\n                                                                                saleTargetMkt={sale.targetMarket}\n                                                                                saleCommission={sale.commission}\n                                                                                salePercentage={sale.percentageMentor}\n                                                                                saleTaggedPercentage={sale.percentageProtege}\n                                                                                saleProduct={sale.product}\n                                                                                saleTagged={sale.protege}\n                                                                                saleWriter={sale.mentor}\n                                                                                proteges={this.state.mentor.proteges}\n                                                                                userData={this.state.mentor}\n                                                                            />\n                                                                        ))\n                                                                    } </div> </div>\n                                                            : null}\n                                                    </div>\n                                                    : null}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                                : null}\n                        </div>\n\n\n\n                        {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                        {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                        {/*  /////////////////////////    Side Data Tools      /////////////////////////////// */}\n                        {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n                        {/*  ////////////////////////////////////////////////////////////////////////////////// */}\n\n\n\n                        <div className=\"col-lg-4\">\n                            <div id=\"\">\n                                <div className=\"row\">\n                                    {/* <div style={{ width: '100%', marginBottom: '', }}> */}\n                                    <AppointmentCreatorMentor\n                                        userID={this.state.mentor._id}\n                                        username={this.state.mentor.firstName + this.state.mentor.lastName}\n                                        rerender={this.gatherMentorAppts}\n                                        userData={this.state.mentor}\n                                        proteges={this.state.mentor.proteges}\n                                        protegeData={this.state.protegeData}\n                                    />\n                                    {/* </div> */}\n\n                                    <br />\n                                    <br />\n                                    {/* </div> */}\n                                </div>\n                                <div className=\"row\">\n                                    <div style={{ width: '100%', marginBottom: '10px' }}>\n                                        {/* <div className=\"card col-12\" style={{ marginBottom: '10px', textAlign: 'left', padding: 10, height: '', overflow: 'auto', backgroundColor: 'rgba(36,138,255,0.8)' }}> */}\n\n                                        <div className=\"card bg-light\">\n                                            <div className=\"card-header\">\n                                                <h4 style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '0px' }}>View/Edit Appointments\n                                            <span>< button className=\"btn btn-sm btn-outline-dark\" onClick={this.showApptViewer}>Show</button></span>\n                                                </h4>\n                                            </div>\n\n\n\n\n                                            {this.state.showApptViewer ?\n                                                <div className=\"card-body bg-dark\" style={{ padding: '0px 5px 0px 5px' }}>\n                                                    {\n                                                        this.state.mentorViewAppts ?\n                                                            <div style={{ height: '400px', overflow: 'auto' }}>\n                                                                {\n                                                                    this.state.mentorViewAppts.map(appt => (\n                                                                        <AppointmentItem\n                                                                            key={appt._id}\n                                                                            id={appt._id}\n                                                                            apptname={appt.apptname}\n                                                                            mentor={appt.mentor}\n                                                                            type={appt.type}\n                                                                            held={appt.held}\n                                                                            sold={appt.sold}\n                                                                            dialer={appt.protege}\n                                                                            date={appt.date}\n                                                                            source={appt.source}\n                                                                            // date={appt.date}\n                                                                            notes={appt.notes}\n                                                                            username={this.state.mentor.firstName + this.state.mentor.lastName}\n                                                                            rerender={this.gatherMentorAppts}\n                                                                            user={this.state.mentor}\n                                                                            targetMarket={appt.targetMarket}\n                                                                            mentors={this.state.mentor.proteges}\n                                                                            proteges={this.state.mentor.proteges}\n\n                                                                        />\n                                                                    ))}\n\n                                                            </div>\n                                                            : null}\n                                                </div>\n                                                : null}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-12\" style={{ zIndex: 0 }} style={{ padding: '20px', height: '300px', overflow: 'auto', marginTop: '20px', marginBottom: '20px', marginLeft: '20px' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Quickview Calendar</h4>\n                                        <MainCalendar\n                                            appointments={this.state.appointments}\n                                        />\n                                    </div> */}\n                                <div className=\"row\">\n                                    {/* <div className=\"col-12\" style={{ zIndex: 0, padding: '', width: '100%' }}> */}\n                                    {/* <div className=\"col-12\" style={{zIndex: 0, padding: '', width: '100%'}}> */}\n                                    <div className=\"card bg-light\" style={{ marginBottom: '10px', width: '100%', zIndex: 0 }}>\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center', padding: '10% 10% 0 10%', color: 'black', margin: '0px' }}>\n\n                                                Your Notes:\n                                                    <br />\n                                                <span className=\"btn btn-sm btn-outline-dark\" onClick={this.showNoteViewer}>Show</span>\n                                            </h4>\n                                        </div>\n\n                                        {this.state.showNoteViewer ?\n                                            <div className=\"card-body bg-dark\" style={{ padding: '0px 5px 0px 5px' }}>\n                                                <NoteViewerMentor\n                                                    fontSize={'20px'}\n                                                    notes={this.state.notes}\n                                                    rerender={this.getMentorNoteData}\n                                                    height={'400px'}\n                                                />\n                                            </div>\n\n                                            : null}\n\n\n\n                                        {/* <div style={{ height: '20px', color: 'black', backgroundColor: 'rgba(0,0,0,0.50)' }}>\n                                            </div> */}\n                                    </div>\n                                    {/* </div> */}\n                                </div>\n                                <div className=\"row\">\n                                    {/* <div className=\"row\"></div> */}\n                                    <div className=\"\" style={{ zIndex: 0, marginBottom: '10px', textAlign: 'center', padding: 0, height: '', overflow: 'auto', width: '100%' }}>\n                                        <NoteCreatorMentor\n                                            userData={this.state.mentor}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                </div>\n            </div >\n\n\n        )\n    }\n}\n\nexport default MentorDash","import React, { Component } from 'react';\nimport fire from \"../../config/Fire\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\n\nclass CreateProtegeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            designation: '',\n            mentor: '',\n            proteges: [],\n            firstName: \"\",\n            lastName: \"\",\n            manager: \"\"\n        }\n    }\n\n    login = e => {\n        e.preventDefault();\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n            cogoToast.success(\"Successful login!\");\n            // document.location.href = '/home'\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    signup = e => {\n        e.preventDefault();\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(data => {\n                console.log(data.user.email);\n                console.log(data.user.uid)\n                API.createUser({\n                    email: data.user.email,\n                    uid: data.user.uid,\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName,\n                    mentor: this.state.mentor,\n                    manager: this.state.manager\n                })\n            }).catch(err => console.log(err))\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleArrayChange = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.setState({\n            proteges: [event.target.value]\n        })\n    }\n\n    handleArrayAddition = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.setState({\n            proteges: [...this.state.proteges, event.target.value]\n        })\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                {/* <div id=\"login-welcome\">\n                    Create a User Below.\n      </div> */}\n                <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30p' }}>\n                    <h5 style={{textAlign: 'center'}}>Create Protege Form</h5>\n                    <form>\n                        <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}>\n                            <label>First Name</label>\n                            <input value={this.state.firstName} onChange={this.handleInputChange} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" />\n                            <br />\n                            <label>Last Name</label>\n                            <input value={this.state.lastName} onChange={this.handleInputChange} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" />\n                            <br />\n                            <label>E-mail</label>\n                            <input value={this.state.email} onChange={this.handleInputChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                            <br />\n                            <label>Password</label>\n                            <input value={this.state.password} onChange={this.handleInputChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n                            {/* <button type=\"submit\" onClick={this.login} className=\"btn\">Login</button> */}\n                            <br />\n                            {/* <label>Mentor</label>\n                            <input value={this.state.mentor} onChange={this.handleInputChange} type=\"text\" name=\"mentor\" className=\"form-control\" placeholder=\"Mentor\" />\n                            <br /> */}\n\n                            <label>Assign a Mentor</label>\n                            {/* <input value={this.state.protege} onChange={this.handleInputChange} type=\"text\" name=\"proteges\" className=\"form-control\" placeholder=\"Protege\" /> */}\n                            {this.props.mentors ? <select id=\"protegeDropMenu\" value={this.state.mentor} onChange={this.handleInputChange} name=\"mentor\">\n                                {this.props.mentors.map(mentor => (\n                                    <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                ))}\n                            </select> : null}\n                            <br />\n                            <label>Manager</label>\n                            <input value={this.state.manager} onChange={this.handleInputChange} type=\"text\" name=\"manager\" className=\"form-control\" placeholder=\"Manager\" />\n\n                            <button onClick={this.signup} className=\"btn btn-info\">Create User</button>\n                            {/* <button onClick={this.logOut} style={{ marginTop: '5px', marginLeft: '25px' }} className=\"btn btn-danger\">Logout</button> */}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default CreateProtegeForm;","import React, { Component } from 'react';\nimport fire from \"../../config/Fire\";\nimport API from \"../../utils/API\";\nimport cogoToast from \"cogo-toast\";\n\nclass CreateMentorForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            designation: '',\n            mentor: '',\n            proteges: [],\n            firstName: \"\",\n            lastName: \"\",\n            manager: \"\"\n        }\n    }\n\n    login = e => {\n        e.preventDefault();\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n            cogoToast.success(\"Successful login!\");\n            // document.location.href = '/home'\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    signup = e => {\n        e.preventDefault();\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(data => {\n                console.log(data.user.email);\n                console.log(data.user.uid)\n                API.createMentor({\n                    email: data.user.email,\n                    uid: data.user.uid,\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName,\n                    proteges: this.state.proteges,\n                    manager: this.state.manager\n                })\n            }).catch(err => console.log(err))\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleArrayChange = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.setState({\n            proteges: [event.target.value]\n        })\n    }\n\n    handleArrayAddition = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.setState({\n            proteges: [...this.state.proteges, event.target.value]\n        })\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30p' }}>\n                    <form>\n                        <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', padding: '20px', borderRadius: '30px' }}>\n                            <h5 style={{ textAlign: 'center' }}>Create Mentor Form</h5>\n                            <br />\n                            <label>First Name</label>\n                            <input value={this.state.firstName} onChange={this.handleInputChange} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" />\n                            <br />\n                            <label>Last Name</label>\n                            <input value={this.state.lastName} onChange={this.handleInputChange} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" />\n\n                            <br />\n                            <label>Email</label>\n                            <input value={this.state.email} onChange={this.handleInputChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail2\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                            <br />\n                            <label>Password</label>\n                            <input value={this.state.password} onChange={this.handleInputChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword2\" placeholder=\"Password\" />\n                            {/* <button type=\"submit\" onClick={this.login} className=\"btn\">Login</button> */}\n                            <br />\n                            <label>Assign a Protege</label>\n                            {/* <input value={this.state.protege} onChange={this.handleInputChange} type=\"text\" name=\"proteges\" className=\"form-control\" placeholder=\"Protege\" /> */}\n                            {this.props.proteges ? <select id=\"protegeDropMenu\" value={this.state.protege} onChange={this.handleArrayChange} name=\"protege\">\n                                {this.props.proteges.map(protege => (\n                                    <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                ))}\n                            </select> : null}\n                            <br />\n                            {/* <label>Manager</label>\n                            <input value={this.state.manager} onChange={this.handleInputChange} type=\"text\" name=\"manager\" className=\"form-control\" placeholder=\"Manager\" /> */}\n\n                            <button onClick={this.signup} className=\"btn btn-info\">Create Mentor</button>\n                            {/* <button onClick={this.logOut} style={{ marginTop: '5px', marginLeft: '25px' }} className=\"btn btn-danger\">Logout</button> */}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default CreateMentorForm;","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerDialChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                    <div className=\"\">\n                        <div className=\"\" style={{ textAlign: 'center' }}>\n                            <h3><u>Protege: {this.props.activeProtegeData.firstName} {this.props.activeProtegeData.lastName} </u></h3>\n                            <hr />\n                            <h4>Total Dials: {\n                                this.props.CPDials + this.props.BPDials +\n                                this.props.CCDials + this.props.BCDials +\n                                this.props.CNDials + this.props.BNDials +\n                                this.props.CSDials + this.props.BSDials +\n                                this.props.CRDials + this.props.BRDials +\n                                this.props.CTDials + this.props.BTDials\n                            }</h4>\n                        </div>\n                    </div>\n\n\n                    <div className=\"row\">\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                   <Bar data={{\n                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                datasets: [{\n                                    label: \"Dials\",\n                                    backgroundColor: 'rgb(255, 99, 132)',\n                                    borderColor: 'rgb(255, 99, 132)',\n                                    data: [\n                                        this.props.CPDials + this.props.BPDials,\n                                        this.props.CCDials + this.props.BCDials,\n                                        this.props.CNDials + this.props.BNDials,\n                                        this.props.CSDials + this.props.BSDials,\n                                        this.props.CRDials + this.props.BRDials,\n                                        this.props.CTDials + this.props.BTDials],\n                                }]\n                            }}\n                            // options={{\n                            //     legend: {\n                            //         display: false\n                            //     }}}\n                            />\n                        </div>\n                        <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                   <Pie data={{\n                                labels: [\n                                    \"Cashflow Prospect\",\n                                    \"Business Prospect\",\n                                    \"Cashflow Client\",\n                                    \"Business Client\",\n                                    \"Cashflow Natural Market\",\n                                    \"Business Natural Market\",\n                                    \"Cashflow Suspect\",\n                                    \"Business Suspect\",\n                                    \"Cashflow Referral\",\n                                    \"Business Referral\",\n                                    \"Cashflow Target Market\",\n                                    \"Business Target Market\"],\n                                datasets: [{\n                                    data: [\n                                        this.props.CPDials,\n                                        this.props.BPDials,\n                                        this.props.CCDials,\n                                        this.props.BCDials,\n                                        this.props.CNDials,\n                                        this.props.BNDials,\n                                        this.props.CSDials,\n                                        this.props.BSDials,\n                                        this.props.CRDials,\n                                        this.props.BRDials,\n                                        this.props.CTDials,\n                                        this.props.BTDials\n                                    ],\n                                    backgroundColor: [\n                                        \"#3ac178\",\n                                        \"#443959\",\n                                        \"#f99b17\",\n                                        \"#a2e505\",\n                                        \"#c9917f\",\n                                        \"#8d044b\",\n                                        \"#d2d93b\",\n                                        \"#dd4417\",\n                                        \"#5191d9\",\n                                        \"#483d28\",\n                                        \"#51aef7\",\n                                        \"#25517b\"\n                                    ]\n                                }]\n                            }} options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerDialChart","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerContactChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ color: '' }}>\n                    <div className=\"row\">\n                    <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                     <hr />\n                            <h4 style={{ color: '' }}>Total Contacts: {\n                                this.props.CPContacts + this.props.BPContacts +\n                                this.props.CCContacts + this.props.BCContacts +\n                                this.props.CNContacts + this.props.BNContacts +\n                                this.props.CSContacts + this.props.BSContacts +\n                                this.props.CRContacts + this.props.BRContacts +\n                                this.props.CTContacts + this.props.BTContacts\n                            }</h4>\n                        </div>\n                    </div>\n\n\n                    <div className=\"row\">\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                     <Bar data={{\n                                labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                                datasets: [{\n                                    label: \"Dials\",\n                                    backgroundColor: 'rgb(255, 99, 132)',\n                                    borderColor: 'rgb(255, 99, 132)',\n                                    data: [\n                                        this.props.CPContacts + this.props.BPContacts,\n                                        this.props.CCContacts + this.props.BCContacts,\n                                        this.props.CNContacts + this.props.BNContacts,\n                                        this.props.CSContacts + this.props.BSContacts,\n                                        this.props.CRContacts + this.props.BRContacts,\n                                        this.props.CTContacts + this.props.BTContacts],\n                                }]\n                            }}\n                            // options={{\n                            //     legend: {\n                            //         display: false\n                            //     }}}\n                            />\n                        </div>\n                        <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Pie data={{\n                                labels: [\n                                    \"Cashflow Prospect\",\n                                    \"Business Prospect\",\n                                    \"Cashflow Client\",\n                                    \"Business Client\",\n                                    \"Cashflow Natural Market\",\n                                    \"Business Natural Market\",\n                                    \"Cashflow Suspect\",\n                                    \"Business Suspect\",\n                                    \"Cashflow Referral\",\n                                    \"Business Referral\",\n                                    \"Cashflow Target Market\",\n                                    \"Business Target Market\"],\n                                datasets: [{\n                                    data: [\n                                        this.props.CPContacts,\n                                        this.props.BPContacts,\n                                        this.props.CCContacts,\n                                        this.props.BCContacts,\n                                        this.props.CNContacts,\n                                        this.props.BNContacts,\n                                        this.props.CSContacts,\n                                        this.props.BSContacts,\n                                        this.props.CRContacts,\n                                        this.props.BRContacts,\n                                        this.props.CTContacts,\n                                        this.props.BTContacts\n                                    ],\n                                    backgroundColor: [\n                                        \"#3ac178\",\n                                        \"#443959\",\n                                        \"#f99b17\",\n                                        \"#a2e505\",\n                                        \"#c9917f\",\n                                        \"#8d044b\",\n                                        \"#d2d93b\",\n                                        \"#dd4417\",\n                                        \"#5191d9\",\n                                        \"#483d28\",\n                                        \"#51aef7\",\n                                        \"#25517b\"\n                                    ]\n                                }]\n                            }} options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerContactChart","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerAppointmentChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n\n            <div>\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ textAlign: 'center', padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black'}}>\n                                    <hr />\n                        <h4 style={{ color: 'black', textAlign: 'center' }}>Total Appointments: {\n                            this.props.CPAppts + this.props.BPAppts +\n                            this.props.CCAppts + this.props.BCAppts +\n                            this.props.CNAppts + this.props.BNAppts +\n                            this.props.CSAppts + this.props.BSAppts +\n                            this.props.CRAppts + this.props.BRAppts +\n                            this.props.CTAppts + this.props.BTAppts\n                        } </h4>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Appointments\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.CPAppts + this.props.BPAppts,\n                                    this.props.CCAppts + this.props.BCAppts,\n                                    this.props.CNAppts + this.props.BNAppts,\n                                    this.props.CSAppts + this.props.BSAppts,\n                                    this.props.CRAppts + this.props.BRAppts,\n                                    this.props.CTAppts + this.props.BTAppts],\n                            }]\n                        }} />\n                    </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Pie data={{\n                            labels: [\n                                \"Cashflow Prospect\",\n                                \"Business Prospect\",\n                                \"Cashflow Client\",\n                                \"Business Client\",\n                                \"Cashflow Natural Market\",\n                                \"Business Natural Market\",\n                                \"Cashflow Suspect\",\n                                \"Business Suspect\",\n                                \"Cashflow Referral\",\n                                \"Business Referral\",\n                                \"Cashflow Target Market\",\n                                \"Business Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.props.CPAppts,\n                                    this.props.BPAppts,\n                                    this.props.CCAppts,\n                                    this.props.BCAppts,\n                                    this.props.CNAppts,\n                                    this.props.BNAppts,\n                                    this.props.CSAppts,\n                                    this.props.BSAppts,\n                                    this.props.CRAppts,\n                                    this.props.BRAppts,\n                                    this.props.CTAppts,\n                                    this.props.BTAppts\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\",\n                                    \"#d2d93b\",\n                                    \"#dd4417\",\n                                    \"#5191d9\",\n                                    \"#483d28\",\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerAppointmentChart\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerCFDialChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                        <hr />\n                        <h4>Cashflow Dials Data:</h4>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n\n\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                        <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Dials\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.CPDials,\n                                    this.props.CCDials,\n                                    this.props.CNDials,\n                                    this.props.CSDials,\n                                    this.props.CRDials,\n                                    this.props.CTDials\n                                ],\n                            }]\n                        }} />\n                    </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                        <Pie data={{\n                            labels: [\n                                \"Cashflow Prospect\",\n                                \"Cashflow Client\",\n                                \"Cashflow Natural Market\",\n                                \"Cashflow Suspect\",\n                                \"Cashflow Referral\",\n                                \"Cashflow Target Market\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CPDials,\n                                    this.props.CCDials,\n                                    this.props.CNDials,\n                                    this.props.CSDials,\n                                    this.props.CRDials,\n                                    this.props.CTDials\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }} /> </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerCFDialChart","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerCFContactChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\" style={{ textAlign: 'center', color: 'whitesmoke' }}>\n                <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                     <h4>Contact Data:</h4>\n                    </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                     <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Contacts\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.CPContacts,\n                                    this.props.CCContacts,\n                                    this.props.CNContacts,\n                                    this.props.CSContacts,\n                                    this.props.CRContacts,\n                                    this.props.CTContacts\n                                ],\n                            }]\n                        }} />\n                    </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Pie data={{\n                            labels: [\n                                \"Cashflow Prospect\",\n                                \"Cashflow Client\",\n                                \"Cashflow Natural Market\",\n                                \"Cashflow Suspect\",\n                                \"Cashflow Referral\",\n                                \"Cashflow Target Market\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CPContacts,\n                                    this.props.CCContacts,\n                                    this.props.CNContacts,\n                                    this.props.CSContacts,\n                                    this.props.CRContacts,\n                                    this.props.CTContacts\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerCFContactChart","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerCFAppointmentChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n\n            <div>\n                <div className=\"row\" style={{ textAlign: '', color: '' }}>\n                <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                   <h4>Appointment Data:</h4>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                   <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Appointments\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.CPAppts,\n                                    this.props.CCAppts,\n                                    this.props.CNAppts,\n                                    this.props.CSAppts,\n                                    this.props.CRAppts,\n                                    this.props.CTAppts\n                                ],\n                            }]\n                        }} />\n                    </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Pie data={{\n                            labels: [\n                                \"Cashflow Prospect\",\n                                \"Cashflow Client\",\n                                \"Cashflow Natural Market\",\n                                \"Cashflow Suspect\",\n                                \"Cashflow Referral\",\n                                \"Cashflow Target Market\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CPAppts,\n                                    this.props.CCAppts,\n                                    this.props.CNAppts,\n                                    this.props.CSAppts,\n                                    this.props.CRAppts,\n                                    this.props.CTAppts\n                                ],\n                                backgroundColor: [\n                                    \"#3ac178\",\n                                    \"#443959\",\n                                    \"#f99b17\",\n                                    \"#a2e505\",\n                                    \"#c9917f\",\n                                    \"#8d044b\"\n                                ]\n                            }]\n                        }} options={{\n                            legend: {\n                                position: 'left',\n                                labels: {\n                                    boxWidth: 10\n                                }\n                            }\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerCFAppointmentChart\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerBODialChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                   <div className=\"col\">\n                        <h4>Businessowner Dial Data:</h4>\n                    </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                     <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Dials\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.BPDials,\n                                    this.props.BCDials,\n                                    this.props.BNDials,\n                                    this.props.BSDials,\n                                    this.props.BRDials,\n                                    this.props.BTDials],\n                            }]\n                        }} />\n                    </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Pie data={{\n                            labels: [\n                                \"Business Prospect\",\n                                \"Business Client\",\n                                \"Business Natural Market\",\n                                \"Business Suspect\",\n                                \"Business Referral\",\n                                \"Business Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.props.BPDials,\n                                    this.props.BCDials,\n                                    this.props.BNDials,\n                                    this.props.BSDials,\n                                    this.props.BRDials,\n                                    this.props.BTDials\n                                ],\n                                backgroundColor: [\n                                    \"#d2d93b\",\n                                    \"#dd4417\",\n                                    \"#5191d9\",\n                                    \"#483d28\",\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }} options={{\n                            legend: {\n                                position: 'left',\n                                labels: {\n                                    boxWidth: 10\n                                }\n                            }\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerBODialChart","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerBOContactChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <h4>Businessowner Contact Data:</h4>\n                    </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                   <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Contacts\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.BPContacts,\n                                    this.props.BCContacts,\n                                    this.props.BNContacts,\n                                    this.props.BSContacts,\n                                    this.props.BRContacts,\n                                    this.props.BTContacts],\n                            }]\n                        }}\n                        />\n                    </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                    <Pie data={{\n                            labels: [\n                                \"Business Prospect\",\n                                \"Business Client\",\n                                \"Business Natural Market\",\n                                \"Business Suspect\",\n                                \"Business Referral\",\n                                \"Business Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.props.BPContacts,\n                                    this.props.BCContacts,\n                                    this.props.BNContacts,\n                                    this.props.BSContacts,\n                                    this.props.BRContacts,\n                                    this.props.BTContacts\n                                ],\n                                backgroundColor: [\n                                    \"#d2d93b\",\n                                    \"#dd4417\",\n                                    \"#5191d9\",\n                                    \"#483d28\",\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerBOContactChart","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Bar, Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerBOAppointmentChart extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                        <h3 style={{ color: 'whitesmoke', textAlign: 'center' }}><u>Businessowner Appointments Data</u></h3>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                        <Bar data={{\n                            labels: [\"Prospects\", \"Delegated Clients\", \"Natural Market\", \"Suspects\", \"Referrals\", \"Target Market\"],\n                            datasets: [{\n                                label: \"Appointments\",\n                                backgroundColor: 'rgb(255, 99, 132)',\n                                borderColor: 'rgb(255, 99, 132)',\n                                data: [\n                                    this.props.BPAppts,\n                                    this.props.BCAppts,\n                                    this.props.BNAppts,\n                                    this.props.BSAppts,\n                                    this.props.BRAppts,\n                                    this.props.BTAppts],\n                            }]\n                        }} /> </div>\n                    <div className=\"col-12 card\" style={{ padding: '10px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                        <Pie data={{\n                            labels: [\n                                \"Business Prospect\",\n                                \"Business Client\",\n                                \"Business Natural Market\",\n                                \"Business Suspect\",\n                                \"Business Referral\",\n                                \"Business Target Market\"],\n                            datasets: [{\n                                data: [\n                                    this.props.BPAppts,\n                                    this.props.BCAppts,\n                                    this.props.BNAppts,\n                                    this.props.BSAppts,\n                                    this.props.BRAppts,\n                                    this.props.BTAppts\n                                ],\n                                backgroundColor: [\n                                    \"#d2d93b\",\n                                    \"#dd4417\",\n                                    \"#5191d9\",\n                                    \"#483d28\",\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    position: 'left',\n                                    labels: {\n                                        boxWidth: 10\n                                    }\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerBOAppointmentChart\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerProspectPerformance extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center', color: '' }}>\n\n                <h3>Prospect Calling Performance:</h3>\n                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Contact Ratio</h6>\n                        <h6>Total Prospect Dials: {this.props.CPDials + this.props.BPDials}</h6>\n                        <h6>Contact Ratio: {Math.round((this.props.CPContacts + this.props.BPContacts) / (this.props.CPDials + this.props.BPDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Prospect Dials without contacts\",\n                                \"Prospect Contacts\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CPDials + this.props.BPDials - this.props.CPContacts - this.props.BPContacts,\n                                    this.props.CPContacts + this.props.BPContacts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Contacts to Appointment Ratio</h6>\n                        <h6>Total Prospect Contacts: {this.props.CPContacts + this.props.BPContacts}</h6>\n                        <h6>Appointment per Contact Ratio: {Math.round((this.props.CPAppts + this.props.BPAppts) / (this.props.CPContacts + this.props.BPContacts) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Prospect Contacts without appointments\",\n                                \"Prospect Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CPContacts + this.props.BPContacts - this.props.CPAppts - this.props.BPAppts,\n                                    this.props.CPAppts + this.props.BPAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Appointment Ratio</h6>\n                        <h6>Total Prospect Dials: {this.props.CPDials + this.props.BPDials}</h6>\n                        <h6>Appointment per Dial Ratio: {Math.round((this.props.CPAppts + this.props.BPAppts) / (this.props.CPDials + this.props.BPDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Prospect Dials without appointments\",\n                                \"Prospect Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CPDials + this.props.BPDials - this.props.CPAppts - this.props.BPAppts,\n                                    this.props.CPAppts + this.props.BPAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default DataViewerProspectPerformance\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerClientPerformance extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center', color: '' }}>\n\n                <h3>Client Calling Performance:</h3>\n                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Contact Ratio</h6>\n                        <h6>Total Client Dials: {this.props.CCDials + this.props.BCDials}</h6>\n                        <h6>Contact Ratio: {Math.round((this.props.CCContacts + this.props.BCContacts) / (this.props.CCDials + this.props.BCDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Client Dials without contacts\",\n                                \"Client Contacts\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CCDials + this.props.BCDials - this.props.CCContacts - this.props.BCContacts,\n                                    this.props.CCContacts + this.props.BCContacts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Contacts to Appointment Ratio</h6>\n                        <h6>Total Client Contacts: {this.props.CCContacts + this.props.BCContacts}</h6>\n                        <h6>Appointment per Contact Ratio: {Math.round((this.props.CCAppts + this.props.BCAppts) / (this.props.CCContacts + this.props.BCContacts) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Client Contacts without appointment\",\n                                \"Client Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CCContacts + this.props.BCContacts - this.props.CCAppts - this.props.BCAppts,\n                                    this.props.CCAppts + this.props.BCAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Appointment Ratio</h6>\n                        <h6>Total Client Dials: {this.props.CCDials + this.props.BCDials}</h6>\n                        <h6>Appointment per Dial Ratio: {Math.round((this.props.CCAppts + this.props.BCAppts) / (this.props.CCDials + this.props.BCDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Client Dials without appointment\",\n                                \"Client Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CCDials + this.props.BCDials - this.props.CCAppts - this.props.BCAppts,\n                                    this.props.CCAppts + this.props.BCAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default DataViewerClientPerformance\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerNaturalPerformance extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center', color: '' }}>\n\n                <h3>Natural Market Calling Performance:</h3>\n                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Contact Ratio</h6>\n                        <h6>Total Natural Market Dials: {this.props.CNDials + this.props.BNDials}</h6>\n                        <h6>Contact Ratio: {Math.round((this.props.CNContacts + this.props.BNContacts) / (this.props.CNDials + this.props.BNDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Natural Market Dials without contact\",\n                                \"Natural Market Contacts\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CNDials + this.props.BNDials - this.props.CNContacts - this.props.BNContacts,\n                                    this.props.CNContacts + this.props.BNContacts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Contacts to Appointment Ratio</h6>\n                        <h6>Total Natural Market Contacts: {this.props.CNContacts + this.props.BNContacts}</h6>\n                        <h6>Appointment per Contact Ratio: {Math.round((this.props.CNAppts + this.props.BNAppts) / (this.props.CNContacts + this.props.BNContacts) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Natural Market Contacts without appointment\",\n                                \"Natural Market Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CNContacts + this.props.BNContacts - this.props.CNAppts - this.props.BNAppts,\n                                    this.props.CNAppts + this.props.BNAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Appointment Ratio</h6>\n                        <h6>Total Natural Market Dials: {this.props.CNDials + this.props.BNDials}</h6>\n                        <h6>Appointment per Dial Ratio: {Math.round((this.props.CNAppts + this.props.BNAppts) / (this.props.CNDials + this.props.BNDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Natural Market Dials without appointment\",\n                                \"Natuarl Market Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CNDials + this.props.BNDials - this.props.CNAppts - this.props.BNAppts,\n                                    this.props.CNAppts + this.props.BNAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default DataViewerNaturalPerformance\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerSuspectPerformance extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center', color: '' }}>\n\n                <h3>Suspect Calling Performance:</h3>\n                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Contact Ratio</h6>\n                        <h6>Total Suspect Dials: {this.props.CSDials + this.props.BSDials}</h6>\n                        <h6>Contact Ratio: {Math.round((this.props.CSContacts + this.props.BSContacts) / (this.props.CSDials + this.props.BSDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Suspect Dials without contact\",\n                                \"Suspect Contacts\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CSDials + this.props.BSDials - this.props.CSContacts - this.props.BSContacts,\n                                    this.props.CSContacts + this.props.BSContacts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Contacts to Appointment Ratio</h6>\n                        <h6>Total Suspect Contacts: {this.props.CSContacts + this.props.BSContacts}</h6>\n                        <h6>Appointment per Contact Ratio: {Math.round((this.props.CSAppts + this.props.BSAppts) / (this.props.CSContacts + this.props.BSContacts) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Suspect Contacts without appointment\",\n                                \"Suspect Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CSContacts + this.props.BSContacts - this.props.CSAppts - this.props.BSAppts,\n                                    this.props.CSAppts + this.props.BSAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Appointment Ratio</h6>\n                        <h6>Total Suspect Dials: {this.props.CSDials + this.props.BSDials}</h6>\n                        <h6>Appointment per Dial Ratio: {Math.round((this.props.CSAppts + this.props.BSAppts) / (this.props.CSDials + this.props.BSDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Suspect Dials without appointment\",\n                                \"Suspect Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CSDials + this.props.BSDials - this.props.CSAppts - this.props.BSAppts,\n                                    this.props.CSAppts + this.props.BSAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default DataViewerSuspectPerformance\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerReferralPerformance extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center', color: '' }}>\n\n                <h3>Referral Calling Performance:</h3>\n                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Contact Ratio</h6>\n                        <h6>Total Referral Dials: {this.props.CRDials + this.props.BRDials}</h6>\n                        <h6>Contact Ratio: {Math.round((this.props.CRContacts + this.props.BRContacts) / (this.props.CRDials + this.props.BRDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Referral Dials without contact\",\n                                \"Referral Contacts\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CRDials + this.props.BRDials - this.props.CRContacts - this.props.BRContacts,\n                                    this.props.CRContacts + this.props.BRContacts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Contacts to Appointment Ratio</h6>\n                        <h6>Total Referral Contacts: {this.props.CRContacts + this.props.BRContacts}</h6>\n                        <h6>Appointment per Contact Ratio: {Math.round((this.props.CRAppts + this.props.BRAppts) / (this.props.CRContacts + this.props.BRContacts) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Referral Contacts without appointment\",\n                                \"Referral Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CRContacts + this.props.BRContacts - this.props.CRAppts - this.props.BRAppts,\n                                    this.props.CRAppts + this.props.BRAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Appointment Ratio</h6>\n                        <h6>Total Referral Dials: {this.props.CRDials + this.props.BRDials}</h6>\n                        <h6>Appointment per Dial Ratio: {Math.round((this.props.CRAppts + this.props.BRAppts) / (this.props.CRDials + this.props.BRDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Referral Dials without appointment\",\n                                \"Referral Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CRDials + this.props.BRDials - this.props.CRAppts - this.props.BRAppts,\n                                    this.props.CRAppts + this.props.BRAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }}\n                        />\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default DataViewerReferralPerformance\n\n\n\n\n\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\n// import cogoToast from \"cogo-toast\";\n// import Modal from \"react-modal\";\nimport { Pie } from 'react-chartjs-2';\n\n\n\nclass DataViewerTargetPerformance extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    ////////////////////////////////////////////////////////////\n    ////////// MODAL FUNCTIONS ////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    openEditModal = () => {\n        this.setState({\n            editModalIsOpen: true\n        })\n    }\n\n    afterOpenEditModal = () => {\n\n    }\n\n    closeEditModal = () => {\n        this.setState({\n            editModalIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center', color: '' }}>\n\n                <h3>Target Market Calling Performance:</h3>\n                <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Contact Ratio</h6>\n                        <h6>Total Target Market Dials: {this.props.CTDials + this.props.BTDials}</h6>\n                        <h6>Contact Ratio: {Math.round((this.props.CTContacts + this.props.BTContacts) / (this.props.CTDials + this.props.BTDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Target Market Dials without contact\",\n                                \"Target Market Contacts\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CTDials + this.props.BTDials - this.props.CTContacts - this.props.BTContacts,\n                                    this.props.CTContacts + this.props.BTContacts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }} />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Contacts to Appointment Ratio</h6>\n                        <h6>Total Target Market Contacts: {this.props.CTContacts + this.props.BTContacts}</h6>\n                        <h6>Appointment per Contact Ratio: {Math.round((this.props.CTAppts + this.props.BTAppts) / (this.props.CTContacts + this.props.BTContacts) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Target Market Contacts without appointment\",\n                                \"Target Market Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CTContacts + this.props.BTContacts - this.props.CTAppts - this.props.BTAppts,\n                                    this.props.CTAppts + this.props.BTAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }} />\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                        <h6>Dials to Appointment Ratio</h6>\n                        <h6>Total Target Market Dials: {this.props.CTDials + this.props.BTDials}</h6>\n                        <h6>Appointment per Dial Ratio: {Math.round((this.props.CTAppts + this.props.BTAppts) / (this.props.CTDials + this.props.BTDials) * 100)}%</h6>\n                        <Pie data={{\n                            labels: [\n                                \"Target Market Dials without scheduling\",\n                                \"Target Market Scheduled Appointments\",\n                            ],\n                            datasets: [{\n                                data: [\n                                    this.props.CTDials + this.props.BTDials - this.props.CTAppts - this.props.BTAppts,\n                                    this.props.CTAppts + this.props.BTAppts\n                                ],\n                                backgroundColor: [\n                                    \"#51aef7\",\n                                    \"#25517b\"\n                                ]\n                            }]\n                        }}\n                            options={{\n                                legend: {\n                                    display: false\n                                }\n                            }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataViewerTargetPerformance\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport \"./style.css\"\nimport API from \"../../utils/API\";\nimport MainCalendar from \"../../components/MainCalendar\"\nimport AppointmentItem from \"../../components/AppointmentItem\"\n// import SalesItem from \"../../components/SalesItem\"\nimport SalesItemMentor from \"../../components/SalesItemMentor\"\nimport NoteCreator from \"../../components/NoteCreator\"\nimport NoteViewer from \"../../components/NoteViewer\"\nimport DataViewerDialChart from \"../DataViewerDialChart\";\nimport DataViewerContactChart from \"../DataViewerContactChart\";\nimport DataViewerAppointmentChart from \"../DataViewerAppointmentChart\";\nimport DataViewerCFDialChart from \"../DataViewerCFDialChart\";\nimport DataViewerCFContactChart from \"../DataViewerCFContactChart\";\nimport DataViewerCFAppointmentChart from '../DataViewerCFAppointmentChart';\nimport DataViewerBODialChart from \"../DataViewerBODialChart\";\nimport DataViewerBOContactChart from \"../DataViewerBOContactChart\";\nimport DataViewerBOAppointmentChart from '../DataViewerBOAppointmentChart';\nimport DataViewerProspectPerformance from '../DataViewerProspectPerformance';\nimport DataViewerClientPerformance from '../DataViewerClientPerformance';\nimport DataViewerNaturalPerformance from '../DataViewerNaturalPerformance';\nimport DataViewerSuspectPerformance from '../DataViewerSuspectPerformance';\nimport DataViewerReferralPerformance from '../DataViewerReferralPerformance';\nimport DataViewerTargetPerformance from '../DataViewerTargetPerformance';\nimport moment from \"moment\";\nimport cogoToast from 'cogo-toast';\n\nclass ManagerDataViewer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeProtegeData: \"\",\n            activeProtegeDataPopulated: false,\n            showProtegeAnalyticsViewer: false,\n            showMentorAnalyticsViewer: false,\n            showGlobalAnalyticsViewer: false,\n            showSourcePerformance: false,\n            viewProtegeCallData: false,\n            viewProtegeSchedule: false,\n            viewProtegeAppointments: false,\n            viewProtegeSales: false,\n            viewProtegeNotes: false,\n            viewProtegeProfile: false,\n            viewProtegeWeeklyReport: false,\n            viewProtegeMonthlyReport: false,\n            viewProtegeBenchmarkReport: false,\n            viewMentorsProtegeStatistics: false,\n            viewMentorSchedule: false,\n            viewMentorAppointments: false,\n            viewMentorSales: false,\n            viewMentorWeeklyReport: false,\n            viewMentorMonthlyReport: false,\n            viewMentorBenchmarkReport: false,\n            showDialChart: false,\n            showContactChart: false,\n            showApptChart: false,\n            showCashflowDials: false,\n            showCashflowContacts: false,\n            showCashflowAppts: false,\n            showBusinessDials: false,\n            showBusinessContacts: false,\n            showBusinessAppts: false,\n            showProspectPerformance: false,\n            showClientPerformance: false,\n            showNaturalPerformance: false,\n            showSuspectPerformance: false,\n            showReferralPerformance: false,\n            showTargetPerformance: false,\n            showSelectedTargetPerformance: false,\n            updatedProtegeFirstName: \"\",\n            updateProtegeLastName: \"\"\n        }\n    }\n\n    componentDidMount = () => {\n        console.log(\"Current Date: \" + moment(new Date()).format())\n        console.log(\"7 Days Prior: \" + moment().subtract(6, 'd').format(\"YYYY-MM-DD\"))\n    }\n\n    updateProtege = () => {\n        console.log(this.state.updatedProtegeFirstName);\n        console.log(this.state.updatedProtegeLastName)\n        console.log(this.state.updatedProtegeAlmaMater)\n        console.log(this.state.updatedProtegeHomeTown)\n        console.log(this.state.updatedProtegeProfilePicture)\n        console.log(this.state.activeProtegeData._id)\n\n\n\n    }\n\n    assignProtegeFields = () => {\n\n        this.setState({\n            updatedProtegeFirstName: this.state.activeProtegeData.firstName,\n            updatedProtegeLastName: this.state.activeProtegeData.lastName,\n            updatedProtegeProfilePicture: this.state.activeProtegeData.imageURL,\n            updatedProtegeAlmaMater: this.state.activeProtegeData.almaMater,\n            updatedProtegeHomeTown: this.state.activeProtegeData.homeTown,\n            updatedProtegeStartQuarter:\n                this.state.activeProtegeData.startQuarter\n        })\n\n    }\n\n    submitProtegeUpdate = () => {\n\n        console.log(\"New First Name: \" + this.state.updatedProtegeFirstName)\n        console.log(\"New Last Name: \" + this.state.updatedProtegeLastName)\n        console.log(\"New Profile Image: \" + this.state.updatedProtegeProfilePicture)\n        console.log(\"New Protege Alma Mater: \" + this.state.updatedProtegeAlmaMater)\n        console.log(\"New Protege Home Town: \" + this.state.updatedProtegeHomeTown)\n\n        // this.updateProtege();\n\n        setTimeout(() => {\n\n            API.updateProtege(this.state.activeProtegeData._id, {\n                almaMater: this.state.updatedProtegeAlmaMater,\n                homeTown: this.state.updatedProtegeHomeTown,\n                imageURL: this.state.updatedProtegeProfilePicture,\n                firstName: this.state.updatedProtegeFirstName,\n                lastName: this.state.updatedProtegeLastName\n            }).then(res => {\n                cogoToast.info(\"Updated Protege!\")\n                console.log(\"Completed Post\")\n            }).catch(err => console.log(err))\n\n        }, 1000)\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    handleSourceChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n        setTimeout(() => { this.changeSourceData() }, 500)\n    }\n\n    handleTargetChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n        setTimeout(() => { this.changeTargetData() }, 500)\n    }\n\n    showProtegeAnalytics = () => {\n        if (this.state.showProtegeAnalyticsViewer === false) {\n            this.setState({\n                showProtegeAnalyticsViewer: true,\n                showMentorAnalyticsViewer: false,\n                showGlobalAnalyticsViewer: false,\n                activeMentorDataPopulated: false\n            })\n        } else {\n            this.setState({\n                showProtegeAnalyticsViewer: false,\n                activeProtegeDataPopulated: false,\n                activeProtegeData: \"\",\n                appointments: \"\",\n                contactData: \"\",\n                dialData: \"\",\n                BCAppts: 0,\n                BCContacts: 0,\n                BCDials: 0,\n                BNAppts: 0,\n                BNContacts: 0,\n                BNDials: 0,\n                BPAppts: 0,\n                BPContacts: 0,\n                BPDials: 0,\n                BRAppts: 0,\n                BRContacts: 0,\n                BRDials: 0,\n                BSAppts: 0,\n                BSContacts: 0,\n                BSDials: 0,\n                BTAppts: 0,\n                BTContacts: 0,\n                BTDials: 0,\n                CCAppts: 0,\n                CCContacts: 0,\n                CCDials: 0,\n                CNAppts: 0,\n                CNContacts: 0,\n                CNDials: 0,\n                CPAppts: 0,\n                CPContacts: 0,\n                CPDials: 0,\n                CRAppts: 0,\n                CRContacts: 0,\n                CRDials: 0,\n                CSAppts: 0,\n                CSContacts: 0,\n                CSDials: 0,\n                CTAppts: 0,\n                CTContacts: 0,\n                CTDials: 0\n            })\n        }\n        console.log(\"Show Protege Analytics using: \" + this.props.allProtegeData)\n    }\n\n    showMentorAnalytics = () => {\n        console.log(\"Show Mentor Analytics using: \" + this.props.allMentorData)\n        if (this.state.showMentorAnalyticsViewer === false) {\n            this.setState({\n                showProtegeAnalyticsViewer: false,\n                showMentorAnalyticsViewer: true,\n                showGlobalAnalyticsViewer: false,\n                activeProtegeDataPopulated: false\n            })\n        } else {\n            this.setState({\n                showMentorAnalyticsViewer: false,\n                activeMentorsProtegeDataPopulated: false,\n                activeMentorsProtegeData: \"\",\n                appointments: \"\",\n                contactData: \"\",\n                dialData: \"\",\n                BCAppts: 0,\n                BCContacts: 0,\n                BCDials: 0,\n                BNAppts: 0,\n                BNContacts: 0,\n                BNDials: 0,\n                BPAppts: 0,\n                BPContacts: 0,\n                BPDials: 0,\n                BRAppts: 0,\n                BRContacts: 0,\n                BRDials: 0,\n                BSAppts: 0,\n                BSContacts: 0,\n                BSDials: 0,\n                BTAppts: 0,\n                BTContacts: 0,\n                BTDials: 0,\n                CCAppts: 0,\n                CCContacts: 0,\n                CCDials: 0,\n                CNAppts: 0,\n                CNContacts: 0,\n                CNDials: 0,\n                CPAppts: 0,\n                CPContacts: 0,\n                CPDials: 0,\n                CRAppts: 0,\n                CRContacts: 0,\n                CRDials: 0,\n                CSAppts: 0,\n                CSContacts: 0,\n                CSDials: 0,\n                CTAppts: 0,\n                CTContacts: 0,\n                CTDials: 0\n            })\n        }\n    }\n\n    showGlobalAnalytics = () => {\n        console.log(\"Show Global Analytics using: \" + this.props.allProtegeData)\n        console.log(\"Show Global Analytics using: \" + this.props.allMentorData)\n        if (this.state.showMentorAnalyticsViewer === false) {\n            this.setState({\n                showProtegeAnalyticsViewer: false,\n                showMentorAnalyticsViewer: false,\n                showGlobalAnalyticsViewer: true\n            })\n        } else {\n            this.setState({\n                showGlobalAnalyticsViewer: true\n            })\n        }\n    }\n\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////Protege Data Gathering //////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n\n    viewProtegeData = () => {\n\n        if (this.state.activeProtegeDataPopulated === true) {\n            this.setState({\n                activeProtegeDataPopulated: false,\n                activeProtegeData: \"\",\n                updatedProtegeFirstName: \"\",\n                updatedProtegeLastName: \"\",\n                updatedProtegeProfilePicture: \"\",\n                updatedProfileHomeTown: \"\",\n                updatedProfileAlmaMater: \"\",\n                appointments: \"\",\n                contactData: \"\",\n                dialData: \"\",\n                BCAppts: 0,\n                BCContacts: 0,\n                BCDials: 0,\n                BNAppts: 0,\n                BNContacts: 0,\n                BNDials: 0,\n                BPAppts: 0,\n                BPContacts: 0,\n                BPDials: 0,\n                BRAppts: 0,\n                BRContacts: 0,\n                BRDials: 0,\n                BSAppts: 0,\n                BSContacts: 0,\n                BSDials: 0,\n                BTAppts: 0,\n                BTContacts: 0,\n                BTDials: 0,\n                CCAppts: 0,\n                CCContacts: 0,\n                CCDials: 0,\n                CNAppts: 0,\n                CNContacts: 0,\n                CNDials: 0,\n                CPAppts: 0,\n                CPContacts: 0,\n                CPDials: 0,\n                CRAppts: 0,\n                CRContacts: 0,\n                CRDials: 0,\n                CSAppts: 0,\n                CSContacts: 0,\n                CSDials: 0,\n                CTAppts: 0,\n                CTContacts: 0,\n                CTDials: 0\n            })\n        } else {\n            console.log(this.state.protegeToView)\n            API.getUserDataById(this.state.protegeToView)\n                .then(res => {\n                    console.log(res.data)\n                    this.setState({\n                        activeProtegeData: res.data[0],\n                        activeProtegeDataPopulated: true,\n                        dialData: res.data[0].dials,\n                        protegeSelected: res.data[0]._id,\n                        appointments: res.data[0].appointments\n                    })\n                },\n                    this.gatherSales(),\n                    this.getContactData(),\n                    this.getProtegeNoteData(),\n                    setTimeout(() => {\n                        this.assignProtegeFields()\n                    }, 500)\n                    ,\n                    setTimeout(() => {\n                        this.parseDials()\n                        this.parseAppointments()\n                    }, 500)\n                )\n\n        }\n    }\n\n    handleScopeChange = (e) => {\n        e.preventDefault()\n        console.log(this.state.scopeSelected)\n        if (this.state.scopeSelected === \"viewAll\") {\n            this.parseDials()\n            this.parseContacts()\n            this.parseAppointments()\n        } else if (this.state.scopeSelected === \"viewWeekly\") {\n            this.getWeeklyDials()\n            this.getWeeklyAppts()\n        } else if (this.state.scopeSelected === \"viewMonthly\") {\n            this.getMonthlyDials()\n            this.getMonthlyAppts()\n        }\n\n    }\n\n\n\n    getWeeklyDials = () => {\n        API.getWeeklyDials(this.state.protegeToView)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    weeklyDials: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n            setTimeout(() => {\n                this.parseWeeklyDials()\n                this.parseWeeklyContacts()\n            }, 1000)\n    }\n\n    getMonthlyDials = () => {\n        API.getMonthlyDials(this.state.protegeToView)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    monthlyDials: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n            \n            setTimeout(() => {\n                this.parseMonthlyDials()\n                this.parseMonthlyContacts()\n            }, 1000)\n    }\n\n    getMonthlyAppts = () => {\n        API.getMonthlyAppts(this.state.protegeToView)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    monthlyAppts: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n            setTimeout(() => {\n                this.parseMonthlyAppts()\n            }, 1000)\n    }\n\n\n    getWeeklyAppts = () => {\n        API.getWeeklyAppts(this.state.protegeToView)\n            .then(res => {\n                this.setState({\n                    weeklyAppts: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n            setTimeout(() => {\n                this.parseWeeklyAppointments()\n            }, 1000)\n    }\n    \n    parseWeeklyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.weeklyDials.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.weeklyDials[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: wCPD,\n            BPDials: wBPD,\n            CCDials: wCCD,\n            BCDials: wBCD,\n            CNDials: wCND,\n            BNDials: wBND,\n            CSDials: wCSD,\n            BSDials: wBSD,\n            CRDials: wCRD,\n            BRDials: wBRD,\n            CTDials: wCTD,\n            BTDials: wBTD\n        })\n    }\n\n    parseMonthlyDials = () => {\n        // console.log(\"Parsing Dials: \" + this.state.dialData)\n        var wCPD = 0;\n        var wBPD = 0;\n        var wCCD = 0;\n        var wBCD = 0;\n        var wCND = 0;\n        var wBND = 0;\n        var wCSD = 0;\n        var wBSD = 0;\n        var wCRD = 0;\n        var wBRD = 0;\n        var wCTD = 0;\n        var wBTD = 0;\n        for (var i = 0; i < this.state.monthlyDials.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.monthlyDials[i].type) {\n                case \"CPD\":\n                    wCPD++\n                    break;\n                case \"BPD\":\n                    wBPD++\n                    break;\n                case \"CCD\":\n                    wCCD++\n                    break;\n                case \"BCD\":\n                    wBCD++\n                    break;\n                case \"CND\":\n                    wCND++\n                    break;\n                case \"BND\":\n                    wBND++\n                    break;\n                case \"CSD\":\n                    wCSD++\n                    break;\n                case \"BSD\":\n                    wBSD++\n                    break;\n                case \"CRD\":\n                    wCRD++\n                    break;\n                case \"BRD\":\n                    wBRD++\n                    break;\n                case \"CTD\":\n                    wCTD++\n                    break;\n                case \"BTD\":\n                    wBTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: wCPD,\n            BPDials: wBPD,\n            CCDials: wCCD,\n            BCDials: wBCD,\n            CNDials: wCND,\n            BNDials: wBND,\n            CSDials: wCSD,\n            BSDials: wBSD,\n            CRDials: wCRD,\n            BRDials: wBRD,\n            CTDials: wCTD,\n            BTDials: wBTD\n        })\n    }\n\n\n\n\n    parseWeeklyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.weeklyDials.length; i++) {\n\n            if (this.state.weeklyDials[i].contact === true) {\n            switch (this.state.weeklyDials[i].type) {\n                case \"CPD\":\n                    wCPC++\n                    break;\n                case \"BPD\":\n                    wBPC++\n                    break;\n                case \"CCD\":\n                    wCCC++\n                    break;\n                case \"BCD\":\n                    wBCC++\n                    break;\n                case \"CND\":\n                    wCNC++\n                    break;\n                case \"BND\":\n                    wBNC++\n                    break;\n                case \"CSD\":\n                    wCSC++\n                    break;\n                case \"BSD\":\n                    wBSC++\n                    break;\n                case \"CRD\":\n                    wCRC++\n                    break;\n                case \"BRD\":\n                    wBRC++\n                    break;\n                case \"CTD\":\n                    wCTC++\n                    break;\n                case \"BTD\":\n                    wBTC++\n                    break;\n                default:\n                    break;\n            }\n        } \n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseMonthlyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        for (var i = 0; i < this.state.monthlyDials.length; i++) {\n\n            if (this.state.monthlyDials[i].contact === true) {\n            switch (this.state.monthlyDials[i].type) {\n                case \"CPD\":\n                    wCPC++\n                    break;\n                case \"BPD\":\n                    wBPC++\n                    break;\n                case \"CCD\":\n                    wCCC++\n                    break;\n                case \"BCD\":\n                    wBCC++\n                    break;\n                case \"CND\":\n                    wCNC++\n                    break;\n                case \"BND\":\n                    wBNC++\n                    break;\n                case \"CSD\":\n                    wCSC++\n                    break;\n                case \"BSD\":\n                    wBSC++\n                    break;\n                case \"CRD\":\n                    wCRC++\n                    break;\n                case \"BRD\":\n                    wBRC++\n                    break;\n                case \"CTD\":\n                    wCTC++\n                    break;\n                case \"BTD\":\n                    wBTC++\n                    break;\n                default:\n                    break;\n            }\n        } \n        }\n        this.setState({\n            CPContacts: wCPC,\n            BPContacts: wBPC,\n            CCContacts: wCCC,\n            BCContacts: wBCC,\n            CNContacts: wCNC,\n            BNContacts: wBNC,\n            CSContacts: wCSC,\n            BSContacts: wBSC,\n            CRContacts: wCRC,\n            BRContacts: wBRC,\n            CTContacts: wCTC,\n            BTContacts: wBTC\n        })\n    }\n\n    parseWeeklyAppointments = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.weeklyAppts.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.weeklyAppts[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n    parseMonthlyAppts = () => {\n        // console.log(\"Parsing appointments: \" + this.state.appointments)\n        var wCPA = 0;\n        var wBPA = 0;\n        var wCCA = 0;\n        var wBCA = 0;\n        var wCNA = 0;\n        var wBNA = 0;\n        var wCSA = 0;\n        var wBSA = 0;\n        var wCRA = 0;\n        var wBRA = 0;\n        var wCTA = 0;\n        var wBTA = 0;\n        for (var i = 0; i < this.state.monthlyAppts.length; i++) {\n            // console.log(this.state.appointments[i])\n            switch (this.state.monthlyAppts[i].type) {\n                case \"CPD\":\n                    wCPA++\n                    break;\n                case \"BPD\":\n                    wBPA++\n                    break;\n                case \"CCD\":\n                    wCCA++\n                    break;\n                case \"BCD\":\n                    wBCA++\n                    break;\n                case \"CND\":\n                    wCNA++\n                    break;\n                case \"BND\":\n                    wBNA++\n                    break;\n                case \"CSD\":\n                    wCSA++\n                    break;\n                case \"BSD\":\n                    wBSA++\n                    break;\n                case \"CRD\":\n                    wCRA++\n                    break;\n                case \"BRD\":\n                    wBRA++\n                    break;\n                case \"CTD\":\n                    wCTA++\n                    break;\n                case \"BTD\":\n                    wBTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: wCPA,\n            BPAppts: wBPA,\n            CCAppts: wCCA,\n            BCAppts: wBCA,\n            CNAppts: wCNA,\n            BNAppts: wBNA,\n            CSAppts: wCSA,\n            BSAppts: wBSA,\n            CRAppts: wCRA,\n            BRAppts: wBRA,\n            CTAppts: wCTA,\n            BTAppts: wBTA\n        })\n    }\n\n\n\n    gatherSales = () => {\n        setTimeout(() => {\n            API.getSales(this.state.protegeToView)\n                .then(res => {\n                    this.setState({\n                        sales: res.data\n                    })\n                })\n        })\n    }\n\n    gatherAppointments = () => {\n        API.getUserDataById(this.state.protegeToView)\n            .then(res => {\n                this.setState({\n                    appointments: res.data[0].appointments\n                })\n            })\n    }\n\n    getProtegeNoteData = () => {\n        // console.log(this.state.userData._id)\n\n        API.getProtegeNotes(this.state.protegeToView)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    notes: res.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    viewMentorsProtegeData = () => {\n        if (this.state.activeMentorsProtegeDataPopulated === true) {\n            this.setState({\n                activeMentorsProtegeDataPopulated: false,\n                activeMentorProtegeData: \"\",\n                appointments: \"\",\n                contactData: \"\",\n                dialData: \"\",\n                BCAppts: 0,\n                BCContacts: 0,\n                BCDials: 0,\n                BNAppts: 0,\n                BNContacts: 0,\n                BNDials: 0,\n                BPAppts: 0,\n                BPContacts: 0,\n                BPDials: 0,\n                BRAppts: 0,\n                BRContacts: 0,\n                BRDials: 0,\n                BSAppts: 0,\n                BSContacts: 0,\n                BSDials: 0,\n                BTAppts: 0,\n                BTContacts: 0,\n                BTDials: 0,\n                CCAppts: 0,\n                CCContacts: 0,\n                CCDials: 0,\n                CNAppts: 0,\n                CNContacts: 0,\n                CNDials: 0,\n                CPAppts: 0,\n                CPContacts: 0,\n                CPDials: 0,\n                CRAppts: 0,\n                CRContacts: 0,\n                CRDials: 0,\n                CSAppts: 0,\n                CSContacts: 0,\n                CSDials: 0,\n                CTAppts: 0,\n                CTContacts: 0,\n                CTDials: 0\n            })\n        } else {\n            console.log(this.state.mentorsProtegeToView)\n            API.getUserDataById(this.state.mentorsProtegeToView)\n                .then(res => {\n                    console.log(res.data)\n                    this.setState({\n                        activeMentorsProtegeData: res.data[0],\n                        activeMentorsProtegeDataPopulated: true,\n                        dialData: res.data[0].dials,\n                        protegeSelected: res.data[0]._id,\n                        appointments: res.data[0].appointments\n                    })\n                },\n\n                    this.getMContactData(),\n                    setTimeout(() => {\n                        this.parseDials()\n                        this.parseAppointments()\n                    }, 500)\n\n                )\n        }\n    }\n\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////Data Parsing ////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n\n    getContactData = () => {\n        setTimeout(() => {\n            console.log(\"Searching contacts using: \" + this.state.activeProtegeData._id)\n            API.getContacts(this.state.activeProtegeData._id)\n                .then(res =>\n                    this.setState({\n                        contactData: res.data\n                    }),\n                    setTimeout(() => { this.parseContacts() }, 500)\n                )\n        }, 1000)\n\n    }\n\n    getMContactData = () => {\n        setTimeout(() => {\n            console.log(\"Searching contacts using: \" + this.state.activeMentorsProtegeData._id)\n            API.getContacts(this.state.activeMentorsProtegeData._id)\n                .then(res =>\n                    this.setState({\n                        contactData: res.data\n                    }),\n                    setTimeout(() => { this.parseContacts() }, 500)\n                )\n        }, 1000)\n\n    }\n\n\n    parseDials = () => {\n        console.log(\"Parsing Dials: \" + this.state.dialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.dialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    break;\n                case \"CND\":\n                    CND++\n                    break;\n                case \"BND\":\n                    BND++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: CPD,\n            BPDials: BPD,\n            CCDials: CCD,\n            BCDials: BCD,\n            CNDials: CND,\n            BNDials: BND,\n            CSDials: CSD,\n            BSDials: BSD,\n            CRDials: CRD,\n            BRDials: BRD,\n            CTDials: CTD,\n            BTDials: BTD\n        })\n    }\n\n    parseContacts = () => {\n        console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        for (var i = 0; i < this.state.contactData.length; i++) {\n            switch (this.state.contactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    break;\n                case \"CND\":\n                    CNC++\n                    break;\n                case \"BND\":\n                    BNC++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    break;\n                case \"CTD\":\n                    CTC++\n                    break;\n                case \"BTD\":\n                    BTC++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPContacts: CPC,\n            BPContacts: BPC,\n            CCContacts: CCC,\n            BCContacts: BCC,\n            CNContacts: CNC,\n            BNContacts: BNC,\n            CSContacts: CSC,\n            BSContacts: BSC,\n            CRContacts: CRC,\n            BRContacts: BRC,\n            CTContacts: CTC,\n            BTContacts: BTC\n        })\n    }\n\n\n    parseAppointments = () => {\n        console.log(\"Parsing appointments: \" + this.state.appointments)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        for (var i = 0; i < this.state.appointments.length; i++) {\n            console.log(this.state.appointments[i])\n            switch (this.state.appointments[i].type) {\n                case \"CPD\":\n                    CPA++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    break;\n                case \"CND\":\n                    CNA++\n                    break;\n                case \"BND\":\n                    BNA++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPAppts: CPA,\n            BPAppts: BPA,\n            CCAppts: CCA,\n            BCAppts: BCA,\n            CNAppts: CNA,\n            BNAppts: BNA,\n            CSAppts: CSA,\n            BSAppts: BSA,\n            CRAppts: CRA,\n            BRAppts: BRA,\n            CTAppts: CTA,\n            BTAppts: BTA\n        })\n    }\n\n\n\n\n\n    viewMentorData = () => {\n        console.log(this.state.mentorToView)\n        if (this.state.activeMentorDataPopulated === false) {\n            API.getMentorById(this.state.mentorToView)\n                .then(res => {\n                    console.log(res.data)\n                    this.setState({\n                        activeMentorData: res.data[0],\n                        activeMentorDataPopulated: true\n                    })\n\n                }, setTimeout(() => { this.getMentorAppointmentData() }, 500),\n                    setTimeout(() => { this.gatherMentorSales() }, 500)\n                )\n\n        } else {\n            this.setState({\n                activeMentorDataPopulated: false,\n                activeMentorData: \"\",\n                appointments: \"\",\n                contactData: \"\",\n                dialData: \"\",\n                BCAppts: 0,\n                BCContacts: 0,\n                BCDials: 0,\n                BNAppts: 0,\n                BNContacts: 0,\n                BNDials: 0,\n                BPAppts: 0,\n                BPContacts: 0,\n                BPDials: 0,\n                BRAppts: 0,\n                BRContacts: 0,\n                BRDials: 0,\n                BSAppts: 0,\n                BSContacts: 0,\n                BSDials: 0,\n                BTAppts: 0,\n                BTContacts: 0,\n                BTDials: 0,\n                CCAppts: 0,\n                CCContacts: 0,\n                CCDials: 0,\n                CNAppts: 0,\n                CNContacts: 0,\n                CNDials: 0,\n                CPAppts: 0,\n                CPContacts: 0,\n                CPDials: 0,\n                CRAppts: 0,\n                CRContacts: 0,\n                CRDials: 0,\n                CSAppts: 0,\n                CSContacts: 0,\n                CSDials: 0,\n                CTAppts: 0,\n                CTContacts: 0,\n                CTDials: 0\n            })\n        }\n    }\n\n    getMentorAppointmentData = () => {\n        API.getMentorAppts(this.state.activeMentorData._id)\n            .then(res => {\n                console.log(res.data)\n                this.setState({\n                    mentorAppts: res.data\n                })\n            })\n    }\n\n    gatherMentorSales = () => {\n        API.getMentorSales(this.state.activeMentorData._id)\n            .then(res => {\n                this.setState({\n                    mentorSales: res.data\n                })\n            })\n\n    }\n\n    viewProtegeCallData = () => {\n        if (this.state.viewProtegeCallData === true) {\n            this.setState({\n                viewProtegeCallData: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: true,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeSchedule = () => {\n        if (this.state.viewProtegeSchedule === true) {\n            this.setState({\n                viewProtegeSchedule: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: true,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeAppointments = () => {\n        if (this.state.viewProtegeAppointments === true) {\n            this.setState({\n                viewProtegeAppointments: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: true,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeSales = () => {\n        if (this.state.viewProtegeSales === true) {\n            this.setState({\n                viewProtegeSales: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: true,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeNotes = () => {\n        if (this.state.viewProtegeNotes === true) {\n            this.setState({\n                viewProtegeNotes: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: true,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n            setTimeout(() => { this.getProtegeNoteData() }, 500)\n        }\n    }\n\n    // getProtegeNoteData = () => {\n    //     // console.log(this.state.userData._id)\n\n    //     API.getProtegeNotes(this.state.activeProtegeData._id)\n    //         .then(res =>\n    //             this.setState({\n    //                 taggedNotes: res.data\n    //             })\n    //         )\n    //         .catch(err => {\n    //             console.log(err)\n    //         })\n    // }\n\n    viewProtegeProfile = () => {\n        if (this.state.viewProtegeProfile === true) {\n            this.setState({\n                viewProtegeProfile: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: true,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeWeeklyReport = () => {\n        if (this.state.viewProtegeWeeklyReport === true) {\n            this.setState({\n                viewProtegeWeeklyReport: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: true,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeMonthlyReport = () => {\n        if (this.state.viewProtegeMonthlyReport === true) {\n            this.setState({\n                viewProtegeMonthlyReport: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: true,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewProtegeBenchmarkReport = () => {\n        if (this.state.viewProtegeBenchmarkReport === true) {\n            this.setState({\n                viewProtegeBenchmarkReport: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: true,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorsProtegeStatistics = () => {\n        if (this.state.viewMentorsProtegeStatistics === true) {\n            this.setState({\n                viewMentorsProtegeStatistics: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: true,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorSchedule = () => {\n        if (this.state.viewMentorSchedule === true) {\n            this.setState({\n                viewMentorSchedule: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: true,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorAppointments = () => {\n        if (this.state.viewMentorAppointments === true) {\n            this.setState({\n                viewMentorAppointments: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: true,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorSales = () => {\n        if (this.state.viewMentorSales === true) {\n            this.setState({\n                viewMentorSales: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: true,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorWeeklyReport = () => {\n        if (this.state.viewMentorWeeklyReport === true) {\n            this.setState({\n                viewMentorWeeklyReport: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: true,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorMonthlyReport = () => {\n        if (this.state.viewMentorMonthlyReport === true) {\n            this.setState({\n                viewMentorMonthlyReport: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: true,\n                viewMentorBenchmarkReport: false\n            })\n        }\n    }\n\n    viewMentorBenchmarkReport = () => {\n        if (this.state.viewMentorBenchmarkReport === true) {\n            this.setState({\n                viewMentorBenchmarkReport: false\n            })\n        } else {\n            this.setState({\n                viewProtegeCallData: false,\n                viewProtegeSchedule: false,\n                viewProtegeAppointments: false,\n                viewProtegeSales: false,\n                viewProtegeNotes: false,\n                viewProtegeProfile: false,\n                viewProtegeWeeklyReport: false,\n                viewProtegeMonthlyReport: false,\n                viewProtegeBenchmarkReport: false,\n                viewMentorsProtegeStatistics: false,\n                viewMentorSchedule: false,\n                viewMentorAppointments: false,\n                viewMentorSales: false,\n                viewMentorWeeklyReport: false,\n                viewMentorMonthlyReport: false,\n                viewMentorBenchmarkReport: true\n            })\n        }\n    }\n\n\n    showDataOption = (e) => {\n        e.preventDefault()\n        switch (this.state.dataOption) {\n            case \"genDials\":\n                this.viewDialChart()\n                break;\n            case \"genContacts\":\n                this.viewContactChart()\n                break;\n            case \"genAppts\":\n                this.viewApptChart()\n                break;\n            case \"cfDials\":\n                this.viewCFDialChart()\n                break;\n            case \"cfContacts\":\n                this.viewCFContactChart()\n                break;\n            case \"cfAppts\":\n                this.viewCFApptChart()\n                break;\n            case \"boDials\":\n                this.viewBODialChart()\n                break;\n            case \"boContacts\":\n                this.viewBOContactChart()\n                break;\n            case \"boAppts\":\n                this.viewBOApptChart()\n                break;\n            default:\n                console.log(\"No option selected\")\n                break;\n        }\n\n    }\n\n    showCategoryOption = (e) => {\n        e.preventDefault()\n\n        switch (this.state.categoryOption) {\n            case \"pData\":\n                this.viewProspectPerformance()\n                break;\n            case \"cData\":\n                this.viewClientPerformance()\n                break;\n            case \"sData\":\n                this.viewSuspectPerformance()\n                break;\n            case \"nData\":\n                this.viewNaturalPerformance()\n                break;\n            case \"rData\":\n                this.viewReferralPerformance()\n                break;\n            case \"tData\":\n                this.viewTargetPerformance()\n                break;\n            default:\n                console.log(\"No proper selection made\")\n                break;\n        }\n    }\n\n\n    viewDialChart = () => {\n        if (this.state.showDialChart === true) {\n            this.setState({\n                showDialChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: true,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewContactChart = () => {\n        if (this.state.showContactChart === true) {\n            this.setState({\n                showContactChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: true,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewApptChart = () => {\n        if (this.state.showApptChart === true) {\n            this.setState({\n                showApptChart: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: true,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFDialChart = () => {\n        if (this.state.showCashflowDials === true) {\n            this.setState({\n                showCashflowDials: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: true,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFContactChart = () => {\n        if (this.state.showCashflowContacts === true) {\n            this.setState({\n                showCashflowContacts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: true,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewCFApptChart = () => {\n        if (this.state.showCashflowAppts === true) {\n            this.setState({\n                showCashflowAppts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: true,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBODialChart = () => {\n        if (this.state.showBusinessDials === true) {\n            this.setState({\n                showBusinessDials: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: true,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBOContactChart = () => {\n        if (this.state.showBusinessContacts === true) {\n            this.setState({\n                showBusinessContacts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: true,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewBOApptChart = () => {\n        if (this.state.showBusinessAppts === true) {\n            this.setState({\n                showBusinessAppts: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: true,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewProspectPerformance = () => {\n        if (this.state.showProspectPerformance === true) {\n            this.setState({\n                showProspectPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: true,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewClientPerformance = () => {\n        if (this.state.showClientPerformance === true) {\n            this.setState({\n                showClientPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: true,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewNaturalPerformance = () => {\n        if (this.state.showNaturalPerformance === true) {\n            this.setState({\n                showNaturalPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: true,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSuspectPerformance = () => {\n        if (this.state.showSuspectPerformance === true) {\n            this.setState({\n                showSuspectPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: true,\n                showReferralPerformance: false,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewReferralPerformance = () => {\n        if (this.state.showReferralPerformance === true) {\n            this.setState({\n                showReferralPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: true,\n                showTargetPerformance: false,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewTargetPerformance = () => {\n        if (this.state.showTargetPerformance === true) {\n            this.setState({\n                showTargetPerformance: false\n            })\n        } else {\n            this.setState({\n                showDialChart: false,\n                showContactChart: false,\n                showApptChart: false,\n                showCashflowDials: false,\n                showCashflowContacts: false,\n                showCashflowAppts: false,\n                showBusinessDials: false,\n                showBusinessContacts: false,\n                showBusinessAppts: false,\n                showProspectPerformance: false,\n                showClientPerformance: false,\n                showNaturalPerformance: false,\n                showSuspectPerformance: false,\n                showReferralPerformance: false,\n                showTargetPerformance: true,\n                showSourcePerformance: false,\n                showSelectedTargetPerformance: false\n            })\n        }\n    }\n\n    viewSourcePerformance = () => {\n        // if (this.state.showSourcePerformance === true) {\n        //     this.setState({\n        //         SCPDials: 0,\n        //         SBPDials: 0,\n        //         SCCDials: 0,\n        //         SBCDials: 0,\n        //         SCNDials: 0,\n        //         SBNDials: 0,\n        //         SCSDials: 0,\n        //         SBSDials: 0,\n        //         SCRDials: 0,\n        //         SBRDials: 0,\n        //         SCTDials: 0,\n        //         SBTDials: 0,\n        //         SourceDials: \"\",\n        //         SCPContacts: 0,\n        //         SBPContacts: 0,\n        //         SCCContacts: 0,\n        //         SBCContacts: 0,\n        //         SCNContacts: 0,\n        //         SBNContacts: 0,\n        //         SCSContacts: 0,\n        //         SBSContacts: 0,\n        //         SCRContacts: 0,\n        //         SBRContacts: 0,\n        //         SCTContacts: 0,\n        //         SBTContacts: 0,\n        //         SourceContacts: \"\",\n        //         SCPAppts: 0,\n        //         SBPAppts: 0,\n        //         SCCAppts: 0,\n        //         SBCAppts: 0,\n        //         SCNAppts: 0,\n        //         SBNAppts: 0,\n        //         SCSAppts: 0,\n        //         SBSAppts: 0,\n        //         SCRAppts: 0,\n        //         SBRAppts: 0,\n        //         SCTAppts: 0,\n        //         SBTAppts: 0,\n        //         SourceAppts: \"\"\n        //     })\n        // } else {\n        this.setState({\n            showDialChart: false,\n            showContactChart: false,\n            showApptChart: false,\n            showCashflowDials: false,\n            showCashflowContacts: false,\n            showCashflowAppts: false,\n            showBusinessDials: false,\n            showBusinessContacts: false,\n            showBusinessAppts: false,\n            showProspectPerformance: false,\n            showClientPerformance: false,\n            showNaturalPerformance: false,\n            showSuspectPerformance: false,\n            showReferralPerformance: false,\n            showTargetPerformance: false,\n            showSourcePerformance: true,\n            showSelectedTargetPerformance: false\n        })\n        // }\n    }\n\n    viewSelectedTargetPerformance = () => {\n        // if (this.state.showSelectedTargetPerformance === true) {\n        //     this.setState({\n        //         showSelectedTargetPerformance: false\n        //     })\n        // } else {\n        this.setState({\n            showDialChart: false,\n            showContactChart: false,\n            showApptChart: false,\n            showCashflowDials: false,\n            showCashflowContacts: false,\n            showCashflowAppts: false,\n            showBusinessDials: false,\n            showBusinessContacts: false,\n            showBusinessAppts: false,\n            showProspectPerformance: false,\n            showClientPerformance: false,\n            showNaturalPerformance: false,\n            showSuspectPerformance: false,\n            showReferralPerformance: false,\n            showTargetPerformance: false,\n            showSourcePerformance: false,\n            showSelectedTargetPerformance: true\n        })\n        // }\n    }\n\n    changeSourceData = () => {\n        // event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.leadSource)\n        // var parsedDials = []\n        var parsedSourceData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            if (this.state.dialData[i].source === this.state.leadSource) {\n                parsedSourceData.parsedDials.push(this.state.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.state.contactData.length; j++) {\n            if (this.state.contactData[j].source === this.state.leadSource) {\n                parsedSourceData.parsedContacts.push(this.state.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.state.appointments.length; k++) {\n            if (this.state.appointments[k].source === this.state.leadSource) {\n                parsedSourceData.parsedAppts.push(this.state.appointments[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                sourceDialData: parsedSourceData.parsedDials,\n                sourceContactData: parsedSourceData.parsedContacts,\n                sourceApptData: parsedSourceData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseSourceAppts()\n                this.parseSourceContacts()\n                this.parseSourceDials()\n\n                // setTimeout(() => { this.viewSourcePerformance() }, 500)\n            }, 500)\n\n        }, 500)\n    }\n\n    gatherSourceData = (event) => {\n        event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.leadSource)\n        // var parsedDials = []\n        var parsedSourceData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            if (this.state.dialData[i].source === this.state.leadSource) {\n                parsedSourceData.parsedDials.push(this.state.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.state.contactData.length; j++) {\n            if (this.state.contactData[j].source === this.state.leadSource) {\n                parsedSourceData.parsedContacts.push(this.state.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.state.appointments.length; k++) {\n            if (this.state.appointments[k].source === this.state.leadSource) {\n                parsedSourceData.parsedAppts.push(this.state.appointments[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                sourceDialData: parsedSourceData.parsedDials,\n                sourceContactData: parsedSourceData.parsedContacts,\n                sourceApptData: parsedSourceData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseSourceAppts()\n                this.parseSourceContacts()\n                this.parseSourceDials()\n\n                setTimeout(() => { this.viewSourcePerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    parseSourceDials = () => {\n        console.log(\"Parsing: \" + this.state.sourceDialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        var SDials = 0;\n        for (var i = 0; i < this.state.sourceDialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.sourceDialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    SDials++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    SDials++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    SDials++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    SDials++\n                    break;\n                case \"CND\":\n                    CND++\n                    SDials++\n                    break;\n                case \"BND\":\n                    BND++\n                    SDials++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    SDials++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    SDials++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    SDials++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    SDials++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    SDials++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    SDials++\n                    break;\n                default:\n                    SDials++\n                    break;\n            }\n        }\n        this.setState({\n            SCPDials: CPD,\n            SBPDials: BPD,\n            SCCDials: CCD,\n            SBCDials: BCD,\n            SCNDials: CND,\n            SBNDials: BND,\n            SCSDials: CSD,\n            SBSDials: BSD,\n            SCRDials: CRD,\n            SBRDials: BRD,\n            SCTDials: CTD,\n            SBTDials: BTD,\n            SourceDials: SDials\n        })\n    }\n\n\n    parseSourceContacts = () => {\n        console.log(\"Parsing: \" + this.state.sourceContactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        var SContacts = 0;\n        for (var i = 0; i < this.state.sourceContactData.length; i++) {\n            switch (this.state.sourceContactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    SContacts++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    SContacts++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    SContacts++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    SContacts++\n                    break;\n                case \"CND\":\n                    CNC++\n                    SContacts++\n                    break;\n                case \"BND\":\n                    BNC++\n                    SContacts++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    SContacts++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    SContacts++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    SContacts++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    SContacts++\n                    break;\n                case \"CTD\":\n                    SContacts++\n                    CTC++\n                    break;\n                case \"BTD\":\n                    SContacts++\n                    BTC++\n                    break;\n                default:\n                    SContacts++\n                    break;\n            }\n        }\n        this.setState({\n            SCPContacts: CPC,\n            SBPContacts: BPC,\n            SCCContacts: CCC,\n            SBCContacts: BCC,\n            SCNContacts: CNC,\n            SBNContacts: BNC,\n            SCSContacts: CSC,\n            SBSContacts: BSC,\n            SCRContacts: CRC,\n            SBRContacts: BRC,\n            SCTContacts: CTC,\n            SBTContacts: BTC,\n            SourceContacts: SContacts\n        })\n    }\n\n    parseSourceAppts = () => {\n        console.log(\"Parsing: \" + this.state.sourceApptData)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        var SAppts = 0;\n        for (var i = 0; i < this.state.sourceApptData.length; i++) {\n            console.log(this.state.sourceApptData[i])\n            switch (this.state.sourceApptData[i].type) {\n                case \"CPD\":\n                    CPA++\n                    SAppts++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    SAppts++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    SAppts++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    SAppts++\n                    break;\n                case \"CND\":\n                    CNA++\n                    SAppts++\n                    break;\n                case \"BND\":\n                    BNA++\n                    SAppts++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    SAppts++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    SAppts++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    SAppts++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    SAppts++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    SAppts++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    SAppts++\n                    break;\n                default:\n                    SAppts++\n                    break;\n            }\n        }\n        this.setState({\n            SCPAppts: CPA,\n            SBPAppts: BPA,\n            SCCAppts: CCA,\n            SBCAppts: BCA,\n            SCNAppts: CNA,\n            SBNAppts: BNA,\n            SCSAppts: CSA,\n            SBSAppts: BSA,\n            SCRAppts: CRA,\n            SBRAppts: BRA,\n            SCTAppts: CTA,\n            SBTAppts: BTA,\n            SourceAppts: SAppts\n        })\n    }\n\n    changeTargetData = () => {\n        // event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.targetMarket)\n        // var parsedDials = []\n        var parsedTargetData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            if (this.state.dialData[i].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedDials.push(this.state.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.state.contactData.length; j++) {\n            if (this.state.contactData[j].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedContacts.push(this.state.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.state.appointments.length; k++) {\n            if (this.state.appointments[k].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedAppts.push(this.state.appointments[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                targetDialData: parsedTargetData.parsedDials,\n                targetContactData: parsedTargetData.parsedContacts,\n                targetApptData: parsedTargetData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseTargetAppts()\n                this.parseTargetContacts()\n                this.parseTargetDials()\n\n                // setTimeout(() => { this.viewSelectedTargetPerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    gatherTargetData = (event) => {\n        event.preventDefault()\n        console.log(\"Gathering data on source: \" + this.state.targetMarket)\n        // var parsedDials = []\n        var parsedTargetData = {\n            parsedDials: [],\n            parsedContacts: [],\n            parsedAppts: []\n        }\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            if (this.state.dialData[i].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedDials.push(this.state.dialData[i])\n            }\n        }\n\n        for (var j = 0; j < this.state.contactData.length; j++) {\n            if (this.state.contactData[j].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedContacts.push(this.state.contactData[j])\n            }\n        }\n\n        for (var k = 0; k < this.state.appointments.length; k++) {\n            if (this.state.appointments[k].targetMarket === this.state.targetMarket) {\n                parsedTargetData.parsedAppts.push(this.state.appointments[k])\n            }\n        }\n\n        setTimeout(() => {\n\n            this.setState({\n                targetDialData: parsedTargetData.parsedDials,\n                targetContactData: parsedTargetData.parsedContacts,\n                targetApptData: parsedTargetData.parsedAppts\n            })\n            setTimeout(() => {\n                this.parseTargetAppts()\n                this.parseTargetContacts()\n                this.parseTargetDials()\n\n                setTimeout(() => { this.viewSelectedTargetPerformance() }, 500)\n            }, 500)\n\n        }, 500)\n\n    }\n\n    parseTargetDials = () => {\n        console.log(\"Parsing: \" + this.state.targetDialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        var TDials = 0;\n        for (var i = 0; i < this.state.targetDialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.targetDialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    TDials++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    TDials++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    TDials++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    TDials++\n                    break;\n                case \"CND\":\n                    CND++\n                    TDials++\n                    break;\n                case \"BND\":\n                    BND++\n                    TDials++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    TDials++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    TDials++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    TDials++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    TDials++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    TDials++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    TDials++\n                    break;\n                default:\n                    TDials++\n                    break;\n            }\n        }\n        this.setState({\n            TCPDials: CPD,\n            TBPDials: BPD,\n            TCCDials: CCD,\n            TBCDials: BCD,\n            TCNDials: CND,\n            TBNDials: BND,\n            TCSDials: CSD,\n            TBSDials: BSD,\n            TCRDials: CRD,\n            TBRDials: BRD,\n            TCTDials: CTD,\n            TBTDials: BTD,\n            TargetDials: TDials\n        })\n    }\n\n    parseTargetContacts = () => {\n        console.log(\"Parsing: \" + this.state.targetContactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        var TContacts = 0;\n        for (var i = 0; i < this.state.targetContactData.length; i++) {\n            switch (this.state.targetContactData[i].type) {\n                case \"CPD\":\n                    CPC++\n                    TContacts++\n                    break;\n                case \"BPD\":\n                    BPC++\n                    TContacts++\n                    break;\n                case \"CCD\":\n                    CCC++\n                    TContacts++\n                    break;\n                case \"BCD\":\n                    BCC++\n                    TContacts++\n                    break;\n                case \"CND\":\n                    CNC++\n                    TContacts++\n                    break;\n                case \"BND\":\n                    BNC++\n                    TContacts++\n                    break;\n                case \"CSD\":\n                    CSC++\n                    TContacts++\n                    break;\n                case \"BSD\":\n                    BSC++\n                    TContacts++\n                    break;\n                case \"CRD\":\n                    CRC++\n                    TContacts++\n                    break;\n                case \"BRD\":\n                    BRC++\n                    TContacts++\n                    break;\n                case \"CTD\":\n                    TContacts++\n                    CTC++\n                    break;\n                case \"BTD\":\n                    TContacts++\n                    BTC++\n                    break;\n                default:\n                    TContacts++\n                    break;\n            }\n        }\n        this.setState({\n            TCPContacts: CPC,\n            TBPContacts: BPC,\n            TCCContacts: CCC,\n            TBCContacts: BCC,\n            TCNContacts: CNC,\n            TBNContacts: BNC,\n            TCSContacts: CSC,\n            TBSContacts: BSC,\n            TCRContacts: CRC,\n            TBRContacts: BRC,\n            TCTContacts: CTC,\n            TBTContacts: BTC,\n            TargetContacts: TContacts\n        })\n    }\n\n\n    parseTargetAppts = () => {\n        console.log(\"Parsing: \" + this.state.targetApptData)\n        var CPA = 0;\n        var BPA = 0;\n        var CCA = 0;\n        var BCA = 0;\n        var CNA = 0;\n        var BNA = 0;\n        var CSA = 0;\n        var BSA = 0;\n        var CRA = 0;\n        var BRA = 0;\n        var CTA = 0;\n        var BTA = 0;\n        var TAppts = 0;\n        for (var i = 0; i < this.state.targetApptData.length; i++) {\n            console.log(this.state.targetApptData[i])\n            switch (this.state.targetApptData[i].type) {\n                case \"CPD\":\n                    CPA++\n                    TAppts++\n                    break;\n                case \"BPD\":\n                    BPA++\n                    TAppts++\n                    break;\n                case \"CCD\":\n                    CCA++\n                    TAppts++\n                    break;\n                case \"BCD\":\n                    BCA++\n                    TAppts++\n                    break;\n                case \"CND\":\n                    CNA++\n                    TAppts++\n                    break;\n                case \"BND\":\n                    BNA++\n                    TAppts++\n                    break;\n                case \"CSD\":\n                    CSA++\n                    TAppts++\n                    break;\n                case \"BSD\":\n                    BSA++\n                    TAppts++\n                    break;\n                case \"CRD\":\n                    CRA++\n                    TAppts++\n                    break;\n                case \"BRD\":\n                    BRA++\n                    TAppts++\n                    break;\n                case \"CTD\":\n                    CTA++\n                    TAppts++\n                    break;\n                case \"BTD\":\n                    BTA++\n                    TAppts++\n                    break;\n                default:\n                    TAppts++\n                    break;\n            }\n        }\n        this.setState({\n            TCPAppts: CPA,\n            TBPAppts: BPA,\n            TCCAppts: CCA,\n            TBCAppts: BCA,\n            TCNAppts: CNA,\n            TBNAppts: BNA,\n            TCSAppts: CSA,\n            TBSAppts: BSA,\n            TCRAppts: CRA,\n            TBRAppts: BRA,\n            TCTAppts: CTA,\n            TBTAppts: BTA,\n            TargetAppts: TAppts\n        })\n    }\n\n    \n\n\n\n\n\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    render() {\n        return (\n            <div className=\"card bg-light\"\n                style={{\n                    padding: '50px',\n                    // backgroundColor: 'rgba(77,160,255,0.80)', \n                    // color: 'whitesmoke' \n                }}>\n\n                <div className=\"card-header\">\n                    <h2 style={{ textAlign: 'center', color: 'black', margin: '20px', borderRadius: '10px' }}>A N A L Y T I C S</h2>\n\n                    <div className=\"row\">\n                        <div className=\"col-12 card\" style={{ padding: '50px', backgroundColor: '', color: 'black', textAlign: 'left' }}>\n                            <div className=\"card-header\">\n                                <h3 style={{ textAlign: 'center' }}>Select an Option</h3>\n                            </div>\n                            {/* <br /> */}\n                            {/* <hr />\n                            <hr /> */}\n                            <div style={{ textAlign: 'center' }}>\n                                <h4 style={{ textAlign: 'center' }}>Review Proteges <br /><button className=\"btn btn-outline-dark\" onClick={this.showProtegeAnalytics}>Show/Hide</button></h4>\n                                {/* <hr /> */}\n                                <br />\n                                <h4 style={{ textAlign: 'center' }}>Review Mentors <br /><button className=\"btn btn-outline-dark\" onClick={this.showMentorAnalytics}>Show/Hide</button></h4>\n                                {/* <br /> */}\n                                <br />\n                                <h4 style={{ textAlign: 'center' }}>Review Global <br /><button className=\"btn btn-outline-dark\" onClick={this.showGlobalAnalytics}>Show/Hide</button></h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <br />\n                <div className=\"row\">\n                    <div className=\"card-body\">\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* /////////////////////////////// PROTEGE DATA VIEWER TOOLS AND OPTS////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showProtegeAnalyticsViewer ?\n                            <div className=\"card bg-light\" style={{ padding: '50px', backgroundColor: '', color: 'black', textAlign: 'left' }}>\n                                <div className=\"card-header\">\n                                    <h4 style={{ textAlign: 'center' }}>Select a Protege</h4>\n                                </div>\n                                {this.props.allProtegeData ?\n                                    <div className=\"card-body\">\n                                        {/* <ul> */}\n                                        <p style={{ textAlign: 'center' }}>\n                                            <select id=\"mentorsDropDownMenu\" value={this.state.protegeToView} onChange={this.handleInputChange} name=\"protegeToView\">\n                                                <option value=\"none\">--Select a Protege--</option>\n                                                {this.props.allProtegeData.map(protege => (<option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>))}\n                                            </select>\n                                            {/* <button>Placeholder</button> */}\n                                            <br />\n                                            <button onClick={this.viewProtegeData} className=\"btn btn-outline-dark btn-sm\">View/Change</button>\n                                            {/* <button onClick={this.removeMentorFromProtege} className=\"btn btn-outline-danger btn-sm\">Remove Mentor</button> */}\n                                        </p>\n                                        {/* </ul> */}\n                                    </div>\n                                    : null}\n                            </div>\n                            : null}\n                        <br />\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {this.state.activeProtegeDataPopulated ?\n                            <div className=\"card\" style={{ color: 'black', textAlign: 'left' }}>\n\n\n                                <div className=\"card-header\">\n                                    <h4 style={{ textAlign: 'center' }}>Select what you'd like to view</h4>\n                                </div>\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeCallData}>View Call Data</button>\n                                {this.state.viewProtegeCallData ?\n                                    <div className=\"card\" style={{ padding: '50px', backgroundColor: 'rgba(255,255,255,0.9)', color: 'black', textAlign: 'left' }}>\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center' }}>Protege Call Data:</h4>\n\n\n                                            <h5 style={{ textAlign: 'center', color: 'black' }}> <i>Please select your Scope (Defaulted to All)</i></h5>\n\n                                            <form>\n\n                                                <hr />\n\n\n                                                <div style={{ width: '50%', marginLeft: 'auto', marginRight: 'auto', textAlign: 'center', backgroundColor: '' }}>\n\n                                                    <select style={{}} id=\"protegeSelector\" value={this.state.scopeSelected} onChange={this.handleInputChange} type=\"text\" name=\"scopeSelected\" className=\"customDropManager\" placeholder=\"Choose your protege\">\n                                                        <option value={\"none\"}>---------------</option>\n                                                        <option value={\"viewAll\"}>All Data</option>\n                                                        <option value={\"viewWeekly\"}>Weekly Data</option>\n                                                        <option value={\"viewMonthly\"}>Monthly Data</option>\n                                                    </select>\n                                                    <br />\n                                                    <button style={{}} onClick={this.handleScopeChange} className=\"btn btn-sm btn-outline-dark\">Apply</button>\n\n                                                    <br />\n\n                                                </div>\n                                            </form>\n                                        </div>\n                                        {/* Type of Call Breakdown */}\n\n                                        <form>\n                                            <div>\n                                                <select id=\"sourceDropMenu\" className=\"\" value={this.state.dataOption} onChange={this.handleInputChange} name=\"dataOption\">\n                                                    <option value={\"none\"}>--Choose a Type of Call--</option>\n                                                    <option value={\"genDials\"}>Dial Data</option>\n                                                    <option value={\"genContacts\"}>Contact Data</option>\n                                                    <option value={\"genAppts\"}>Appointment Data</option>\n                                                    <option value={\"cfDials\"}>Cashflow Dial Data</option>\n                                                    <option value={\"cfContacts\"}>Cashflow Contact Data</option>\n                                                    <option value={\"cfAppts\"}>Cashflow Appointment Data</option>\n                                                    <option value={\"boDials\"}>Tier Dial Data</option>\n                                                    <option value={\"boContacts\"}>Tier-1 Contact Data</option>\n                                                    <option value={\"boAppts\"}>Tier-1 Appointment Data</option>\n                                                </select>\n                                                <button className=\"btn-outline-dark btn-sm btn\" onClick={this.showDataOption}>Get Data</button>\n                                            </div>\n                                        </form>\n\n                                        {/* Category of Call Breakdown */}\n\n                                        <form>\n                                            <div>\n                                                <select id=\"sourceDropMenu\" className=\"\" value={this.state.categoryOption} onChange={this.handleInputChange} name=\"categoryOption\">\n                                                    <option value={\"none\"}>--Choose a Category--</option>\n                                                    <option value={\"pData\"}>Prospects Call Data</option>\n                                                    <option value={\"cData\"}>Clients Call Data</option>\n                                                    <option value={\"nData\"}>Natural Market Call Data</option>\n                                                    <option value={\"sData\"}>Suspect Call Data</option>\n                                                    <option value={\"rData\"}>Referral Call Data</option>\n                                                    <option value={\"tData\"}>Target Market Call Data</option>\n                                                </select>\n                                                <button className=\"btn-outline-dark btn-sm btn\" onClick={this.showCategoryOption}>Get Data</button>\n                                            </div>\n                                        </form>\n\n                                        <form>\n                                            {this.state.activeProtegeData.sources ?\n                                                <div>\n                                                    <select id=\"sourceDropMenu\" className=\"\" value={this.state.leadSource} onChange={this.handleSourceChange} name=\"leadSource\">\n                                                        <option value={\"none\"}>No Lead Source Selected</option>\n                                                        {this.state.activeProtegeData.sources.map(source => (\n                                                            <option value={source}>{source}</option>\n                                                        ))}\n                                                    </select>\n                                                    <button className=\"btn-outline-dark btn-sm btn\" onClick={this.gatherSourceData}>Get Data</button>\n                                                    {/* <button className=\"btn-outline-light btn-sm btn\" onClick={this.changeSourceData}>Change Source</button> */}\n                                                </div>\n                                                : null}\n                                        </form>\n\n                                        <form>\n                                            {this.state.activeProtegeData.targetMarkets ?\n                                                <div>\n                                                    <select id=\"sourceDropMenu\" value={this.state.targetMarket} className=\"\" onChange={this.handleTargetChange} name=\"targetMarket\">\n                                                        <option value={\"none\"}>No Target Market Selected</option>\n                                                        {this.state.activeProtegeData.targetMarkets.map(target => (\n                                                            <option value={target}>{target}</option>\n                                                        ))}\n                                                    </select> <button className=\"btn-outline-dark btn-sm btn\" onClick={this.gatherTargetData}>Get Data</button>\n                                                </div>\n                                                : null}\n                                        </form>\n\n\n\n                                        {this.state.showDialChart ?\n                                            <DataViewerDialChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                dialData={this.state.dialData}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n                                        {this.state.showContactChart ?\n                                            <div>\n                                                <DataViewerContactChart\n                                                    activeProtegeData={this.state.activeProtegeData}\n                                                    contactData={this.state.contactData}\n                                                    BCAppts={this.state.BCAppts}\n                                                    BCContacts={this.state.BCContacts}\n                                                    BCDials={this.state.BCDials}\n                                                    BNAppts={this.state.BNAppts}\n                                                    BNContacts={this.state.BNContacts}\n                                                    BNDials={this.state.BNDials}\n                                                    BPAppts={this.state.BPAppts}\n                                                    BPContacts={this.state.BPContacts}\n                                                    BPDials={this.state.BPDials}\n                                                    BRAppts={this.state.BRAppts}\n                                                    BRContacts={this.state.BRContacts}\n                                                    BRDials={this.state.BRDials}\n                                                    BSAppts={this.state.BSAppts}\n                                                    BSContacts={this.state.BSContacts}\n                                                    BSDials={this.state.BSDials}\n                                                    BTAppts={this.state.BTAppts}\n                                                    BTContacts={this.state.BTContacts}\n                                                    BTDials={this.state.BTDials}\n                                                    CCAppts={this.state.CCAppts}\n                                                    CCContacts={this.state.CCContacts}\n                                                    CCDials={this.state.CCDials}\n                                                    CNAppts={this.state.CNAppts}\n                                                    CNContacts={this.state.CNContacts}\n                                                    CNDials={this.state.CNDials}\n                                                    CPAppts={this.state.CPAppts}\n                                                    CPContacts={this.state.CPContacts}\n                                                    CPDials={this.state.CPDials}\n                                                    CRAppts={this.state.CRAppts}\n                                                    CRContacts={this.state.CRContacts}\n                                                    CRDials={this.state.CRDials}\n                                                    CSAppts={this.state.CSAppts}\n                                                    CSContacts={this.state.CSContacts}\n                                                    CSDials={this.state.CSDials}\n                                                    CTAppts={this.state.CTAppts}\n                                                    CTContacts={this.state.CTContacts}\n                                                    CTDials={this.state.CTDials}\n                                                />\n                                            </div>\n\n                                            : null}\n\n\n                                        {this.state.showApptChart ?\n\n                                            <DataViewerAppointmentChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                appointments={this.state.appointments}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n                                        <hr />\n\n                                        {/* //////////////////////////////////////////////////\n                /////////////////////////////////////////////////\n                ///////////////////////////////////////////////////// */}\n\n                                        {this.state.showCashflowDials ?\n                                            <DataViewerCFDialChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                dialData={this.state.dialData}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                                        {this.state.showCashflowContacts ?\n                                            <DataViewerCFContactChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                contactData={this.state.contactData}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        <br />\n                                        {this.state.showCashflowAppts ?\n                                            <DataViewerCFAppointmentChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                appointments={this.state.appointments}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showBusinessDials ?\n                                            <DataViewerBODialChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                dialData={this.state.dialData}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showBusinessContacts ?\n                                            <DataViewerBOContactChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                contactData={this.state.contactData}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showBusinessAppts ?\n                                            <DataViewerBOAppointmentChart\n                                                activeProtegeData={this.state.activeProtegeData}\n                                                appointments={this.state.appointments}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showProspectPerformance ?\n                                            <DataViewerProspectPerformance\n                                                category={\"Prospect\"}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n\n                                            />\n\n                                            : null}\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showClientPerformance ?\n                                            <DataViewerClientPerformance\n                                                category={\"Client\"}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n\n                                            />\n\n                                            : null}\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showNaturalPerformance ?\n                                            <DataViewerNaturalPerformance\n                                                category={\"Natural\"}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showSuspectPerformance ?\n                                            <DataViewerSuspectPerformance\n                                                category={\"Suspect\"}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showReferralPerformance ?\n                                            <DataViewerReferralPerformance\n                                                category={\"Referral\"}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n\n                                            : null}\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                    //////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showTargetPerformance ?\n                                            <DataViewerTargetPerformance\n                                                category={\"Target\"}\n                                                BCAppts={this.state.BCAppts}\n                                                BCContacts={this.state.BCContacts}\n                                                BCDials={this.state.BCDials}\n                                                BNAppts={this.state.BNAppts}\n                                                BNContacts={this.state.BNContacts}\n                                                BNDials={this.state.BNDials}\n                                                BPAppts={this.state.BPAppts}\n                                                BPContacts={this.state.BPContacts}\n                                                BPDials={this.state.BPDials}\n                                                BRAppts={this.state.BRAppts}\n                                                BRContacts={this.state.BRContacts}\n                                                BRDials={this.state.BRDials}\n                                                BSAppts={this.state.BSAppts}\n                                                BSContacts={this.state.BSContacts}\n                                                BSDials={this.state.BSDials}\n                                                BTAppts={this.state.BTAppts}\n                                                BTContacts={this.state.BTContacts}\n                                                BTDials={this.state.BTDials}\n                                                CCAppts={this.state.CCAppts}\n                                                CCContacts={this.state.CCContacts}\n                                                CCDials={this.state.CCDials}\n                                                CNAppts={this.state.CNAppts}\n                                                CNContacts={this.state.CNContacts}\n                                                CNDials={this.state.CNDials}\n                                                CPAppts={this.state.CPAppts}\n                                                CPContacts={this.state.CPContacts}\n                                                CPDials={this.state.CPDials}\n                                                CRAppts={this.state.CRAppts}\n                                                CRContacts={this.state.CRContacts}\n                                                CRDials={this.state.CRDials}\n                                                CSAppts={this.state.CSAppts}\n                                                CSContacts={this.state.CSContacts}\n                                                CSDials={this.state.CSDials}\n                                                CTAppts={this.state.CTAppts}\n                                                CTContacts={this.state.CTContacts}\n                                                CTDials={this.state.CTDials}\n                                            />\n\n                                            : null}\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                    //////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showSourcePerformance ?\n                                            <div style={{ textAlign: 'center' }}>\n\n                                                <div style={{ color: 'black' }}>\n                                                    <h3><u>{this.state.leadSource} Types of Calls</u></h3>\n\n\n                                                    <div className=\"card\"\n                                                        style={{\n                                                            width: '80%',\n                                                            marginLeft: '10%',\n                                                            backgroundColor: 'rgba(0,0,0,0.1)',\n                                                            padding: '5%'\n                                                        }}>\n\n\n\n                                                        <p style={{ textAlign: 'center' }}>All Time Dials: {this.state.sourceDialData.length}</p>\n\n                                                        {/* <div className=\"card\" style={{ backgroundColor: 'rgba(255,255,255,0.8)', padding: '5%' }}> */}\n                                                        <Pie data={{\n                                                            labels: [\n                                                                \"Standard/Cashflow\",\n                                                                \"Tier-1/Businessowner\"],\n                                                            datasets: [{\n                                                                data: [\n                                                                    this.state.SCPDials +\n                                                                    this.state.SCCDials +\n                                                                    this.state.SCNDials +\n                                                                    this.state.SCSDials +\n                                                                    this.state.SCRDials +\n                                                                    this.state.SCTDials,\n\n\n                                                                    this.state.SBRDials +\n                                                                    this.state.SBSDials +\n                                                                    this.state.SBNDials +\n                                                                    this.state.SBCDials +\n                                                                    this.state.SBPDials +\n                                                                    this.state.SBTDials\n                                                                ],\n                                                                backgroundColor: [\n                                                                    \"#3ac178\",\n                                                                    \"#443959\"\n                                                                ]\n                                                            }]\n                                                        }}\n                                                            options={{\n                                                                legend: {\n                                                                    position: 'left',\n                                                                    labels: {\n                                                                        boxWidth: 10\n                                                                    }\n                                                                }\n                                                            }}\n                                                        /> </div>\n                                                    {/* </div> */}\n                                                </div>\n                                                <br />\n                                                {/* /////////////////////////////////////////\n                                            ////////////////////////////////////////////\n                                            /////// SOURCE PIE CHARTS BELOW ////////////\n                                            ///////////////////////////////////////////\n                                            /////////////////////////////////////////// */}\n                                                <br />\n\n                                                <div className=\"card\" style={{ backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                                    <h3>{this.state.leadSource} Lead Performance:</h3>\n                                                    <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                                        <div className=\"col-lg-4\">\n                                                            <hr />\n                                                            <h5>Contacts/Dial Ratio</h5>\n                                                            <h6>Total Dials: {this.state.SourceDials}</h6>\n\n                                                            <Pie data={{\n                                                                labels: [\n                                                                    `Missed Calls`,\n                                                                    `Contacts`,\n                                                                ],\n                                                                datasets: [{\n                                                                    data: [\n                                                                        this.state.SourceDials - this.state.SourceContacts,\n                                                                        this.state.SourceContacts\n                                                                    ],\n                                                                    backgroundColor: [\n                                                                        \"#51aef7\",\n                                                                        \"#25517b\"\n                                                                    ]\n                                                                }]\n                                                            }}\n                                                                options={{\n                                                                    legend: {\n                                                                        display: false\n                                                                    }\n                                                                }}\n\n                                                            />\n                                                            <br />\n                                                            <h6>Made Contact on:</h6>\n                                                            <h6>{Math.round((this.state.SourceContacts / this.state.SourceDials) * 100)}% of dials</h6>\n                                                        </div>\n\n                                                        <div className=\"col-lg-4\">\n                                                            <hr />\n                                                            <h5>Appointment / Contact Ratio</h5>\n                                                            <h6>Total Contacts: {this.state.SourceContacts}</h6>\n                                                            <Pie data={{\n                                                                labels: [\n                                                                    `Contacts without Scheduling`,\n                                                                    `Appointments`,\n                                                                ],\n                                                                datasets: [{\n                                                                    data: [\n                                                                        this.state.SourceContacts - this.state.SourceAppts,\n                                                                        this.state.SourceAppts\n                                                                    ],\n                                                                    backgroundColor: [\n                                                                        \"#51aef7\",\n                                                                        \"#25517b\"\n                                                                    ]\n                                                                }]\n                                                            }}\n                                                                options={{\n                                                                    legend: {\n                                                                        display: false\n                                                                    }\n                                                                }}\n                                                            />\n                                                            <h6>Scheduled Appointments on:</h6>\n                                                            <h6> {Math.round((this.state.SourceAppts / this.state.SourceContacts) * 100)}% of Contacts</h6>\n                                                        </div>\n\n                                                        <div className=\"col-lg-4\">\n                                                            <hr />\n                                                            <h5>Appointment / Dial Ratio</h5>\n                                                            <h6>Total Appointments: {this.state.SourceAppts}</h6>\n                                                            {/* <h6>Appointment Ratio: {Math.round((this.state.SourceAppts / this.state.SourceDials) * 100)}%</h6> */}\n                                                            <Pie data={{\n                                                                labels: [\n                                                                    `Calls without Scheduling`,\n                                                                    `Scheduled`,\n                                                                ],\n                                                                datasets: [{\n                                                                    data: [\n                                                                        this.state.SourceDials - this.state.SourceAppts,\n                                                                        this.state.SourceAppts\n                                                                    ],\n                                                                    backgroundColor: [\n                                                                        \"#51aef7\",\n                                                                        \"#25517b\"\n                                                                    ]\n                                                                }]\n                                                            }}\n                                                                options={{\n                                                                    legend: {\n                                                                        display: false\n                                                                    }\n                                                                }}\n                                                            />\n                                                            <h6>Scheduled Appointments on:</h6>\n                                                            <h6>{Math.round((this.state.SourceAppts / this.state.SourceDials) * 100)}% of Dials</h6>\n                                                        </div>\n\n\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            : null}\n\n\n\n                                        {/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                    //////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                        {this.state.showSelectedTargetPerformance ?\n                                            <div style={{ textAlign: 'center' }}>\n\n                                                <div className=\"card\" style={{ backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                                    <div style={{ color: 'black' }}>\n                                                        <h3><u>{this.state.targetMarket} Market</u></h3>\n                                                        <p style={{ textAlign: 'center' }}>Total Dials: {this.state.targetDialData.length}</p>\n\n                                                        <Pie data={{\n                                                            labels: [\n                                                                \"Standard/Cashflow\",\n                                                                \"Tier-1/Businessowner\"],\n                                                            datasets: [{\n                                                                data: [\n                                                                    this.state.TCPDials +\n                                                                    this.state.TCCDials +\n                                                                    this.state.TCNDials +\n                                                                    this.state.TCSDials +\n                                                                    this.state.TCRDials +\n                                                                    this.state.TCTDials,\n\n\n                                                                    this.state.TBRDials +\n                                                                    this.state.TBSDials +\n                                                                    this.state.TBNDials +\n                                                                    this.state.TBCDials +\n                                                                    this.state.TBPDials +\n                                                                    this.state.TBTDials\n                                                                ],\n                                                                backgroundColor: [\n                                                                    \"#3ac178\",\n                                                                    \"#443959\"\n                                                                ]\n                                                            }]\n                                                        }}\n                                                            options={{\n                                                                legend: {\n                                                                    position: 'left',\n                                                                    labels: {\n                                                                        boxWidth: 10\n                                                                    }\n                                                                }\n                                                            }}\n                                                        /> </div>\n                                                </div>\n                                                <br />\n\n                                                {/* /////////////////////////////////////////\n                                            ////////////////////////////////////////////\n                                            /////// SOURCE PIE CHARTS BELOW ////////////\n                                            ///////////////////////////////////////////\n                                            /////////////////////////////////////////// */}\n                                                <div className=\"card\" style={{ backgroundColor: 'rgba(0,0,0,0.1)', padding: '5%' }}>\n                                                    <h4>{this.state.targetMarket} Calls Performance:</h4>\n                                                    <div className=\"row\" style={{ textAlign: 'center' }}>\n\n                                                        <div className=\"col-lg-4\">\n                                                            <hr />\n                                                            <h5>Contact / Dial Ratio</h5>\n                                                            <h6>Total Dials: {this.state.TargetDials}</h6>\n\n                                                            <Pie data={{\n                                                                labels: [\n                                                                    `${this.state.targetMarket} Missed Calls`,\n                                                                    `${this.state.targetMarket} Contacts`,\n                                                                ],\n                                                                datasets: [{\n                                                                    data: [\n                                                                        this.state.TargetDials - this.state.TargetContacts,\n                                                                        this.state.TargetContacts\n                                                                    ],\n                                                                    backgroundColor: [\n                                                                        \"#51aef7\",\n                                                                        \"#25517b\"\n                                                                    ]\n                                                                }]\n                                                            }}\n                                                                options={{\n                                                                    legend: {\n                                                                        display: false\n                                                                    }\n                                                                }}\n                                                            />\n                                                            <h6>Made Contact on:</h6>\n                                                            <h6>{Math.round((this.state.TargetContacts / this.state.TargetDials) * 100)}% of Dials</h6>\n                                                        </div>\n\n                                                        <div className=\"col-lg-4\">\n                                                            <hr />\n                                                            <h5>Appointment / Contact Ratio</h5>\n                                                            <h6>Total Contacts: {this.state.TargetContacts}</h6>\n\n                                                            <Pie data={{\n                                                                labels: [\n                                                                    `${this.state.targetMarket} calls without Scheduling`,\n                                                                    `${this.state.targetMarket} calls Scheduled`,\n                                                                ],\n                                                                datasets: [{\n                                                                    data: [\n                                                                        this.state.TargetContacts - this.state.TargetAppts,\n                                                                        this.state.TargetAppts\n                                                                    ],\n                                                                    backgroundColor: [\n                                                                        \"#51aef7\",\n                                                                        \"#25517b\"\n                                                                    ]\n                                                                }]\n                                                            }}\n                                                                options={{\n                                                                    legend: {\n                                                                        display: false\n                                                                    }\n                                                                }}\n                                                            />\n                                                            <h6>Scheduled Appointments on:</h6>\n                                                            <h6>{Math.round((this.state.TargetAppts / this.state.TargetContacts) * 100)}% of Contacts</h6>\n                                                        </div>\n\n                                                        <div className=\"col-lg-4\">\n                                                            <hr />\n                                                            <h5>Appointment / Dials Ratio</h5>\n                                                            <h6>Total Appointments {this.state.TargetAppts}</h6>\n\n                                                            <Pie data={{\n                                                                labels: [\n                                                                    `${this.state.targetMarket} calls without Scheduling`,\n                                                                    `${this.state.targetMarket} calls Scheduled`,\n                                                                ],\n                                                                datasets: [{\n                                                                    data: [\n                                                                        this.state.TargetDials - this.state.TargetAppts,\n                                                                        this.state.TargetAppts\n                                                                    ],\n                                                                    backgroundColor: [\n                                                                        \"#51aef7\",\n                                                                        \"#25517b\"\n                                                                    ]\n                                                                }]\n                                                            }}\n                                                                options={{\n                                                                    legend: {\n                                                                        display: false\n                                                                    }\n                                                                }}\n                                                            />\n                                                            <h6>Scheduled Appointments on:</h6>\n                                                            <h6>{Math.round((this.state.TargetAppts / this.state.TargetDials) * 100)}% of Dials</h6>\n                                                        </div>\n\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            : null}\n\n\n\n\n                                    </div>\n                                    : null}\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeSchedule}>View Schedule</button>\n                                {this.state.viewProtegeSchedule ?\n                                    <div>\n                                        <div className=\"col-lg-3\"></div>\n                                        <div className=\"col-lg-6\">\n                                            <div className=\"card bg-light\" style={{ color: 'darkslategrey' }}>\n                                                <h4 style={{ textAlign: 'center', color: '' }}>Protege Schedule:</h4>\n                                                <MainCalendar\n                                                    appointments={this.state.appointments}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-3\"></div>\n                                    </div>\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeAppointments}>View Appointments</button>\n                                {this.state.viewProtegeAppointments ?\n                                    <div className=\"card bg-light\" style={{ color: 'black' }}>\n                                        {/* <h4 style={{ textAlign: 'center' }}>Protege Appointments:</h4> */}\n                                        {/* <div className=\"col-12\"> */}\n                                        <div className=\"card bg-light\" style={{ textAlign: \"center\", margin: 20, padding: 40, height: 1000, overflow: 'auto', backgroundColor: 'rgba(114,180,255,0.8)' }}>\n                                            <h4 style={{ color: 'black' }}>View {this.state.activeProtegeData.firstName + \" \" + this.state.activeProtegeData.lastName}'s Appointments:</h4>\n                                            {this.state.appointments ?\n                                                <div className=\"card-body bg-info\" style={{ color: 'darkslategrey', padding: '0px 25px 0px 25px' }}>\n                                                    {\n                                                        this.state.appointments.map(appt => (\n                                                            <AppointmentItem\n                                                                key={appt._id}\n                                                                id={appt._id}\n                                                                apptname={appt.apptname}\n                                                                type={appt.type}\n                                                                held={appt.held}\n                                                                sold={appt.sold}\n                                                                dialer={appt.dialer}\n                                                                source={appt.source}\n                                                                date={appt.date}\n                                                                notes={appt.notes}\n                                                                // username={this.state.user}\n                                                                rerender={this.gatherAppointments}\n                                                                user={this.state.activeProtegeData}\n                                                                targetMarket={appt.targetMarket}\n                                                                mentors={this.props.mentors}\n                                                            />\n                                                        ))\n                                                    }\n                                                </div>\n                                                : null}\n                                        </div>\n                                        {/* </div> */}\n                                    </div>\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeSales}>View Sales</button>\n                                {this.state.viewProtegeSales ?\n                                    <div className=\"col-12\">\n\n                                        <div className=\"card bg-light\"\n                                            style={{\n                                                textAlign: \"center\",\n                                                margin: 20,\n                                                padding: 40,\n                                                height: 1000,\n                                                overflow: 'auto'\n                                            }}>\n                                            <div className=\"card-header\">\n                                                <h4 style={{ color: '' }}>{this.state.activeProtegeData.firstName + \" \" + this.state.activeProtegeData.lastName}  Sales: </h4>\n                                            </div>\n                                            {this.state.sales ? <div className=\"card-body bg-info\" style={{ padding: '0px 25px 0px 25px' }}>\n                                                {this.state.sales.map(sale => (\n                                                    <div style={{ marginBottom: '15px' }}>\n                                                        <SalesItemMentor\n                                                            key={sale._id}\n                                                            id={sale._id}\n                                                            saleType={sale.clientType}\n                                                            saleName={sale.saleName}\n                                                            saleSource={sale.leadSource}\n                                                            saleNotes={sale.saleNotes}\n                                                            saleDate={sale.saleDate}\n                                                            saleTargetMkt={sale.targetMarket}\n                                                            saleCommission={sale.commission}\n                                                            salePercentage={sale.percentageProtege}\n                                                            saleTaggedPercentage={sale.percentageMentor}\n                                                            saleProduct={sale.product}\n                                                            saleWriter={sale.protege}\n                                                            saleTagged={sale.mentor}\n                                                            // mentors={this.state.mentors}\n                                                            userData={this.state.activeProtegeData}\n                                                        />\n\n                                                    </div>\n                                                ))\n                                                } </div>\n                                                : null}\n                                        </div>\n\n                                    </div>\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeNotes}>View Notes</button>\n                                {this.state.viewProtegeNotes ?\n                                    <div className=\"card bg-light\" style={{ color: 'black' }}>\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center' }}>Protege Notes:</h4>\n                                        </div>\n\n\n\n                                        <div className=\"card bg-light\" style={{ padding: '50px', color: 'black', marginTop: '25px' }}>\n                                            {/* <div className=\"card-header\">\n                                                <h1 style={{ textAlign: 'center' }}> Create Notes</h1>\n                                            </div> */}\n                                            <div className=\"card-body\">\n                                                <NoteCreator\n                                                    userData={this.state.activeProtegeData}\n                                                    userID={this.state.activeProtegeData._id}\n                                                    proteges={this.props.proteges}\n                                                    mentors={this.props.mentors}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"card bg-light\" style={{ padding: '50px', color: 'black', marginTop: '25px' }}>\n                                            <div className=\"card-header\">\n                                                <h3 style={{ textAlign: 'center' }}>{this.state.activeProtegeData.firstName + \" \" + this.state.activeProtegeData.lastName} Tagged Notes</h3>\n                                            </div>\n\n                                            <div className=\"card-body\">\n\n                                                <NoteViewer\n                                                    userData={this.state.activeProtegeData}\n                                                    userID={this.state.activeProtegeData._id}\n                                                    proteges={this.props.proteges}\n                                                    mentors={this.props.mentors}\n                                                    taggedNotes={this.state.notes}\n                                                    postNotes={this.state.activeProtegeData.notes}\n                                                    height={'600px'}\n                                                />\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeProfile}>View Profile</button>\n                                {this.state.viewProtegeProfile ?\n                                    <div className=\"card bg-light\" style={{ color: 'black' }}>\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center' }}>{this.state.activeProtegeData.firstName + \" \" + this.state.activeProtegeData.lastName} Profile:</h4>\n                                        </div>\n                                        <br />\n                                        <div className=\"card-body\">\n                                            <form>\n                                                <label>First Name</label>\n                                                {/* <p>{this.state.activeProtegeData.firstName}</p> */}\n                                                <input type=\"text\" value={this.state.updatedProtegeFirstName} onChange={this.handleInputChange} name=\"updatedProtegeFirstName\" />\n                                                <br />\n                                                <label>Last Name</label>\n                                                {/* <p>{this.state.activeProtegeData.lastName}</p> */}\n                                                <input type=\"text\" value={this.state.updatedProtegeLastName} onChange={this.handleInputChange} name=\"updatedProtegeLastName\" />\n                                                <br />\n                                                <label>Alma Mater</label>\n                                                <input type=\"text\" value={this.state.updatedProtegeAlmaMater} onChange={this.handleInputChange} name=\"updatedProtegeAlmaMater\" />\n                                                <br />\n                                                <label>Home Town</label>\n                                                <input type=\"text\" value={this.state.updatedProtegeHomeTown} onChange={this.handleInputChange} name=\"updatedProtegeHomeTown\" />\n                                                <br />\n                                                <label>Profile Image</label>\n                                                <input type=\"text\" value={this.state.updatedProtegeProfilePicture} onChange={this.handleInputChange}\n                                                    name=\"updatedProtegeProfilePicture\" />\n                                                <br />\n                                                {/* <label>Starting Quarter</label>\n                                                <input type=\"text\" value={this.state.updatedProtegeStartQuarter}\n                                                name=\"updatedProtegeStartQuarter\" />\n                                                <br /> */}\n                                            </form>\n                                            <button className=\"btn btn-outline-dark\" onClick={this.submitProtegeUpdate}>Update Protege</button>\n                                        </div>\n                                    </div>\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeWeeklyReport}>View Weekly Report</button>\n                                {this.state.viewProtegeWeeklyReport ?\n                                    <div className=\"col-12 card bg-primary\" style={{ color: 'whitesmoke' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Protege Weekly Report:</h4>\n                                    </div>\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeMonthlyReport}>View Monthly Report</button>\n                                {this.state.viewProtegeMonthlyReport ?\n                                    <div className=\"col-12 card bg-primary\" style={{ color: 'whitesmoke' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Protege Monthly Report:</h4>\n                                    </div>\n                                    : null}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewProtegeBenchmarkReport}>View Benchmark Report</button>\n                                {this.state.viewProtegeBenchmarkReport ?\n                                    <div className=\"col-12 card bg-primary\" style={{ color: 'whitesmoke' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Protege Benchmark Report:</h4>\n                                    </div>\n                                    : null}\n                            </div>\n                            : null}\n                        <br />\n\n\n\n\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* /////////////////////////////// MENTOR DATA VIEWER TOOLS AND OPTS/////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                        {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                        {this.state.showMentorAnalyticsViewer ?\n                            <div className=\"card bg-light\" style={{ color: 'black' }}>\n                                <div className=\"card-header\">\n                                    <h4 style={{ textAlign: 'center' }}>Select a Mentor</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    {this.props.allMentorData ?\n                                        <div style={{ textAlign: 'center' }}>\n                                            <select id=\"mentorsDropDownMenu\" value={this.state.mentorToView} onChange={this.handleInputChange} name=\"mentorToView\">\n                                                <option value=\"none\">--Select a Mentor--</option>\n                                                {this.props.allMentorData.map(mentor => (<option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>))}\n                                            </select>\n                                            <br />\n                                            {/* <button>Placeholder</button> */}\n                                            <button onClick={this.viewMentorData} className=\"btn btn-outline-dark btn-sm\">View/Change</button>\n                                            {/* <button onClick={this.removeMentorFromProtege} className=\"btn btn-outline-danger btn-sm\">Remove Mentor</button> */}\n                                        </div>\n                                        : null}\n                                </div>\n                            </div>\n                            : null}\n                        <br />\n\n                        {this.state.activeMentorDataPopulated ?\n\n                            <div className=\"col-12 card bg-light\" style={{ color: 'black' }} >\n                                <div className=\"card-header\">\n                                    <h4 style={{ textAlign: 'center' }}>Choose Your Option:</h4>\n                                </div>\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorsProtegeStatistics}>View Protege Statistics</button>\n\n                                {this.state.viewMentorsProtegeStatistics ?\n                                    <div className=\"col-12 card bg-light\" style={{ color: 'black' }}>\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center' }}>Protege Statistics:</h4>\n                                        </div>\n                                        {this.state.activeMentorDataPopulated ?\n                                            <div style={{ textAlign: 'center' }}>\n                                                <select id=\"mentorsDropDownMenu\" value={this.state.mentorsProtegeToView} onChange={this.handleInputChange} name=\"mentorsProtegeToView\">\n                                                    <option value=\"none\">--Select a Protege--</option>\n                                                    {this.state.activeMentorData.proteges.map(protege => (<option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>))}\n                                                </select>\n                                                <br />\n                                                {/* <button>Placeholder</button> */}\n                                                <button onClick={this.viewMentorsProtegeData} className=\"btn btn-outline-dark btn-sm\">View Data</button>\n                                                {/* <button onClick={this.removeMentorFromProtege} className=\"btn btn-outline-danger btn-sm\">Remove Mentor</button> */}\n                                            </div>\n                                            : null}\n\n                                        {this.state.activeMentorsProtegeDataPopulated ?\n                                            <>\n                                                <ul>\n                                                    <li>Dials: {this.state.activeMentorsProtegeData.dials.length} </li>\n                                                    <li>Contacts: {this.state.contactData.length}\n                                                        {/* {this.state.CPContacts + this.state.BPContacts + this.state.CCContacts + this.state.BCContacts + this.state.CNContacts + this.state.BNContacts + this.state.CSContacts + this.state.BSContacts + this.state.CRContacts + this.state.BRContacts + this.state.CTContacts + this.state.BTContacts } */}\n\n\n                                                    </li>\n                                                    <li>Appointments:{this.state.activeMentorsProtegeData.appointments.length}</li>\n                                                    <li>Sales:</li>\n                                                    {/* <li>Sources: {this.state.activeProtegeData.sources.length}</li> */}\n                                                    {/* <li>Target Markets{this.state.activeProtegeData.targetMarkets.length}</li> */}\n                                                </ul>\n                                                <ul>\n                                                    <li>Contact to Call Ratio: {Math.trunc((this.state.contactData.length / this.state.activeMentorsProtegeData.dials.length) * 100)}%</li>\n                                                    <li>Appointment to Contact Ratio: {Math.trunc((this.state.activeMentorsProtegeData.appointments.length / this.state.contactData.length) * 100)}%</li>\n                                                    <li>Appointments to Dial Ratio: {Math.trunc((this.state.activeMentorsProtegeData.appointments.length / this.state.activeMentorsProtegeData.dials.length) * 100)}%</li>\n                                                    <li>Sales to Appointment Ratio: </li>\n                                                </ul>\n                                                <ul>\n                                                    <li>Types of Leads (Pie Chart):\n                                                    <DataViewerDialChart\n                                                            activeProtegeData={this.state.activeMentorsProtegeData}\n                                                            dialData={this.state.dialData}\n                                                            BCAppts={this.state.BCAppts}\n                                                            BCContacts={this.state.BCContacts}\n                                                            BCDials={this.state.BCDials}\n                                                            BNAppts={this.state.BNAppts}\n                                                            BNContacts={this.state.BNContacts}\n                                                            BNDials={this.state.BNDials}\n                                                            BPAppts={this.state.BPAppts}\n                                                            BPContacts={this.state.BPContacts}\n                                                            BPDials={this.state.BPDials}\n                                                            BRAppts={this.state.BRAppts}\n                                                            BRContacts={this.state.BRContacts}\n                                                            BRDials={this.state.BRDials}\n                                                            BSAppts={this.state.BSAppts}\n                                                            BSContacts={this.state.BSContacts}\n                                                            BSDials={this.state.BSDials}\n                                                            BTAppts={this.state.BTAppts}\n                                                            BTContacts={this.state.BTContacts}\n                                                            BTDials={this.state.BTDials}\n                                                            CCAppts={this.state.CCAppts}\n                                                            CCContacts={this.state.CCContacts}\n                                                            CCDials={this.state.CCDials}\n                                                            CNAppts={this.state.CNAppts}\n                                                            CNContacts={this.state.CNContacts}\n                                                            CNDials={this.state.CNDials}\n                                                            CPAppts={this.state.CPAppts}\n                                                            CPContacts={this.state.CPContacts}\n                                                            CPDials={this.state.CPDials}\n                                                            CRAppts={this.state.CRAppts}\n                                                            CRContacts={this.state.CRContacts}\n                                                            CRDials={this.state.CRDials}\n                                                            CSAppts={this.state.CSAppts}\n                                                            CSContacts={this.state.CSContacts}\n                                                            CSDials={this.state.CSDials}\n                                                            CTAppts={this.state.CTAppts}\n                                                            CTContacts={this.state.CTContacts}\n                                                            CTDials={this.state.CTDials}\n                                                        />\n\n\n                                                    </li>\n\n                                                    <li>Types of Appointments (Pie Chart):\n                                                    <DataViewerAppointmentChart\n                                                            activeProtegeData={this.state.activeMentorsProtegeData}\n                                                            appointments={this.state.appointments}\n                                                            BCAppts={this.state.BCAppts}\n                                                            BCContacts={this.state.BCContacts}\n                                                            BCDials={this.state.BCDials}\n                                                            BNAppts={this.state.BNAppts}\n                                                            BNContacts={this.state.BNContacts}\n                                                            BNDials={this.state.BNDials}\n                                                            BPAppts={this.state.BPAppts}\n                                                            BPContacts={this.state.BPContacts}\n                                                            BPDials={this.state.BPDials}\n                                                            BRAppts={this.state.BRAppts}\n                                                            BRContacts={this.state.BRContacts}\n                                                            BRDials={this.state.BRDials}\n                                                            BSAppts={this.state.BSAppts}\n                                                            BSContacts={this.state.BSContacts}\n                                                            BSDials={this.state.BSDials}\n                                                            BTAppts={this.state.BTAppts}\n                                                            BTContacts={this.state.BTContacts}\n                                                            BTDials={this.state.BTDials}\n                                                            CCAppts={this.state.CCAppts}\n                                                            CCContacts={this.state.CCContacts}\n                                                            CCDials={this.state.CCDials}\n                                                            CNAppts={this.state.CNAppts}\n                                                            CNContacts={this.state.CNContacts}\n                                                            CNDials={this.state.CNDials}\n                                                            CPAppts={this.state.CPAppts}\n                                                            CPContacts={this.state.CPContacts}\n                                                            CPDials={this.state.CPDials}\n                                                            CRAppts={this.state.CRAppts}\n                                                            CRContacts={this.state.CRContacts}\n                                                            CRDials={this.state.CRDials}\n                                                            CSAppts={this.state.CSAppts}\n                                                            CSContacts={this.state.CSContacts}\n                                                            CSDials={this.state.CSDials}\n                                                            CTAppts={this.state.CTAppts}\n                                                            CTContacts={this.state.CTContacts}\n                                                            CTDials={this.state.CTDials}\n                                                        />\n                                                    </li>\n                                                </ul>\n\n\n                                            </>\n                                            : <p style={{ textAlign: 'center' }}>Select a Protege to view Data!</p>}\n                                    </div>\n                                    : null}\n\n\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorSchedule}>View Mentor Schedule</button>\n                                {this.state.viewMentorSchedule ?\n\n                                    <div className=\"card bg-light\" style={{ color: 'black' }}>\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center' }}>Mentor Schedule:</h4>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <MainCalendar\n                                                appointments={this.state.mentorAppts}\n                                            />\n\n                                        </div>\n                                    </div>\n\n                                    : null}\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorAppointments}>View Mentor Appointments</button>\n                                {this.state.viewMentorAppointments ?\n\n                                    <div className=\"card bg-light\"\n                                        style={{\n                                            textAlign: 'center',\n                                            margin: 20,\n                                            padding: 40,\n                                            height: 1000,\n                                            overflow: 'auto',\n                                            // backgroundColor: ''\n                                        }}>\n\n                                        <div className=\"card-header\">\n                                            <h4 style={{ textAlign: 'center' }}>{this.state.activeMentorData.firstName + \" \" + this.state.activeMentorData.lastName} Appointments:</h4>\n                                        </div>\n\n                                        {this.state.mentorAppts ?\n                                            <div className=\"card-body bg-info\"\n                                                style={{\n                                                    color: 'black',\n                                                    padding: '0px 25px 0px 25px'\n                                                }}>\n                                                {\n                                                    this.state.mentorAppts.map(appt => (\n                                                        <AppointmentItem\n                                                            key={appt._id}\n                                                            id={appt._id}\n                                                            apptname={appt.apptname}\n                                                            type={appt.type}\n                                                            held={appt.held}\n                                                            sold={appt.sold}\n                                                            dialer={appt.dialer}\n                                                            source={appt.source}\n                                                            date={appt.date}\n                                                            notes={appt.notes}\n                                                            // username={this.state.user}\n                                                            rerender={this.getMentorAppointmentData}\n                                                            user={this.state.activeMentorData}\n                                                            targetMarket={appt.targetMarket}\n                                                            mentors={this.props.mentors}\n                                                        />\n                                                    ))\n\n                                                }\n                                            </div>\n                                            : null}\n\n                                    </div>\n\n                                    : null}\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorSales}>View Mentor Sales</button>\n                                {this.state.viewMentorSales ?\n\n                                    <div className=\"col-12\">\n                                        <div className=\"card bg-light\"\n                                            style={{\n                                                textAlign: 'center',\n                                                margin: 20,\n                                                padding: 40,\n                                                height: 1000,\n                                                overflow: 'auto'\n                                            }}>\n\n                                            <div className=\"card-header\">\n\n                                                <h4 style={{ textAlign: 'center' }}>{this.state.activeMentorData.firstName + \" \" + this.state.activeMentorData.lastName} Sales:</h4>\n                                            </div>\n\n                                            {this.state.mentorSales ?\n                                                <div className=\"card-body bg-info\"\n                                                    style={{\n                                                        padding: '0px 25px 0px 25px'\n                                                    }}>\n                                                    <div style={{ marginBottom: '15px' }}>\n\n                                                        {this.state.mentorSales.map(sale => (\n                                                            <div style={{ marginBottom: '15px' }}>\n                                                                <SalesItemMentor\n                                                                    key={sale._id}\n                                                                    id={sale._id}\n                                                                    saleType={sale.clientType}\n                                                                    saleName={sale.saleName}\n                                                                    saleSource={sale.leadSource}\n                                                                    saleNotes={sale.saleNotes}\n                                                                    saleDate={sale.saleDate}\n                                                                    saleTargetMkt={sale.targetMarket}\n                                                                    saleCommission={sale.commission}\n                                                                    salePercentage={sale.percentageProtege}\n                                                                    saleTaggedPercentage={sale.percentageMentor}\n                                                                    saleProduct={sale.product}\n                                                                    saleWriter={sale.protege}\n                                                                    saleTagged={sale.mentor}\n                                                                    // mentors={this.state.mentors}\n                                                                    userData={this.state.activeMentorData}\n                                                                />\n\n                                                            </div>\n                                                        ))\n                                                        }\n\n                                                    </div>\n                                                </div>\n                                                : <p>No Sales for this Mentor yet!</p>}\n\n\n                                        </div>\n                                    </div>\n\n                                    : null}\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorWeeklyReport}>View Mentor Weekly Report</button>\n                                {this.state.viewMentorWeeklyReport ?\n\n                                    <div className=\"col-12 card bg-light\" style={{ color: 'black' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Mentor Weekly Report:</h4>\n                                    </div>\n\n                                    : null}\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorMonthlyReport}>View Mentor Monthly Report</button>\n                                {this.state.viewMentorMonthlyReport ?\n\n                                    <div className=\"col-12 card bg-light\" style={{ color: 'black' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Mentor Monthly Report:</h4>\n                                    </div>\n\n                                    : null}\n\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n                                {/* //////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n\n                                <button className=\"btn btn-outline-dark\" onClick={this.viewMentorBenchmarkReport}>View Mentor Benchmark Report</button>\n                                {this.state.viewMentorBenchmarkReport ?\n\n                                    <div className=\"col-12 card bg-light\" style={{ color: 'black' }}>\n                                        <h4 style={{ textAlign: 'center' }}>Mentor Benchmark Report:</h4>\n                                    </div>\n\n                                    : null}\n\n\n\n\n                            </div>\n                            : null}\n\n\n\n                    </div>\n                </div>\n\n            </div >\n        )\n    }\n\n}\n\nexport default ManagerDataViewer","import React, { Component } from 'react';\n// import { Pie } from 'react-chartjs-2';\nimport \"./style.css\"\nimport API from \"../../utils/API\";\n\nclass ProtegeViewContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeScope: \"viewAll\"\n        }\n    }\n\n    componentDidMount = () => {\n        this.runRefresh()\n        this.getContactData()\n        this.setState({\n            allDials: this.props.protege.dials.length,\n            allAppts: this.props.protege.appointments.length\n        })\n        // this.getWeeklyAppts()\n        // this.getWeeklyDials()\n        // this.getMonthlyDials()\n        // this.getMonthlyAppts()\n    }\n\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    runRefresh = () => {\n        this.interval = setInterval(() => {\n            this.props.rerender()\n            if (this.props.scope === \"viewWeekly\" && this.state.activeScope !== \"viewWeekly\") {\n                this.getWeeklyAppts()\n                this.getWeeklyDials()\n                this.setState({\n                    activeScope: \"viewWeekly\",\n                    monthlyDials: \"\",\n                    monthlyAppts: \"\"\n                })\n            } else if (this.props.scope === \"viewMonthly\" && this.state.activeScope !== \"viewMonthly\") {\n                this.getMonthlyDials()\n                this.getMonthlyAppts()\n                this.setState({\n                    activeScope: \"viewMonthly\",\n                    weeklyDials: \"\",\n                    weeklyAppts: \"\"\n                })\n            } else if (this.props.scope === \"viewAll\" && this.state.activeScope !== \"viewAll\") {\n                this.setState({\n                    allDials: this.props.protege.dials.length,\n                    allAppts: this.props.protege.appointments.length,\n                    activeScope: \"viewAll\",\n                    weeklyAppts: \"\",\n                    weeklyDials: \"\",\n                    monthlyAppts: \"\",\n                    monthlyDials: \"\"\n                })\n            } else {\n                console.log(\"no change\")\n            }\n\n        }, 5000);\n\n\n    }\n\n    componentWillUnmount = () => {\n\n        clearInterval(this.interval)\n    }\n\n\n\n    showGlobalAnalytics = () => {\n        console.log(\"Show Global Analytics using: \" + this.props.allProtegeData)\n        console.log(\"Show Global Analytics using: \" + this.props.allMentorData)\n        if (this.state.showMentorAnalyticsViewer === false) {\n            this.setState({\n                showProtegeAnalyticsViewer: false,\n                showMentorAnalyticsViewer: false,\n                showGlobalAnalyticsViewer: true\n            })\n        } else {\n            this.setState({\n                showGlobalAnalyticsViewer: true\n            })\n        }\n    }\n\n\n\n\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////Data Parsing ////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n\n    getWeeklyDials = () => {\n        API.getWeeklyDials(this.props.protege._id)\n            .then(res => {\n                this.setState({\n                    weeklyDials: res.data\n                })\n            })\n\n        setTimeout(() => { this.parseWeeklyContacts() }, 500)\n    }\n\n    getWeeklyAppts = () => {\n        API.getWeeklyAppts(this.props.protege._id)\n            .then(res => {\n                this.setState({\n                    weeklyAppts: res.data\n                })\n            })\n    }\n\n    parseWeeklyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.weeklyDials)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        if (this.state.weeklyDials) {\n            for (var i = 0; i < this.state.weeklyDials.length; i++) {\n\n                if (this.state.weeklyDials[i].contact === true) {\n                    switch (this.state.weeklyDials[i].type) {\n                        case \"CPD\":\n                            wCPC++\n                            break;\n                        case \"BPD\":\n                            wBPC++\n                            break;\n                        case \"CCD\":\n                            wCCC++\n                            break;\n                        case \"BCD\":\n                            wBCC++\n                            break;\n                        case \"CND\":\n                            wCNC++\n                            break;\n                        case \"BND\":\n                            wBNC++\n                            break;\n                        case \"CSD\":\n                            wCSC++\n                            break;\n                        case \"BSD\":\n                            wBSC++\n                            break;\n                        case \"CRD\":\n                            wCRC++\n                            break;\n                        case \"BRD\":\n                            wBRC++\n                            break;\n                        case \"CTD\":\n                            wCTC++\n                            break;\n                        case \"BTD\":\n                            wBTC++\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        }\n        this.setState({\n            weeklyContacts: wCPC + wBPC + wCCC + wBCC + wCNC + wBNC + wCSC + wBSC + wCRC + wBRC + wCTC + wBTC\n        })\n    }\n\n\n    getMonthlyDials = () => {\n        API.getMonthlyDials(this.props.protege._id)\n            .then(res => {\n                this.setState({\n                    monthlyDials: res.data\n                })\n            })\n\n        setTimeout(() => { this.parseMonthlyContacts() }, 500)\n    }\n\n    getMonthlyAppts = () => {\n        API.getMonthlyAppts(this.props.protege._id)\n            .then(res => {\n                this.setState({\n                    monthlyAppts: res.data\n                })\n            })\n    }\n\n    parseMonthlyContacts = () => {\n        // console.log(\"Parsing Contacts: \" + this.state.weeklyDials)\n        var wCPC = 0;\n        var wBPC = 0;\n        var wCCC = 0;\n        var wBCC = 0;\n        var wCNC = 0;\n        var wBNC = 0;\n        var wCSC = 0;\n        var wBSC = 0;\n        var wCRC = 0;\n        var wBRC = 0;\n        var wCTC = 0;\n        var wBTC = 0;\n        if (this.state.monthlyDials) {\n            for (var i = 0; i < this.state.monthlyDials.length; i++) {\n\n                if (this.state.monthlyDials[i].contact === true) {\n                    switch (this.state.monthlyDials[i].type) {\n                        case \"CPD\":\n                            wCPC++\n                            break;\n                        case \"BPD\":\n                            wBPC++\n                            break;\n                        case \"CCD\":\n                            wCCC++\n                            break;\n                        case \"BCD\":\n                            wBCC++\n                            break;\n                        case \"CND\":\n                            wCNC++\n                            break;\n                        case \"BND\":\n                            wBNC++\n                            break;\n                        case \"CSD\":\n                            wCSC++\n                            break;\n                        case \"BSD\":\n                            wBSC++\n                            break;\n                        case \"CRD\":\n                            wCRC++\n                            break;\n                        case \"BRD\":\n                            wBRC++\n                            break;\n                        case \"CTD\":\n                            wCTC++\n                            break;\n                        case \"BTD\":\n                            wBTC++\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        }\n        this.setState({\n            monthlyContacts: wCPC + wBPC + wCCC + wBCC + wCNC + wBNC + wCSC + wBSC + wCRC + wBRC + wCTC + wBTC\n        })\n    }\n\n\n\n\n    getContactData = () => {\n        setTimeout(() => {\n            // console.log(\"Searching contacts using: \" + this.state.activeProtegeData._id)\n            API.getContacts(this.props.protege._id)\n                .then(res =>\n                    this.setState({\n                        contactData: res.data\n                    }),\n                    setTimeout(() => { this.parseContacts() }, 500)\n                )\n        }, 1000)\n    }\n\n    parseDials = () => {\n        console.log(\"Parsing Dials: \" + this.state.dialData)\n        var CPD = 0;\n        var BPD = 0;\n        var CCD = 0;\n        var BCD = 0;\n        var CND = 0;\n        var BND = 0;\n        var CSD = 0;\n        var BSD = 0;\n        var CRD = 0;\n        var BRD = 0;\n        var CTD = 0;\n        var BTD = 0;\n        for (var i = 0; i < this.state.dialData.length; i++) {\n            // console.log(this.state.dialData[i])\n            switch (this.state.dialData[i].type) {\n                case \"CPD\":\n                    CPD++\n                    break;\n                case \"BPD\":\n                    BPD++\n                    break;\n                case \"CCD\":\n                    CCD++\n                    break;\n                case \"BCD\":\n                    BCD++\n                    break;\n                case \"CND\":\n                    CND++\n                    break;\n                case \"BND\":\n                    BND++\n                    break;\n                case \"CSD\":\n                    CSD++\n                    break;\n                case \"BSD\":\n                    BSD++\n                    break;\n                case \"CRD\":\n                    CRD++\n                    break;\n                case \"BRD\":\n                    BRD++\n                    break;\n                case \"CTD\":\n                    CTD++\n                    break;\n                case \"BTD\":\n                    BTD++\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.setState({\n            CPDials: CPD,\n            BPDials: BPD,\n            CCDials: CCD,\n            BCDials: BCD,\n            CNDials: CND,\n            BNDials: BND,\n            CSDials: CSD,\n            BSDials: BSD,\n            CRDials: CRD,\n            BRDials: BRD,\n            CTDials: CTD,\n            BTDials: BTD\n        })\n    }\n\n    parseContacts = () => {\n        console.log(\"Parsing Contacts: \" + this.state.contactData)\n        var CPC = 0;\n        var BPC = 0;\n        var CCC = 0;\n        var BCC = 0;\n        var CNC = 0;\n        var BNC = 0;\n        var CSC = 0;\n        var BSC = 0;\n        var CRC = 0;\n        var BRC = 0;\n        var CTC = 0;\n        var BTC = 0;\n        if (this.state.contactData) {\n            for (var i = 0; i < this.state.contactData.length; i++) {\n                switch (this.state.contactData[i].type) {\n                    case \"CPD\":\n                        CPC++\n                        break;\n                    case \"BPD\":\n                        BPC++\n                        break;\n                    case \"CCD\":\n                        CCC++\n                        break;\n                    case \"BCD\":\n                        BCC++\n                        break;\n                    case \"CND\":\n                        CNC++\n                        break;\n                    case \"BND\":\n                        BNC++\n                        break;\n                    case \"CSD\":\n                        CSC++\n                        break;\n                    case \"BSD\":\n                        BSC++\n                        break;\n                    case \"CRD\":\n                        CRC++\n                        break;\n                    case \"BRD\":\n                        BRC++\n                        break;\n                    case \"CTD\":\n                        CTC++\n                        break;\n                    case \"BTD\":\n                        BTC++\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        this.setState({\n            CPContacts: CPC,\n            BPContacts: BPC,\n            CCContacts: CCC,\n            BCContacts: BCC,\n            CNContacts: CNC,\n            BNContacts: BNC,\n            CSContacts: CSC,\n            BSContacts: BSC,\n            CRContacts: CRC,\n            BRContacts: BRC,\n            CTContacts: CTC,\n            BTContacts: BTC,\n            totalContacts: CPC + BPC + CCC + BCC + CNC + CSC + BSC + CRC + BRC + CTC + BTC\n        })\n    }\n\n\n\n\n\n    render() {\n        return (\n\n            <div>\n                {this.props.protege.dials.length > 1 ?\n                    <div className=\"card bg-light\" style={{ padding: '', borderRadius: '5px', textAlign: 'center' }}>\n                        <div className=\"card-body\">\n                            <div className=\"card-header\">\n\n                                {this.props.protege.imageURL ? <img class=\"rounded-circle z-depth-2\" alt=\"100x100\" src={this.props.protege.imageURL} style={{ width: '100px', height: '100px' }} />\n                                    : <img class=\"rounded-circle z-depth-2\" alt=\"100x100\" src=\"https://www.mountaineers.org/images/placeholder-images/placeholder-contact-profile/image_preview\" style={{ width: '100px', height: '100px' }} />\n                                }\n\n                                <br />\n\n                                <h5 style={{ color: '' }}>{this.props.protege.firstName} {this.props.protege.lastName}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <ul className=\"list-group list-group-flush\">\n                                    {this.state.allDials ?\n                                        <>\n\n\n\n                                            <li className=\"list-group-item\">Dials:<br /><h3>\n\n                                                {this.state.activeScope === \"viewAll\" ? <span> {this.state.allDials}</span> : null}\n                                                {this.state.activeScope === \"viewWeekly\" ? <> {this.state.weeklyDials ? <span> {this.state.weeklyDials.length}</span> : null} </> : null}\n                                                {this.state.activeScope === \"viewMonthly\" ? <> {this.state.monthlyDials ? <span> {this.state.monthlyDials.length}</span> : null} </> : null}\n                                            </h3></li>\n\n\n                                        </>\n                                        : null}\n                                    <li className=\"list-group-item\">Contacts:<br /> {this.state.CPContacts ?\n                                        <div>\n                                            <h3>\n\n                                                {this.state.activeScope === \"viewAll\" ? <span> {this.state.totalContacts}</span> : null}\n                                                {this.state.activeScope === \"viewWeekly\" ? <> {this.state.weeklyContacts > 0 ? <span> {this.state.weeklyContacts}</span> : 0} </> : null}\n                                                {this.state.activeScope === \"viewMonthly\" ? <> {this.state.monthlyContacts > 0 ? <span> {this.state.monthlyContacts}</span> : 0} </> : null}\n                                            </h3>\n                                            <h6>Contact Ratio:  </h6>\n                                            {this.state.activescope === \"viewAll\" ?\n\n                                                <h5>{Math.trunc((this.state.totalContacts / this.state.allDials) * 100)}%</h5>\n\n                                                : null}\n\n                                            {this.state.activeScope === \"viewWeekly\" ?\n                                                <>\n                                                    {this.state.weeklyContacts ?\n                                                        <h5>{Math.trunc((this.state.weeklyContacts / this.state.weeklyDials.length) * 100)}%</h5>\n                                                        : null}\n                                                </>\n                                                : null}\n\n                                            {this.state.activeScope === \"viewMonthly\" ?\n                                                <>\n                                                    {this.state.monthlyContacts ?\n                                                        <h5>{Math.trunc((this.state.monthlyContacts / this.state.monthlyDials.length) * 100)}%</h5>\n                                                        : null}\n                                                </>\n                                                : null}\n\n\n                                        </div>\n\n                                        : <h3>0</h3>}\n\n                                    </li>\n                                    {this.state.allAppts ?\n                                        <li className=\"list-group-item\">Appointments: <br /><h3>\n\n                                            {this.state.activeScope === \"viewAll\" ? <span> {this.state.allAppts}</span> : null}\n                                            {this.state.activeScope === \"viewWeekly\" ? <> {this.state.weeklyAppts ? <span> {this.state.weeklyAppts.length}</span> : null} </> : null}\n                                            {this.state.activeScope === \"viewMonthly\" ? <> {this.state.monthlyAppts ? <span> {this.state.monthlyAppts.length}</span> : null}  </> : null}\n                                        </h3>\n\n                                            {this.state.totalContacts ?\n                                                <div>\n                                                    <h6>Appointment per Contact:</h6>\n\n\n                                                    {this.state.activeScope === \"viewAll\" ? <span>\n                                                        <h5>{Math.trunc((this.state.allAppts / this.state.totalContacts) * 100)}%</h5>\n\n\n                                                    </span> : null}\n                                                    {this.state.activeScope === \"viewWeekly\" ? <span>\n\n                                                        {this.state.weeklyAppts ? <h5> {this.state.weeklyAppts.length > 0 ? <> {Math.trunc((this.state.weeklyAppts.length / this.state.weeklyContacts) * 100)}% </> : 0 }</h5> : null}\n\n                                                    </span> : null}\n                                                    {this.state.activeScope === \"viewMonthly\" ? <span>\n\n                                                        {this.state.monthlyAppts ? <h5> {this.state.monthlyAppts.length > 0 ? <> {Math.trunc((this.state.monthlyAppts.length / this.state.monthlyContacts) * 100)}% </> : 0 }</h5> : null}\n\n                                                    </span> : null}\n                                                </div>\n                                                : null}\n                                        </li>\n                                        : null}\n\n                                </ul>\n                            </div>\n\n                            {/* <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                        </div>\n                        {/* <p></p> */}\n\n                    </div>\n                    : null}\n            </div>\n\n        )\n    }\n\n}\n\nexport default ProtegeViewContainer","import React, { Component } from \"react\";\nimport \"./Home.css\";\n// import Nav from \"../components/Nav\";\n// import LoginForm from \"../components/CreateProtegeForm\"\nimport CreateProtegeForm from \"../components/CreateProtegeForm\";\nimport CreateMentorForm from \"../components/CreateMentorForm\";\nimport API from \"../utils/API\";\n// import SideNavPageManager from \"../components/SideNavPageManager\";\nimport ManagerDataViewer from \"../components/ManagerDataViewer\";\nimport ProtegeViewContainer from \"../components/ProtegeViewContainer\";\nimport cogoToast from \"cogo-toast\";\n\n\nclass ManagerDash extends Component {\n\n    state = {\n        user: \"\",\n        proteges: \"\",\n        mentors: \"\",\n        mentorSelected: \"none\",\n        mentorSelectedData: \"\",\n        editMentorDataFirstName: \"\",\n        editMentorDataLastName: \"\",\n        editMentorDataProteges: \"\",\n        editMentorProtegeToAdd: \"\",\n        showCreateMentorForm: false,\n        showCreateProtegeForm: false,\n        showCreateTool: false,\n        showAnalyticsTool: true,\n        showReportsTool: false,\n        showSalesTool: false,\n        showProtegeActivity: false,\n        mentorToAdd: \"none\",\n        protegeToAdd: 'none',\n\n    }\n\n    componentDidMount = () => {\n        console.log(\"Loaded Manager Page\")\n        this.gatherProteges()\n        this.gatherMentors()\n    }\n\n    gatherProteges = () => {\n        API.getProteges()\n            .then((res) => {\n                this.setState({\n                    proteges: res.data\n                })\n            })\n    }\n\n    gatherMentors = () => {\n        API.getMentors()\n            .then((res) => {\n                this.setState({\n                    mentors: res.data\n                })\n            })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleMentorSelection = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n        setTimeout(() => { this.getMentorData() }, 500)\n    }\n\n    handleProtegeSelection = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n        setTimeout(() => { this.getProtegeData() }, 500)\n    }\n\n    getMentorData = () => {\n        console.log(\"Getting mentor by id: \" + this.state.mentorSelected)\n        API.getMentorById(this.state.mentorSelected)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    mentorSelectedData: res.data[0],\n                    editMentorDataFirstName: res.data[0].firstName,\n                    editMentorDataLastName: res.data[0].lastName,\n                    editMentorDataProteges: res.data[0].proteges\n                })\n            })\n    }\n\n    getProtegeData = () => {\n        console.log(\"Getting protege by id: \" + this.state.protegeSelected)\n        API.getUserDataById(this.state.protegeSelected)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    protegeSelectedData: res.data[0],\n                    editProtegeDataFirstName: res.data[0].firstName,\n                    editProtegeDataLastName: res.data[0].lastName,\n                    editProtegeDataMentors: res.data[0].allMentors\n                })\n            })\n    }\n\n    handleArrayChange = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        console.log(this.state.mentorSelectedData.proteges)\n        this.setState({\n            editMentorProtegeToAdd: event.target.value\n        })\n    }\n\n\n    addProtegeToMentor = (event) => {\n        event.preventDefault()\n        var ProtegeID = this.state.protegeToAdd\n        var MentorID = this.state.mentorSelected\n        console.log(\"Adding Protege ID: \" + this.state.editMentorProtegeToAdd + \" to \" + this.state.editMentorDataFirstName + \" \" + this.state.editMentorDataLastName)\n        API.addProtegeToMentor(MentorID, {\n            id: ProtegeID\n        }).then(res => {\n            console.log(\"Added Protege to Mentor\")\n            cogoToast.success(\"Added Protege to Mentor\")\n            this.gatherMentors()\n        }).catch(err => {\n            console.log(\"Unsuccssfully added Protege to Mentor\")\n        })\n\n    }\n\n    addMentorToProtege = (event) => {\n        event.preventDefault()\n        var MentorID = this.state.mentorToAdd\n        var ProtegeID = this.state.protegeSelected\n        // var existingMentorID = this.state.protegeSelectedData.\n        API.addMentorToProtege(ProtegeID, {\n            id: MentorID\n        }).then(res => {\n            console.log(\"Added Mentor to Protege\")\n            cogoToast.success(\"Added Mentor to Protege!\")\n            this.gatherProteges()\n        }).catch(err => {\n            console.log(\"Unsuccessful in adding Mentor to Protege\")\n        })\n    }\n\n\n    removeProtegeFromMentor = (event) => {\n        event.preventDefault()\n        // console.log(\"Removing Protege ID: \" + id + \" from \" + this.state.editMentorDataFirstName + \" \" + this.state.editMentorDataLastName)\n        var ProtegeID = this.state.protegeToAdd\n        var MentorID = this.state.mentorSelected\n        API.removeProtegeFromMentor(MentorID, {\n            id: ProtegeID\n        }).then(res => {\n            console.log(\"Removed Protege from Mentor\")\n            cogoToast.info(\"Removed Protege from Mentor\")\n            this.gatherMentors()\n        }).catch(err => {\n            console.log(\"Unsuccessfully removed Protege from Mentor\")\n        })\n    }\n\n    removeMentorFromProtege = (event) => {\n        event.preventDefault()\n        // console.log(\"Removing Mentor ID: \" + this.state.mentorToAdd + \" from \" + this.state.editProtegeDataFirstName + \" \" + this.state.editProtegeDataLastName)\n        var MentorID = this.state.mentorToAdd\n        var ProtegeID = this.state.protegeSelected\n\n\n        API.removeMentorFromProtege(ProtegeID, {\n            id: MentorID\n        }).then(res => {\n            console.log(\"Removed Mentor from Protege\")\n            cogoToast.info(\"Removed Mentor from Protege\")\n            this.gatherProteges()\n        }).catch(err => {\n            console.log(\"Unsuccessful in removing Mentor from Protege\")\n        })\n\n    }\n\n    showCreate = () => {\n        console.log(\"Showing Creation tools\")\n        if (this.state.showCreateTool === true) {\n            this.setState({\n                showCreateTool: false\n            })\n        } else {\n            this.setState({\n                showCreateTool: true,\n                showAnalyticsTool: false,\n                showReportsTool: false,\n                showSalesTool: false,\n                showProtegeActivity: false\n            })\n        }\n    }\n\n    showAnalytics = () => {\n        console.log(\"Showing Analytics tools\")\n        if (this.state.showAnalyticsTools === true) {\n            this.setState({\n                showAnalyticsTool: false\n            })\n        } else {\n            this.setState({\n                showCreateTool: false,\n                showAnalyticsTool: true,\n                showReportsTool: false,\n                showSalesTool: false,\n                showProtegeActivity: false\n            })\n        }\n    }\n\n    showReports = () => {\n        console.log(\"Showing Reports tools\")\n        if (this.state.showAnalyticsTools === true) {\n            this.setState({\n                showAnalyticsTool: false\n            })\n        } else {\n            this.setState({\n                showCreateTool: false,\n                showAnalyticsTool: true,\n                showReportsTool: false,\n                showSalesTool: false,\n                showProtegeActivity: false\n            })\n        }\n    }\n\n    showActivityTracker = () => {\n        console.log(\"Showing Activity Tracker\")\n        if (this.state.showProtegeActivity === true) {\n            this.setState({\n                showProtegeActivity: false\n            })\n        } else {\n            this.setState({\n                showCreateTool: false,\n                showAnalyticsTool: false,\n                showReportsTool: false,\n                showSalesTool: false,\n                showProtegeActivity: true\n            })\n        }\n    }\n\n    showSales = () => {\n        console.log(\"Showing Sales tools\")\n    }\n\n    showCreateProtegeFormFN = (e) => {\n        e.preventDefault()\n        if (this.state.showCreateProtegeForm === false) {\n            this.setState({\n                showCreateProtegeForm: true\n            })\n        } else {\n            this.setState({\n                showCreateProtegeForm: false\n            })\n        }\n    }\n\n    showCreateMentorFormFN = (e) => {\n        e.preventDefault()\n        if (this.state.showCreateMentorForm === false) {\n            this.setState({\n                showCreateMentorForm: true\n            })\n        } else {\n            this.setState({\n                showCreateMentorForm: false\n            })\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div>\n\n                {/* <SideNavPageManager\n                    createOption={this.showCreate}\n                    analyticsOption={this.showAnalytics}\n                    reportsOption={this.showReports}\n                    salesOption={this.showSales}\n                    \n                /> */}\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{ padding: '30px', marginBottom: '50px' }}>\n                    <div className=\"navbar-brand\" style={{color: 'whitesmoke'}}>Manager Dashboard</div>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" href=\"/\">Home</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showCreate}>Create User</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showActivityTracker}>Session Tracker</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showAnalytics}>View Analytics</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showSales}>View Sales</div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"nav-link\" onClick={this.showReports}>View Reports</div>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\n\n                <div className=\"container\">\n\n                    {/* <div className=\"jumbotron\" style={{ height: '200px', backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                        <h3 style={{ textAlign: 'center', color: 'white' }}>You're on the Mentor Dashboard!</h3>\n\n                    </div> */}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"jumbotron\" style={{ height: '100px', backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                                <h3 style={{ textAlign: 'center', color: 'white' }}>Welcome!</h3>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-1\"></div>\n                        <div className=\"col-10\">\n\n\n\n                            {this.state.showProtegeActivity ?\n                                <div className=\"card\" style={{ padding: '5px', backgroundColor: 'rgba(0,0,0,0)' }}>\n                                    <div className=\"card-header\">\n                                        <div style={{ width: '50%', marginLeft: 'auto', marginRight: 'auto', textAlign: 'center', backgroundColor: '' }}>\n                                            <h4 style={{ color: 'white' }}>Please Select your Scope</h4>\n                                            <select style={{}} id=\"protegeSelector\" value={this.state.sessionScopeSelected} onChange={this.handleInputChange} type=\"text\" name=\"sessionScopeSelected\" className=\"customDropMentor\" placeholder=\"\">\n                                                <option value={\"none\"}>---------------</option>\n                                                <option value={\"viewAll\"}>All Data</option>\n                                                <option value={\"viewWeekly\"}>Weekly Data</option>\n                                                <option value={\"viewMonthly\"}>Monthly Data</option>\n                                            </select>\n                                            <br />\n                                            <button style={{}} onClick={this.handleScopeChange} className=\"btn btn-sm btn-outline-light\">Apply</button>\n\n                                            <br />\n\n                                        </div>\n                                    </div>\n                                    <div>\n                                        {this.state.proteges ?\n                                            <div className=\"row\">\n                                                {this.state.proteges.map(protege => (\n                                                    <>\n                                                        {protege.dials.length > 1 ?\n                                                            <div key={protege._id} className=\"col-lg-4\" style={{ marginTop: '25px' }}>\n\n                                                                <ProtegeViewContainer\n                                                                    key={protege._id}\n                                                                    protege={protege}\n                                                                    rerender={this.gatherProteges}\n                                                                    scope={this.state.sessionScopeSelected}\n                                                                />\n                                                            </div>\n                                                            : null}\n                                                    </>\n                                                    // <div key={protege._id} className=\"col-md-4\">\n                                                    //     <p>{protege.firstName} {protege.lastName}</p>\n                                                    //     <p>Dials:{protege.dials.length}</p>\n                                                    //     <p>Contacts:    </p>\n                                                    //     <p>Appointments:{protege.appointments.length}</p>\n                                                    // </div>\n                                                ))\n                                                }\n                                            </div>\n                                            : null}\n                                    </div>\n                                </div>\n\n\n                                : null}\n\n\n                            {this.state.showCreateTool ?\n                                <div className=\"card bg-light\"\n                                    style={{\n                                        // backgroundColor: 'rgba(255, 255, 255, 0.5)', \n                                        padding: '50px'\n                                    }}>\n\n                                    <div className=\"card-header\">\n                                        <h2\n                                            style={{\n                                                textAlign: 'center',\n                                                padding: '20px',\n                                                // backgroundColor: 'rgba(255,255,255,0.75)',\n                                                color: 'black',\n                                                margin: '20px',\n                                                borderRadius: '10px'\n                                            }}>\n                                            C R E A T E\n                                                </h2>\n                                    </div>\n\n                                    <div className=\"card-body\">\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12 card\"\n                                                style={{\n                                                    textAlign: 'left',\n                                                    // backgroundColor: 'rgba(36,138,255,0.8)', \n                                                    padding: '0'\n                                                }}>\n                                                <div className=\"card-header\">\n                                                    <h4 style={{ textAlign: 'center', padding: '10%', backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', margin: '20px' }}>Create Protege<span><button className=\"btn btn-sm btn-outline-dark\" onClick={this.showCreateProtegeFormFN}>Show</button></span></h4>\n                                                </div>\n\n                                                {this.state.showCreateProtegeForm ?\n                                                    <div className=\"card-body\">\n                                                        <CreateProtegeForm mentors={this.state.mentors} />\n                                                    </div>\n                                                    : null}\n\n                                            </div>\n\n                                            <div className=\"col-12 card\"\n                                                style={{\n                                                    textAlign: 'left',\n                                                    // backgroundColor: 'rgba(36,138,255,0.8)', \n                                                    padding: '0'\n                                                }}>\n                                                <div className=\"card-header\">\n                                                    <h4 style={{ textAlign: 'center', padding: '10%', backgroundColor: 'rgba(255,255,255,0.75)', color: 'black', margin: '20px' }}>Create New Mentor<span><button className=\"btn btn-sm btn-outline-dark\" onClick={this.showCreateMentorFormFN}>Show</button></span></h4>\n                                                </div>\n\n                                                {this.state.showCreateMentorForm ?\n                                                    <div className=\"card-body\">\n                                                        <CreateMentorForm proteges={this.state.proteges} />\n                                                    </div>\n                                                    : null}\n                                            </div>\n                                        </div>\n                                        <br />\n                                        <div className=\"row\">\n                                            <br />\n                                            <div className=\"col-12 card\" style={{ color: 'black', textAlign: 'center', margin: 0, padding: 40, overflow: 'auto', backgroundColor: 'rgba(255,255,255,0.8)' }}>\n                                                <h4>Update Mentor </h4>\n                                                <p style={{ textAlign: 'center' }}>(Choose a Mentor to begin)</p>\n                                                {this.state.mentors ?\n                                                    <select value={this.state.mentorSelected} onChange={this.handleMentorSelection} name=\"mentorSelected\">\n                                                        <option key={\"none\"} value={\"none\"}>--Select a Mentor--</option>\n                                                        {this.state.mentors.map(mentor => (\n                                                            <option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>\n                                                        ))}\n                                                    </select>\n                                                    : null}\n                                                {this.state.mentorSelectedData ?\n                                                    <div><h5>Current Proteges:</h5>\n\n                                                        <div style={{ textAlign: 'left' }}>\n                                                            <ul>\n                                                                {this.state.editMentorDataProteges.map(protege => (\n                                                                    <li>{protege.firstName} {protege.lastName} <span></span></li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n\n                                                        <form>\n                                                            <label>Add A Protege</label>\n                                                            {this.state.editMentorDataProteges ?\n                                                                <div>\n                                                                    <select id=\"protegeDropDownMenu\" value={this.state.protegeToAdd} onChange={this.handleInputChange} name=\"protegeToAdd\">\n                                                                        <option value=\"none\">--Select a Protege to Add--</option>\n                                                                        {this.state.proteges.map(protege => (<option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>))}\n                                                                    </select>\n                                                                    <button onClick={this.addProtegeToMentor} className=\"btn btn-outline-dark btn-sm\">Assign Protege</button>\n                                                                    <button onClick={this.removeProtegeFromMentor} className=\"btn btn-outline-danger btn-sm\">Remove Protege</button>\n                                                                </div>\n                                                                : null}\n\n                                                        </form>\n                                                    </div>\n\n\n                                                    : null}\n\n\n\n                                                {/* <EditMentorForm proteges={this.state.proteges} /> */}\n                                            </div>\n\n                                            <br />\n                                            <div className=\"col-12 card\" style={{ color: 'black', textAlign: 'center', margin: 0, padding: 40, overflow: 'auto', backgroundColor: 'rgba(255,255,255,0.8)' }}>\n                                                <h4>Update Protege </h4>\n                                                <p style={{ textAlign: 'center' }}>(Choose a Protege to begin)</p>\n                                                {this.state.proteges ?\n                                                    <select value={this.state.protegeSelected} onChange={this.handleProtegeSelection} name=\"protegeSelected\">\n                                                        <option key={\"none\"} value={\"none\"}>--Select a Protege--</option>\n                                                        {this.state.proteges.map(protege => (\n                                                            <option key={protege._id} value={protege._id}>{protege.firstName} {protege.lastName}</option>\n                                                        ))}\n                                                    </select>\n                                                    : null}\n                                                {this.state.protegeSelectedData ?\n                                                    <div><h5>Current Mentors:\n                                        {/* {this.state.protegeSelectedData.mentor} */}\n                                                    </h5>\n\n                                                        <div style={{ textAlign: 'left' }}>\n                                                            <ul>\n                                                                {this.state.editProtegeDataMentors.map(mentor => (\n                                                                    <li key={mentor._id}>{mentor.firstName} {mentor.lastName} <span></span></li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n\n                                                        <form>\n                                                            <label>Add A Mentor</label>\n                                                            {this.state.mentors ?\n                                                                <div>\n                                                                    <select id=\"mentorsDropDownMenu\" value={this.state.mentorToAdd} onChange={this.handleInputChange} name=\"mentorToAdd\">\n                                                                        <option value=\"none\">--Select a Mentor--</option>\n                                                                        {this.state.mentors.map(mentor => (<option key={mentor._id} value={mentor._id}>{mentor.firstName} {mentor.lastName}</option>))}\n                                                                    </select>\n                                                                    <button onClick={this.addMentorToProtege} className=\"btn btn-outline-dark btn-sm\">Assign Mentor</button>\n                                                                    <button onClick={this.removeMentorFromProtege} className=\"btn btn-outline-danger btn-sm\">Remove Mentor</button>\n                                                                </div>\n                                                                : null}\n                                                        </form>\n                                                    </div>\n                                                    : null}\n\n\n\n                                                {/* <EditMentorForm proteges={this.state.proteges} /> */}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                : null}\n\n                            {this.state.showAnalyticsTool ?\n                                <ManagerDataViewer\n                                    allMentorData={this.state.mentors}\n                                    allProtegeData={this.state.proteges}\n                                    mentors={this.state.mentors}\n                                    proteges={this.state.proteges}\n                                />\n                                : null}\n\n                        </div>\n                        <div className=\"col-lg-1\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </div >\n\n        )\n    }\n}\n\nexport default ManagerDash","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Home from \"./pages/Home\";\nimport ProtegeDash from \"./pages/ProtegeDash\";\nimport MentorDash from \"./pages/MentorDash\";\nimport ManagerDash from \"./pages/ManagerDash\";\nimport fire from \"./config/Fire\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      user: \"\",\n    }\n  }\n\n  componentDidMount() {\n    // console.log(\"Component Mounted Home\");\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      // console.log(user);\n      if (user) {\n        this.setState({\n          user: user\n        })\n      } else {\n\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/protege\">\n              <ProtegeDash user={this.state.user}/>\n            </Route>\n            <Route exact path=\"/mentor\">\n              <MentorDash user={this.state.user} />\n            </Route>\n            <Route exact path=\"/manager\">\n              <ManagerDash user={this.state.user} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n\n\n  \n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}